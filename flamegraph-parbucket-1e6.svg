<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="1101016323104"><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (347,648,577 samples, 0.03%)</title><rect x="0.0806%" y="485" width="0.0316%" height="15" fill="rgb(227,0,7)" fg:x="887863003" fg:w="347648577"/><text x="0.3306%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (129,026,470 samples, 0.01%)</title><rect x="0.1125%" y="485" width="0.0117%" height="15" fill="rgb(217,0,24)" fg:x="1238302381" fg:w="129026470"/><text x="0.3625%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,536,244,344 samples, 0.14%)</title><rect x="0.1242%" y="453" width="0.1395%" height="15" fill="rgb(221,193,54)" fg:x="1367328851" fg:w="1536244344"/><text x="0.3742%" y="463.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1,536,244,344 samples, 0.14%)</title><rect x="0.1242%" y="437" width="0.1395%" height="15" fill="rgb(248,212,6)" fg:x="1367328851" fg:w="1536244344"/><text x="0.3742%" y="447.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1,536,244,344 samples, 0.14%)</title><rect x="0.1242%" y="421" width="0.1395%" height="15" fill="rgb(208,68,35)" fg:x="1367328851" fg:w="1536244344"/><text x="0.3742%" y="431.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,536,244,344 samples, 0.14%)</title><rect x="0.1242%" y="405" width="0.1395%" height="15" fill="rgb(232,128,0)" fg:x="1367328851" fg:w="1536244344"/><text x="0.3742%" y="415.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_bytes (1,536,244,344 samples, 0.14%)</title><rect x="0.1242%" y="389" width="0.1395%" height="15" fill="rgb(207,160,47)" fg:x="1367328851" fg:w="1536244344"/><text x="0.3742%" y="399.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_bytes (1,536,244,344 samples, 0.14%)</title><rect x="0.1242%" y="373" width="0.1395%" height="15" fill="rgb(228,23,34)" fg:x="1367328851" fg:w="1536244344"/><text x="0.3742%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (336,536,190 samples, 0.03%)</title><rect x="0.3913%" y="341" width="0.0306%" height="15" fill="rgb(218,30,26)" fg:x="4308528951" fg:w="336536190"/><text x="0.6413%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (308,873,428 samples, 0.03%)</title><rect x="0.3938%" y="325" width="0.0281%" height="15" fill="rgb(220,122,19)" fg:x="4336191713" fg:w="308873428"/><text x="0.6438%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (308,873,428 samples, 0.03%)</title><rect x="0.3938%" y="309" width="0.0281%" height="15" fill="rgb(250,228,42)" fg:x="4336191713" fg:w="308873428"/><text x="0.6438%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (175,932,990 samples, 0.02%)</title><rect x="0.4352%" y="309" width="0.0160%" height="15" fill="rgb(240,193,28)" fg:x="4792033493" fg:w="175932990"/><text x="0.6852%" y="319.50"></text></g><g><title>csv::byte_record::Bounds::ends (429,538,809 samples, 0.04%)</title><rect x="0.4225%" y="341" width="0.0390%" height="15" fill="rgb(216,20,37)" fg:x="4651419958" fg:w="429538809"/><text x="0.6725%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (288,925,274 samples, 0.03%)</title><rect x="0.4352%" y="325" width="0.0262%" height="15" fill="rgb(206,188,39)" fg:x="4792033493" fg:w="288925274"/><text x="0.6852%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (112,992,284 samples, 0.01%)</title><rect x="0.4512%" y="309" width="0.0103%" height="15" fill="rgb(217,207,13)" fg:x="4967966483" fg:w="112992284"/><text x="0.7012%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (112,992,284 samples, 0.01%)</title><rect x="0.4512%" y="293" width="0.0103%" height="15" fill="rgb(231,73,38)" fg:x="4967966483" fg:w="112992284"/><text x="0.7012%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (112,992,284 samples, 0.01%)</title><rect x="0.4512%" y="277" width="0.0103%" height="15" fill="rgb(225,20,46)" fg:x="4967966483" fg:w="112992284"/><text x="0.7012%" y="287.50"></text></g><g><title>serde::de::MapAccess::next_key (3,716,527,237 samples, 0.34%)</title><rect x="0.1242%" y="485" width="0.3376%" height="15" fill="rgb(210,31,41)" fg:x="1367328851" fg:w="3716527237"/><text x="0.3742%" y="495.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_key_seed (3,716,527,237 samples, 0.34%)</title><rect x="0.1242%" y="469" width="0.3376%" height="15" fill="rgb(221,200,47)" fg:x="1367328851" fg:w="3716527237"/><text x="0.3742%" y="479.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_header_bytes (2,104,115,974 samples, 0.19%)</title><rect x="0.2706%" y="453" width="0.1911%" height="15" fill="rgb(226,26,5)" fg:x="2979740114" fg:w="2104115974"/><text x="0.5206%" y="463.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header_bytes (2,104,115,974 samples, 0.19%)</title><rect x="0.2706%" y="437" width="0.1911%" height="15" fill="rgb(249,33,26)" fg:x="2979740114" fg:w="2104115974"/><text x="0.5206%" y="447.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header (2,104,115,974 samples, 0.19%)</title><rect x="0.2706%" y="421" width="0.1911%" height="15" fill="rgb(235,183,28)" fg:x="2979740114" fg:w="2104115974"/><text x="0.5206%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,104,115,974 samples, 0.19%)</title><rect x="0.2706%" y="405" width="0.1911%" height="15" fill="rgb(221,5,38)" fg:x="2979740114" fg:w="2104115974"/><text x="0.5206%" y="415.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header::{{closure}} (2,104,115,974 samples, 0.19%)</title><rect x="0.2706%" y="389" width="0.1911%" height="15" fill="rgb(247,18,42)" fg:x="2979740114" fg:w="2104115974"/><text x="0.5206%" y="399.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (2,104,115,974 samples, 0.19%)</title><rect x="0.2706%" y="373" width="0.1911%" height="15" fill="rgb(241,131,45)" fg:x="2979740114" fg:w="2104115974"/><text x="0.5206%" y="383.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (2,104,115,974 samples, 0.19%)</title><rect x="0.2706%" y="357" width="0.1911%" height="15" fill="rgb(249,31,29)" fg:x="2979740114" fg:w="2104115974"/><text x="0.5206%" y="367.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (5,163,836,042 samples, 0.47%)</title><rect x="0.0190%" y="501" width="0.4690%" height="15" fill="rgb(225,111,53)" fg:x="208811865" fg:w="5163836042"/><text x="0.2690%" y="511.50"></text></g><g><title>serde::de::MapAccess::next_value (288,791,819 samples, 0.03%)</title><rect x="0.4617%" y="485" width="0.0262%" height="15" fill="rgb(238,160,17)" fg:x="5083856088" fg:w="288791819"/><text x="0.7117%" y="495.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_value_seed (288,791,819 samples, 0.03%)</title><rect x="0.4617%" y="469" width="0.0262%" height="15" fill="rgb(214,148,48)" fg:x="5083856088" fg:w="288791819"/><text x="0.7117%" y="479.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (5,375,574,367 samples, 0.49%)</title><rect x="0.0000%" y="517" width="0.4882%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="5375574367"/><text x="0.2500%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2,668,480,901 samples, 0.24%)</title><rect x="0.7068%" y="469" width="0.2424%" height="15" fill="rgb(209,103,24)" fg:x="7781466215" fg:w="2668480901"/><text x="0.9568%" y="479.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (2,668,480,901 samples, 0.24%)</title><rect x="0.7068%" y="453" width="0.2424%" height="15" fill="rgb(229,88,8)" fg:x="7781466215" fg:w="2668480901"/><text x="0.9568%" y="463.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2,908,747,294 samples, 0.26%)</title><rect x="0.6956%" y="485" width="0.2642%" height="15" fill="rgb(213,181,19)" fg:x="7658223558" fg:w="2908747294"/><text x="0.9456%" y="495.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (117,023,736 samples, 0.01%)</title><rect x="0.9491%" y="469" width="0.0106%" height="15" fill="rgb(254,191,54)" fg:x="10449947116" fg:w="117023736"/><text x="1.1991%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,945,920,116 samples, 0.18%)</title><rect x="0.9597%" y="485" width="0.1767%" height="15" fill="rgb(241,83,37)" fg:x="10566970852" fg:w="1945920116"/><text x="1.2097%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,945,920,116 samples, 0.18%)</title><rect x="0.9597%" y="469" width="0.1767%" height="15" fill="rgb(233,36,39)" fg:x="10566970852" fg:w="1945920116"/><text x="1.2097%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2,980,084,499 samples, 0.27%)</title><rect x="1.1487%" y="453" width="0.2707%" height="15" fill="rgb(226,3,54)" fg:x="12647206800" fg:w="2980084499"/><text x="1.3987%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (2,980,084,499 samples, 0.27%)</title><rect x="1.1487%" y="437" width="0.2707%" height="15" fill="rgb(245,192,40)" fg:x="12647206800" fg:w="2980084499"/><text x="1.3987%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (319,079,791 samples, 0.03%)</title><rect x="1.4194%" y="453" width="0.0290%" height="15" fill="rgb(238,167,29)" fg:x="15627291299" fg:w="319079791"/><text x="1.6694%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,485,986,406 samples, 0.32%)</title><rect x="1.1365%" y="485" width="0.3166%" height="15" fill="rgb(232,182,51)" fg:x="12512890968" fg:w="3485986406"/><text x="1.3865%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3,485,986,406 samples, 0.32%)</title><rect x="1.1365%" y="469" width="0.3166%" height="15" fill="rgb(231,60,39)" fg:x="12512890968" fg:w="3485986406"/><text x="1.3865%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9,976,116,999 samples, 0.91%)</title><rect x="0.5480%" y="501" width="0.9061%" height="15" fill="rgb(208,69,12)" fg:x="6033943760" fg:w="9976116999"/><text x="0.7980%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,636,458,441 samples, 0.97%)</title><rect x="0.4885%" y="517" width="0.9661%" height="15" fill="rgb(235,93,37)" fg:x="5378389498" fg:w="10636458441"/><text x="0.7385%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (329,387,795 samples, 0.03%)</title><rect x="1.6002%" y="389" width="0.0299%" height="15" fill="rgb(213,116,39)" fg:x="17618668218" fg:w="329387795"/><text x="1.8502%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (323,750,678 samples, 0.03%)</title><rect x="1.6007%" y="373" width="0.0294%" height="15" fill="rgb(222,207,29)" fg:x="17624305335" fg:w="323750678"/><text x="1.8507%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (323,750,678 samples, 0.03%)</title><rect x="1.6007%" y="357" width="0.0294%" height="15" fill="rgb(206,96,30)" fg:x="17624305335" fg:w="323750678"/><text x="1.8507%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (134,633,440 samples, 0.01%)</title><rect x="1.6440%" y="373" width="0.0122%" height="15" fill="rgb(218,138,4)" fg:x="18101133273" fg:w="134633440"/><text x="1.8940%" y="383.50"></text></g><g><title>csv::byte_record::Bounds::ends (287,785,929 samples, 0.03%)</title><rect x="1.6304%" y="389" width="0.0261%" height="15" fill="rgb(250,191,14)" fg:x="17950828494" fg:w="287785929"/><text x="1.8804%" y="399.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (1,406,811,145 samples, 0.13%)</title><rect x="1.5288%" y="421" width="0.1278%" height="15" fill="rgb(239,60,40)" fg:x="16831821726" fg:w="1406811145"/><text x="1.7788%" y="431.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (1,406,811,145 samples, 0.13%)</title><rect x="1.5288%" y="405" width="0.1278%" height="15" fill="rgb(206,27,48)" fg:x="16831821726" fg:w="1406811145"/><text x="1.7788%" y="415.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field (1,949,828,461 samples, 0.18%)</title><rect x="1.4997%" y="469" width="0.1771%" height="15" fill="rgb(225,35,8)" fg:x="16511740081" fg:w="1949828461"/><text x="1.7497%" y="479.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (1,949,828,461 samples, 0.18%)</title><rect x="1.4997%" y="453" width="0.1771%" height="15" fill="rgb(250,213,24)" fg:x="16511740081" fg:w="1949828461"/><text x="1.7497%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,722,010,840 samples, 0.16%)</title><rect x="1.5204%" y="437" width="0.1564%" height="15" fill="rgb(247,123,22)" fg:x="16739557702" fg:w="1722010840"/><text x="1.7704%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (222,935,671 samples, 0.02%)</title><rect x="1.6565%" y="421" width="0.0202%" height="15" fill="rgb(231,138,38)" fg:x="18238632871" fg:w="222935671"/><text x="1.9065%" y="431.50"></text></g><g><title>core::mem::replace (222,935,671 samples, 0.02%)</title><rect x="1.6565%" y="405" width="0.0202%" height="15" fill="rgb(231,145,46)" fg:x="18238632871" fg:w="222935671"/><text x="1.9065%" y="415.50"></text></g><g><title>core::ptr::write (166,257,436 samples, 0.02%)</title><rect x="1.6617%" y="389" width="0.0151%" height="15" fill="rgb(251,118,11)" fg:x="18295311106" fg:w="166257436"/><text x="1.9117%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for f64&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_f64 (230,392,380 samples, 0.02%)</title><rect x="1.6768%" y="469" width="0.0209%" height="15" fill="rgb(217,147,25)" fg:x="18461568542" fg:w="230392380"/><text x="1.9268%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (271,173,828 samples, 0.02%)</title><rect x="1.6977%" y="469" width="0.0246%" height="15" fill="rgb(247,81,37)" fg:x="18691960922" fg:w="271173828"/><text x="1.9477%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,151,975,588 samples, 0.29%)</title><rect x="1.4546%" y="517" width="0.2863%" height="15" fill="rgb(209,12,38)" fg:x="16014847939" fg:w="3151975588"/><text x="1.7046%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f64&gt;::deserialize (2,655,083,446 samples, 0.24%)</title><rect x="1.4997%" y="501" width="0.2411%" height="15" fill="rgb(227,1,9)" fg:x="16511740081" fg:w="2655083446"/><text x="1.7497%" y="511.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f64 (2,655,083,446 samples, 0.24%)</title><rect x="1.4997%" y="485" width="0.2411%" height="15" fill="rgb(248,47,43)" fg:x="16511740081" fg:w="2655083446"/><text x="1.7497%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (203,688,777 samples, 0.02%)</title><rect x="1.7223%" y="469" width="0.0185%" height="15" fill="rgb(221,10,30)" fg:x="18963134750" fg:w="203688777"/><text x="1.9723%" y="479.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (445,553,619 samples, 0.04%)</title><rect x="1.7767%" y="453" width="0.0405%" height="15" fill="rgb(210,229,1)" fg:x="19562169137" fg:w="445553619"/><text x="2.0267%" y="463.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (637,759,741 samples, 0.06%)</title><rect x="1.7593%" y="501" width="0.0579%" height="15" fill="rgb(222,148,37)" fg:x="19369978848" fg:w="637759741"/><text x="2.0093%" y="511.50"></text></g><g><title>csv::string_record::StringRecord::read (603,176,992 samples, 0.05%)</title><rect x="1.7624%" y="485" width="0.0548%" height="15" fill="rgb(234,67,33)" fg:x="19404561597" fg:w="603176992"/><text x="2.0124%" y="495.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (560,832,987 samples, 0.05%)</title><rect x="1.7663%" y="469" width="0.0509%" height="15" fill="rgb(247,98,35)" fg:x="19446905602" fg:w="560832987"/><text x="2.0163%" y="479.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (849,357,270 samples, 0.08%)</title><rect x="1.7408%" y="517" width="0.0771%" height="15" fill="rgb(247,138,52)" fg:x="19166823527" fg:w="849357270"/><text x="1.9908%" y="527.50"></text></g><g><title>&lt;ordered_float::OrderedFloat&lt;T&gt; as core::ops::arith::Div&lt;T&gt;&gt;::div (423,278,189 samples, 0.04%)</title><rect x="1.8869%" y="485" width="0.0384%" height="15" fill="rgb(213,79,30)" fg:x="20775160308" fg:w="423278189"/><text x="2.1369%" y="495.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (423,278,189 samples, 0.04%)</title><rect x="1.8869%" y="469" width="0.0384%" height="15" fill="rgb(246,177,23)" fg:x="20775160308" fg:w="423278189"/><text x="2.1369%" y="479.50"></text></g><g><title>page_fault (122,658,768 samples, 0.01%)</title><rect x="1.9613%" y="453" width="0.0111%" height="15" fill="rgb(230,62,27)" fg:x="21594062879" fg:w="122658768"/><text x="2.2113%" y="463.50"></text></g><g><title>do_page_fault (119,803,706 samples, 0.01%)</title><rect x="1.9615%" y="437" width="0.0109%" height="15" fill="rgb(216,154,8)" fg:x="21596917941" fg:w="119803706"/><text x="2.2115%" y="447.50"></text></g><g><title>__do_page_fault (119,803,706 samples, 0.01%)</title><rect x="1.9615%" y="421" width="0.0109%" height="15" fill="rgb(244,35,45)" fg:x="21596917941" fg:w="119803706"/><text x="2.2115%" y="431.50"></text></g><g><title>do_user_addr_fault (119,803,706 samples, 0.01%)</title><rect x="1.9615%" y="405" width="0.0109%" height="15" fill="rgb(251,115,12)" fg:x="21596917941" fg:w="119803706"/><text x="2.2115%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (529,556,403 samples, 0.05%)</title><rect x="1.9254%" y="485" width="0.0481%" height="15" fill="rgb(240,54,50)" fg:x="21198438497" fg:w="529556403"/><text x="2.1754%" y="495.50"></text></g><g><title>core::ptr::write (272,432,684 samples, 0.02%)</title><rect x="1.9487%" y="469" width="0.0247%" height="15" fill="rgb(233,84,52)" fg:x="21455562216" fg:w="272432684"/><text x="2.1987%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (2,213,223,922 samples, 0.20%)</title><rect x="1.9842%" y="437" width="0.2010%" height="15" fill="rgb(207,117,47)" fg:x="21845988510" fg:w="2213223922"/><text x="2.2342%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (2,213,223,922 samples, 0.20%)</title><rect x="1.9842%" y="421" width="0.2010%" height="15" fill="rgb(249,43,39)" fg:x="21845988510" fg:w="2213223922"/><text x="2.2342%" y="431.50"></text></g><g><title>_raw_spin_lock (317,944,244 samples, 0.03%)</title><rect x="2.3107%" y="357" width="0.0289%" height="15" fill="rgb(209,38,44)" fg:x="25441451964" fg:w="317944244"/><text x="2.5607%" y="367.50"></text></g><g><title>_raw_spin_lock (15,908,933,120 samples, 1.44%)</title><rect x="2.3994%" y="341" width="1.4449%" height="15" fill="rgb(236,212,23)" fg:x="26417274302" fg:w="15908933120"/><text x="2.6494%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (15,906,094,159 samples, 1.44%)</title><rect x="2.3996%" y="325" width="1.4447%" height="15" fill="rgb(242,79,21)" fg:x="26420113263" fg:w="15906094159"/><text x="2.6496%" y="335.50"></text></g><g><title>get_futex_key (124,546,959 samples, 0.01%)</title><rect x="3.8443%" y="341" width="0.0113%" height="15" fill="rgb(211,96,35)" fg:x="42326207422" fg:w="124546959"/><text x="4.0943%" y="351.50"></text></g><g><title>mark_wake_futex (208,204,555 samples, 0.02%)</title><rect x="3.8558%" y="341" width="0.0189%" height="15" fill="rgb(253,215,40)" fg:x="42453097773" fg:w="208204555"/><text x="4.1058%" y="351.50"></text></g><g><title>select_idle_sibling (219,454,737 samples, 0.02%)</title><rect x="4.0266%" y="293" width="0.0199%" height="15" fill="rgb(211,81,21)" fg:x="44333658516" fg:w="219454737"/><text x="4.2766%" y="303.50"></text></g><g><title>select_idle_sibling.part.0 (158,413,492 samples, 0.01%)</title><rect x="4.0322%" y="277" width="0.0144%" height="15" fill="rgb(208,190,38)" fg:x="44394699761" fg:w="158413492"/><text x="4.2822%" y="287.50"></text></g><g><title>select_task_rq_fair (414,447,492 samples, 0.04%)</title><rect x="4.0104%" y="309" width="0.0376%" height="15" fill="rgb(235,213,38)" fg:x="44154924463" fg:w="414447492"/><text x="4.2604%" y="319.50"></text></g><g><title>enqueue_entity (226,182,085 samples, 0.02%)</title><rect x="4.0557%" y="261" width="0.0205%" height="15" fill="rgb(237,122,38)" fg:x="44654112635" fg:w="226182085"/><text x="4.3057%" y="271.50"></text></g><g><title>enqueue_task_fair (319,609,376 samples, 0.03%)</title><rect x="4.0519%" y="277" width="0.0290%" height="15" fill="rgb(244,218,35)" fg:x="44612549824" fg:w="319609376"/><text x="4.3019%" y="287.50"></text></g><g><title>activate_task (594,485,585 samples, 0.05%)</title><rect x="4.0513%" y="293" width="0.0540%" height="15" fill="rgb(240,68,47)" fg:x="44605368620" fg:w="594485585"/><text x="4.3013%" y="303.50"></text></g><g><title>psi_task_change (267,695,005 samples, 0.02%)</title><rect x="4.0810%" y="277" width="0.0243%" height="15" fill="rgb(210,16,53)" fg:x="44932159200" fg:w="267695005"/><text x="4.3310%" y="287.50"></text></g><g><title>ttwu_do_activate (682,216,815 samples, 0.06%)</title><rect x="4.0508%" y="309" width="0.0620%" height="15" fill="rgb(235,124,12)" fg:x="44599833426" fg:w="682216815"/><text x="4.3008%" y="319.50"></text></g><g><title>try_to_wake_up (2,645,919,652 samples, 0.24%)</title><rect x="3.8822%" y="325" width="0.2403%" height="15" fill="rgb(224,169,11)" fg:x="42743536464" fg:w="2645919652"/><text x="4.1322%" y="335.50"></text></g><g><title>futex_wake (19,621,957,278 samples, 1.78%)</title><rect x="2.3406%" y="357" width="1.7822%" height="15" fill="rgb(250,166,2)" fg:x="25770385747" fg:w="19621957278"/><text x="2.5906%" y="367.50">f..</text></g><g><title>wake_up_q (2,717,996,433 samples, 0.25%)</title><rect x="3.8759%" y="341" width="0.2469%" height="15" fill="rgb(242,216,29)" fg:x="42674346592" fg:w="2717996433"/><text x="4.1259%" y="351.50"></text></g><g><title>do_futex (20,125,108,977 samples, 1.83%)</title><rect x="2.3050%" y="373" width="1.8279%" height="15" fill="rgb(230,116,27)" fg:x="25378482930" fg:w="20125108977"/><text x="2.5550%" y="383.50">d..</text></g><g><title>__x64_sys_futex (20,212,439,810 samples, 1.84%)</title><rect x="2.2980%" y="389" width="1.8358%" height="15" fill="rgb(228,99,48)" fg:x="25300939319" fg:w="20212439810"/><text x="2.5480%" y="399.50">_..</text></g><g><title>do_syscall_64 (21,262,094,200 samples, 1.93%)</title><rect x="2.2102%" y="405" width="1.9311%" height="15" fill="rgb(253,11,6)" fg:x="24334979487" fg:w="21262094200"/><text x="2.4602%" y="415.50">d..</text></g><g><title>entry_SYSCALL_64_after_hwframe (21,383,420,571 samples, 1.94%)</title><rect x="2.1997%" y="421" width="1.9422%" height="15" fill="rgb(247,143,39)" fg:x="24218736275" fg:w="21383420571"/><text x="2.4497%" y="431.50">e..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt;&gt; (24,115,139,005 samples, 2.19%)</title><rect x="1.9739%" y="485" width="2.1903%" height="15" fill="rgb(236,97,10)" fg:x="21733391830" fg:w="24115139005"/><text x="2.2239%" y="495.50">c..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24,115,139,005 samples, 2.19%)</title><rect x="1.9739%" y="469" width="2.1903%" height="15" fill="rgb(233,208,19)" fg:x="21733391830" fg:w="24115139005"/><text x="2.2239%" y="479.50">&lt;..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (24,071,166,508 samples, 2.19%)</title><rect x="1.9779%" y="453" width="2.1863%" height="15" fill="rgb(216,164,2)" fg:x="21777364327" fg:w="24071166508"/><text x="2.2279%" y="463.50">s..</text></g><g><title>syscall (21,783,976,509 samples, 1.98%)</title><rect x="2.1857%" y="437" width="1.9785%" height="15" fill="rgb(220,129,5)" fg:x="24064554326" fg:w="21783976509"/><text x="2.4357%" y="447.50">s..</text></g><g><title>syscall_return_via_sysret (231,735,317 samples, 0.02%)</title><rect x="4.1432%" y="421" width="0.0210%" height="15" fill="rgb(242,17,10)" fg:x="45616795518" fg:w="231735317"/><text x="4.3932%" y="431.50"></text></g><g><title>std::sync::poison::Flag::get (111,776,627 samples, 0.01%)</title><rect x="4.1713%" y="437" width="0.0102%" height="15" fill="rgb(242,107,0)" fg:x="45926638128" fg:w="111776627"/><text x="4.4213%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (111,776,627 samples, 0.01%)</title><rect x="4.1713%" y="421" width="0.0102%" height="15" fill="rgb(251,28,31)" fg:x="45926638128" fg:w="111776627"/><text x="4.4213%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (111,776,627 samples, 0.01%)</title><rect x="4.1713%" y="405" width="0.0102%" height="15" fill="rgb(233,223,10)" fg:x="45926638128" fg:w="111776627"/><text x="4.4213%" y="415.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (286,068,926 samples, 0.03%)</title><rect x="4.1708%" y="469" width="0.0260%" height="15" fill="rgb(215,21,27)" fg:x="45921473600" fg:w="286068926"/><text x="4.4208%" y="479.50"></text></g><g><title>std::sync::poison::Flag::guard (286,068,926 samples, 0.03%)</title><rect x="4.1708%" y="453" width="0.0260%" height="15" fill="rgb(232,23,21)" fg:x="45921473600" fg:w="286068926"/><text x="4.4208%" y="463.50"></text></g><g><title>std::thread::panicking (169,127,771 samples, 0.02%)</title><rect x="4.1814%" y="437" width="0.0154%" height="15" fill="rgb(244,5,23)" fg:x="46038414755" fg:w="169127771"/><text x="4.4314%" y="447.50"></text></g><g><title>std::panicking::panicking (169,127,771 samples, 0.02%)</title><rect x="4.1814%" y="421" width="0.0154%" height="15" fill="rgb(226,81,46)" fg:x="46038414755" fg:w="169127771"/><text x="4.4314%" y="431.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (169,127,771 samples, 0.02%)</title><rect x="4.1814%" y="405" width="0.0154%" height="15" fill="rgb(247,70,30)" fg:x="46038414755" fg:w="169127771"/><text x="4.4314%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (158,453,848 samples, 0.01%)</title><rect x="4.1824%" y="389" width="0.0144%" height="15" fill="rgb(212,68,19)" fg:x="46049088678" fg:w="158453848"/><text x="4.4324%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (158,453,848 samples, 0.01%)</title><rect x="4.1824%" y="373" width="0.0144%" height="15" fill="rgb(240,187,13)" fg:x="46049088678" fg:w="158453848"/><text x="4.4324%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2,596,363,193 samples, 0.24%)</title><rect x="4.2059%" y="453" width="0.2358%" height="15" fill="rgb(223,113,26)" fg:x="46307420559" fg:w="2596363193"/><text x="4.4559%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2,596,363,193 samples, 0.24%)</title><rect x="4.2059%" y="437" width="0.2358%" height="15" fill="rgb(206,192,2)" fg:x="46307420559" fg:w="2596363193"/><text x="4.4559%" y="447.50"></text></g><g><title>QUEUE_TEST::parallelbucketqueue::ParBqueue&lt;&amp;T&gt;::bulk_push::{{closure}} (28,336,010,941 samples, 2.57%)</title><rect x="1.8686%" y="501" width="2.5736%" height="15" fill="rgb(241,108,4)" fg:x="20573359851" fg:w="28336010941"/><text x="2.1186%" y="511.50">QU..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3,004,626,569 samples, 0.27%)</title><rect x="4.1693%" y="485" width="0.2729%" height="15" fill="rgb(247,173,49)" fg:x="45904744223" fg:w="3004626569"/><text x="4.4193%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (2,701,828,266 samples, 0.25%)</title><rect x="4.1968%" y="469" width="0.2454%" height="15" fill="rgb(224,114,35)" fg:x="46207542526" fg:w="2701828266"/><text x="4.4468%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (28,898,292,926 samples, 2.62%)</title><rect x="1.8180%" y="517" width="2.6247%" height="15" fill="rgb(245,159,27)" fg:x="20016180797" fg:w="28898292926"/><text x="2.0680%" y="527.50">&lt;r..</text></g><g><title>&lt;rayon_core::latch::SpinLatch as rayon_core::latch::Latch&gt;::set (405,802,259 samples, 0.04%)</title><rect x="4.4460%" y="501" width="0.0369%" height="15" fill="rgb(245,172,44)" fg:x="48950760276" fg:w="405802259"/><text x="4.6960%" y="511.50"></text></g><g><title>core::ptr::read (295,082,959 samples, 0.03%)</title><rect x="4.4828%" y="469" width="0.0268%" height="15" fill="rgb(236,23,11)" fg:x="49356562535" fg:w="295082959"/><text x="4.7328%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (297,281,364 samples, 0.03%)</title><rect x="4.4828%" y="501" width="0.0270%" height="15" fill="rgb(205,117,38)" fg:x="49356562535" fg:w="297281364"/><text x="4.7328%" y="511.50"></text></g><g><title>core::mem::replace (297,281,364 samples, 0.03%)</title><rect x="4.4828%" y="485" width="0.0270%" height="15" fill="rgb(237,72,25)" fg:x="49356562535" fg:w="297281364"/><text x="4.7328%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::job::JobResult&lt;core::option::Option&lt;usize&gt;&gt;&gt; (247,485,761 samples, 0.02%)</title><rect x="4.5138%" y="501" width="0.0225%" height="15" fill="rgb(244,70,9)" fg:x="49697484125" fg:w="247485761"/><text x="4.7638%" y="511.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (191,409,980 samples, 0.02%)</title><rect x="4.5363%" y="501" width="0.0174%" height="15" fill="rgb(217,125,39)" fg:x="49944969886" fg:w="191409980"/><text x="4.7863%" y="511.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (191,409,980 samples, 0.02%)</title><rect x="4.5363%" y="485" width="0.0174%" height="15" fill="rgb(235,36,10)" fg:x="49944969886" fg:w="191409980"/><text x="4.7863%" y="495.50"></text></g><g><title>std::panic::catch_unwind (191,409,980 samples, 0.02%)</title><rect x="4.5363%" y="469" width="0.0174%" height="15" fill="rgb(251,123,47)" fg:x="49944969886" fg:w="191409980"/><text x="4.7863%" y="479.50"></text></g><g><title>std::panicking::try (191,409,980 samples, 0.02%)</title><rect x="4.5363%" y="453" width="0.0174%" height="15" fill="rgb(221,13,13)" fg:x="49944969886" fg:w="191409980"/><text x="4.7863%" y="463.50"></text></g><g><title>std::panicking::try::do_call (160,332,105 samples, 0.01%)</title><rect x="4.5391%" y="437" width="0.0146%" height="15" fill="rgb(238,131,9)" fg:x="49976047761" fg:w="160332105"/><text x="4.7891%" y="447.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (160,332,105 samples, 0.01%)</title><rect x="4.5391%" y="421" width="0.0146%" height="15" fill="rgb(211,50,8)" fg:x="49976047761" fg:w="160332105"/><text x="4.7891%" y="431.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (160,332,105 samples, 0.01%)</title><rect x="4.5391%" y="405" width="0.0146%" height="15" fill="rgb(245,182,24)" fg:x="49976047761" fg:w="160332105"/><text x="4.7891%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (160,332,105 samples, 0.01%)</title><rect x="4.5391%" y="389" width="0.0146%" height="15" fill="rgb(242,14,37)" fg:x="49976047761" fg:w="160332105"/><text x="4.7891%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (160,332,105 samples, 0.01%)</title><rect x="4.5391%" y="373" width="0.0146%" height="15" fill="rgb(246,228,12)" fg:x="49976047761" fg:w="160332105"/><text x="4.7891%" y="383.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,216,632,293 samples, 0.11%)</title><rect x="4.4442%" y="517" width="0.1105%" height="15" fill="rgb(213,55,15)" fg:x="48931216905" fg:w="1216632293"/><text x="4.6942%" y="527.50"></text></g><g><title>copy_user_enhanced_fast_string (890,626,269 samples, 0.08%)</title><rect x="4.6220%" y="261" width="0.0809%" height="15" fill="rgb(209,9,3)" fg:x="50888550642" fg:w="890626269"/><text x="4.8720%" y="271.50"></text></g><g><title>copy_page_to_iter (924,893,750 samples, 0.08%)</title><rect x="4.6191%" y="277" width="0.0840%" height="15" fill="rgb(230,59,30)" fg:x="50857275446" fg:w="924893750"/><text x="4.8691%" y="287.50"></text></g><g><title>mark_page_accessed (145,852,802 samples, 0.01%)</title><rect x="4.7034%" y="277" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="51785451734" fg:w="145852802"/><text x="4.9534%" y="287.50"></text></g><g><title>clear_page_erms (637,884,110 samples, 0.06%)</title><rect x="4.7339%" y="165" width="0.0579%" height="15" fill="rgb(220,109,13)" fg:x="52120745107" fg:w="637884110"/><text x="4.9839%" y="175.50"></text></g><g><title>get_page_from_freelist (817,190,748 samples, 0.07%)</title><rect x="4.7317%" y="181" width="0.0742%" height="15" fill="rgb(232,18,1)" fg:x="52097167107" fg:w="817190748"/><text x="4.9817%" y="191.50"></text></g><g><title>rmqueue (127,366,833 samples, 0.01%)</title><rect x="4.7944%" y="165" width="0.0116%" height="15" fill="rgb(215,41,42)" fg:x="52786991022" fg:w="127366833"/><text x="5.0444%" y="175.50"></text></g><g><title>__alloc_pages_nodemask (839,784,961 samples, 0.08%)</title><rect x="4.7302%" y="197" width="0.0763%" height="15" fill="rgb(224,123,36)" fg:x="52080287387" fg:w="839784961"/><text x="4.9802%" y="207.50"></text></g><g><title>__page_cache_alloc (976,939,770 samples, 0.09%)</title><rect x="4.7193%" y="229" width="0.0887%" height="15" fill="rgb(240,125,3)" fg:x="51960403566" fg:w="976939770"/><text x="4.9693%" y="239.50"></text></g><g><title>alloc_pages_current (959,512,210 samples, 0.09%)</title><rect x="4.7209%" y="213" width="0.0871%" height="15" fill="rgb(205,98,50)" fg:x="51977831126" fg:w="959512210"/><text x="4.9709%" y="223.50"></text></g><g><title>blk_mq_dispatch_rq_list (188,991,689 samples, 0.02%)</title><rect x="4.8107%" y="53" width="0.0172%" height="15" fill="rgb(205,185,37)" fg:x="52966297599" fg:w="188991689"/><text x="5.0607%" y="63.50"></text></g><g><title>scsi_queue_rq (180,952,117 samples, 0.02%)</title><rect x="4.8114%" y="37" width="0.0164%" height="15" fill="rgb(238,207,15)" fg:x="52974337171" fg:w="180952117"/><text x="5.0614%" y="47.50"></text></g><g><title>__blk_mq_run_hw_queue (212,978,850 samples, 0.02%)</title><rect x="4.8096%" y="117" width="0.0193%" height="15" fill="rgb(213,199,42)" fg:x="52954741892" fg:w="212978850"/><text x="5.0596%" y="127.50"></text></g><g><title>blk_mq_sched_dispatch_requests (212,978,850 samples, 0.02%)</title><rect x="4.8096%" y="101" width="0.0193%" height="15" fill="rgb(235,201,11)" fg:x="52954741892" fg:w="212978850"/><text x="5.0596%" y="111.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (212,978,850 samples, 0.02%)</title><rect x="4.8096%" y="85" width="0.0193%" height="15" fill="rgb(207,46,11)" fg:x="52954741892" fg:w="212978850"/><text x="5.0596%" y="95.50"></text></g><g><title>blk_mq_do_dispatch_sched (210,151,207 samples, 0.02%)</title><rect x="4.8099%" y="69" width="0.0191%" height="15" fill="rgb(241,35,35)" fg:x="52957569535" fg:w="210151207"/><text x="5.0599%" y="79.50"></text></g><g><title>blk_mq_run_hw_queue (224,498,991 samples, 0.02%)</title><rect x="4.8091%" y="149" width="0.0204%" height="15" fill="rgb(243,32,47)" fg:x="52948881362" fg:w="224498991"/><text x="5.0591%" y="159.50"></text></g><g><title>__blk_mq_delay_run_hw_queue (224,498,991 samples, 0.02%)</title><rect x="4.8091%" y="133" width="0.0204%" height="15" fill="rgb(247,202,23)" fg:x="52948881362" fg:w="224498991"/><text x="5.0591%" y="143.50"></text></g><g><title>blk_mq_sched_insert_requests (241,659,143 samples, 0.02%)</title><rect x="4.8091%" y="165" width="0.0219%" height="15" fill="rgb(219,102,11)" fg:x="52948881362" fg:w="241659143"/><text x="5.0591%" y="175.50"></text></g><g><title>blk_finish_plug (247,232,549 samples, 0.02%)</title><rect x="4.8088%" y="213" width="0.0225%" height="15" fill="rgb(243,110,44)" fg:x="52945981345" fg:w="247232549"/><text x="5.0588%" y="223.50"></text></g><g><title>blk_flush_plug_list (244,332,532 samples, 0.02%)</title><rect x="4.8091%" y="197" width="0.0222%" height="15" fill="rgb(222,74,54)" fg:x="52948881362" fg:w="244332532"/><text x="5.0591%" y="207.50"></text></g><g><title>blk_mq_flush_plug_list (244,332,532 samples, 0.02%)</title><rect x="4.8091%" y="181" width="0.0222%" height="15" fill="rgb(216,99,12)" fg:x="52948881362" fg:w="244332532"/><text x="5.0591%" y="191.50"></text></g><g><title>__add_to_page_cache_locked (271,037,350 samples, 0.02%)</title><rect x="4.8365%" y="165" width="0.0246%" height="15" fill="rgb(226,22,26)" fg:x="53250705538" fg:w="271037350"/><text x="5.0865%" y="175.50"></text></g><g><title>__pagevec_lru_add_fn (128,702,776 samples, 0.01%)</title><rect x="4.8634%" y="117" width="0.0117%" height="15" fill="rgb(217,163,10)" fg:x="53547040235" fg:w="128702776"/><text x="5.1134%" y="127.50"></text></g><g><title>lru_cache_add (159,830,051 samples, 0.01%)</title><rect x="4.8619%" y="165" width="0.0145%" height="15" fill="rgb(213,25,53)" fg:x="53530290794" fg:w="159830051"/><text x="5.1119%" y="175.50"></text></g><g><title>__lru_cache_add (157,113,416 samples, 0.01%)</title><rect x="4.8621%" y="149" width="0.0143%" height="15" fill="rgb(252,105,26)" fg:x="53533007429" fg:w="157113416"/><text x="5.1121%" y="159.50"></text></g><g><title>pagevec_lru_move_fn (154,417,441 samples, 0.01%)</title><rect x="4.8624%" y="133" width="0.0140%" height="15" fill="rgb(220,39,43)" fg:x="53535703404" fg:w="154417441"/><text x="5.1124%" y="143.50"></text></g><g><title>add_to_page_cache_lru (553,297,145 samples, 0.05%)</title><rect x="4.8344%" y="181" width="0.0503%" height="15" fill="rgb(229,68,48)" fg:x="53227997835" fg:w="553297145"/><text x="5.0844%" y="191.50"></text></g><g><title>read_pages (1,016,826,157 samples, 0.09%)</title><rect x="4.8086%" y="229" width="0.0924%" height="15" fill="rgb(252,8,32)" fg:x="52943028830" fg:w="1016826157"/><text x="5.0586%" y="239.50"></text></g><g><title>ext4_readpages (764,033,439 samples, 0.07%)</title><rect x="4.8315%" y="213" width="0.0694%" height="15" fill="rgb(223,20,43)" fg:x="53195821548" fg:w="764033439"/><text x="5.0815%" y="223.50"></text></g><g><title>ext4_mpage_readpages (764,033,439 samples, 0.07%)</title><rect x="4.8315%" y="197" width="0.0694%" height="15" fill="rgb(229,81,49)" fg:x="53195821548" fg:w="764033439"/><text x="5.0815%" y="207.50"></text></g><g><title>xa_load (116,931,878 samples, 0.01%)</title><rect x="4.9009%" y="229" width="0.0106%" height="15" fill="rgb(236,28,36)" fg:x="53959854987" fg:w="116931878"/><text x="5.1509%" y="239.50"></text></g><g><title>__do_page_cache_readahead (2,166,341,550 samples, 0.20%)</title><rect x="4.7172%" y="245" width="0.1968%" height="15" fill="rgb(249,185,26)" fg:x="51936906923" fg:w="2166341550"/><text x="4.9672%" y="255.50"></text></g><g><title>page_cache_async_readahead (2,177,501,902 samples, 0.20%)</title><rect x="4.7167%" y="277" width="0.1978%" height="15" fill="rgb(249,174,33)" fg:x="51931304536" fg:w="2177501902"/><text x="4.9667%" y="287.50"></text></g><g><title>ondemand_readahead (2,171,899,515 samples, 0.20%)</title><rect x="4.7172%" y="261" width="0.1973%" height="15" fill="rgb(233,201,37)" fg:x="51936906923" fg:w="2171899515"/><text x="4.9672%" y="271.50"></text></g><g><title>pagecache_get_page (280,744,994 samples, 0.03%)</title><rect x="4.9147%" y="277" width="0.0255%" height="15" fill="rgb(221,78,26)" fg:x="54111482347" fg:w="280744994"/><text x="5.1647%" y="287.50"></text></g><g><title>find_get_entry (269,204,726 samples, 0.02%)</title><rect x="4.9157%" y="261" width="0.0245%" height="15" fill="rgb(250,127,30)" fg:x="54123022615" fg:w="269204726"/><text x="5.1657%" y="271.50"></text></g><g><title>generic_file_buffered_read (3,707,515,553 samples, 0.34%)</title><rect x="4.6069%" y="293" width="0.3367%" height="15" fill="rgb(230,49,44)" fg:x="50722959162" fg:w="3707515553"/><text x="4.8569%" y="303.50"></text></g><g><title>ext4_file_read_iter (3,761,487,198 samples, 0.34%)</title><rect x="4.6028%" y="325" width="0.3416%" height="15" fill="rgb(229,67,23)" fg:x="50677655907" fg:w="3761487198"/><text x="4.8528%" y="335.50"></text></g><g><title>generic_file_read_iter (3,729,720,295 samples, 0.34%)</title><rect x="4.6057%" y="309" width="0.3388%" height="15" fill="rgb(249,83,47)" fg:x="50709422810" fg:w="3729720295"/><text x="4.8557%" y="319.50"></text></g><g><title>__vfs_read (3,793,444,401 samples, 0.34%)</title><rect x="4.6002%" y="357" width="0.3445%" height="15" fill="rgb(215,43,3)" fg:x="50648877182" fg:w="3793444401"/><text x="4.8502%" y="367.50"></text></g><g><title>new_sync_read (3,787,712,267 samples, 0.34%)</title><rect x="4.6007%" y="341" width="0.3440%" height="15" fill="rgb(238,154,13)" fg:x="50654609316" fg:w="3787712267"/><text x="4.8507%" y="351.50"></text></g><g><title>ksys_read (4,007,488,821 samples, 0.36%)</title><rect x="4.5915%" y="389" width="0.3640%" height="15" fill="rgb(219,56,2)" fg:x="50553497909" fg:w="4007488821"/><text x="4.8415%" y="399.50"></text></g><g><title>vfs_read (3,962,904,139 samples, 0.36%)</title><rect x="4.5956%" y="373" width="0.3599%" height="15" fill="rgb(233,0,4)" fg:x="50598082591" fg:w="3962904139"/><text x="4.8456%" y="383.50"></text></g><g><title>__x64_sys_read (4,010,618,444 samples, 0.36%)</title><rect x="4.5915%" y="405" width="0.3643%" height="15" fill="rgb(235,30,7)" fg:x="50553497909" fg:w="4010618444"/><text x="4.8415%" y="415.50"></text></g><g><title>do_syscall_64 (4,334,495,211 samples, 0.39%)</title><rect x="4.5629%" y="421" width="0.3937%" height="15" fill="rgb(250,79,13)" fg:x="50238075056" fg:w="4334495211"/><text x="4.8129%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,357,466,637 samples, 0.40%)</title><rect x="4.5611%" y="437" width="0.3958%" height="15" fill="rgb(211,146,34)" fg:x="50217923822" fg:w="4357466637"/><text x="4.8111%" y="447.50"></text></g><g><title>__libc_read (4,470,626,808 samples, 0.41%)</title><rect x="4.5581%" y="453" width="0.4060%" height="15" fill="rgb(228,22,38)" fg:x="50185931316" fg:w="4470626808"/><text x="4.8081%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (4,479,057,463 samples, 0.41%)</title><rect x="4.5581%" y="517" width="0.4068%" height="15" fill="rgb(235,168,5)" fg:x="50185931316" fg:w="4479057463"/><text x="4.8081%" y="527.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (4,479,057,463 samples, 0.41%)</title><rect x="4.5581%" y="501" width="0.4068%" height="15" fill="rgb(221,155,16)" fg:x="50185931316" fg:w="4479057463"/><text x="4.8081%" y="511.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (4,479,057,463 samples, 0.41%)</title><rect x="4.5581%" y="485" width="0.4068%" height="15" fill="rgb(215,215,53)" fg:x="50185931316" fg:w="4479057463"/><text x="4.8081%" y="495.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (4,479,057,463 samples, 0.41%)</title><rect x="4.5581%" y="469" width="0.4068%" height="15" fill="rgb(223,4,10)" fg:x="50185931316" fg:w="4479057463"/><text x="4.8081%" y="479.50"></text></g><g><title>QUEUE_TEST::collisionhandling::fast_forward (316,189,830 samples, 0.03%)</title><rect x="4.9739%" y="501" width="0.0287%" height="15" fill="rgb(234,103,6)" fg:x="54763447627" fg:w="316189830"/><text x="5.2239%" y="511.50"></text></g><g><title>&lt;QUEUE_TEST::vectors::Vector as core::ops::arith::Div&lt;f64&gt;&gt;::div (142,200,356 samples, 0.01%)</title><rect x="5.0228%" y="469" width="0.0129%" height="15" fill="rgb(227,97,0)" fg:x="55302293014" fg:w="142200356"/><text x="5.2728%" y="479.50"></text></g><g><title>QUEUE_TEST::collisionhandling::beta2 (142,653,369 samples, 0.01%)</title><rect x="5.0477%" y="453" width="0.0130%" height="15" fill="rgb(234,150,53)" fg:x="55576207816" fg:w="142653369"/><text x="5.2977%" y="463.50"></text></g><g><title>QUEUE_TEST::collisionhandling::b_and_k2 (362,799,205 samples, 0.03%)</title><rect x="5.0420%" y="469" width="0.0330%" height="15" fill="rgb(228,201,54)" fg:x="55512717888" fg:w="362799205"/><text x="5.2920%" y="479.50"></text></g><g><title>QUEUE_TEST::collisionhandling::omega_0_sq (156,655,908 samples, 0.01%)</title><rect x="5.0607%" y="453" width="0.0142%" height="15" fill="rgb(222,22,37)" fg:x="55718861185" fg:w="156655908"/><text x="5.3107%" y="463.50"></text></g><g><title>&lt;QUEUE_TEST::vectors::Vector as core::ops::arith::Mul&gt;::mul (132,520,171 samples, 0.01%)</title><rect x="5.0749%" y="453" width="0.0120%" height="15" fill="rgb(237,53,32)" fg:x="55875517093" fg:w="132520171"/><text x="5.3249%" y="463.50"></text></g><g><title>QUEUE_TEST::vectors::Vector::dot (132,520,171 samples, 0.01%)</title><rect x="5.0749%" y="437" width="0.0120%" height="15" fill="rgb(233,25,53)" fg:x="55875517093" fg:w="132520171"/><text x="5.3249%" y="447.50"></text></g><g><title>&lt;&amp;QUEUE_TEST::vectors::Vector as core::ops::arith::Div&lt;f64&gt;&gt;::div (212,409,084 samples, 0.02%)</title><rect x="5.0879%" y="437" width="0.0193%" height="15" fill="rgb(210,40,34)" fg:x="56018299774" fg:w="212409084"/><text x="5.3379%" y="447.50"></text></g><g><title>QUEUE_TEST::vectors::Vector::unit_vector (404,294,894 samples, 0.04%)</title><rect x="5.0879%" y="453" width="0.0367%" height="15" fill="rgb(241,220,44)" fg:x="56018299774" fg:w="404294894"/><text x="5.3379%" y="463.50"></text></g><g><title>QUEUE_TEST::vectors::Vector::mag (191,885,810 samples, 0.02%)</title><rect x="5.1072%" y="437" width="0.0174%" height="15" fill="rgb(235,28,35)" fg:x="56230708858" fg:w="191885810"/><text x="5.3572%" y="447.50"></text></g><g><title>QUEUE_TEST::particle::Particle::relative_speed (555,623,247 samples, 0.05%)</title><rect x="5.0749%" y="469" width="0.0505%" height="15" fill="rgb(210,56,17)" fg:x="55875517093" fg:w="555623247"/><text x="5.3249%" y="479.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::min (154,571,237 samples, 0.01%)</title><rect x="5.1292%" y="469" width="0.0140%" height="15" fill="rgb(224,130,29)" fg:x="56473764444" fg:w="154571237"/><text x="5.3792%" y="479.50"></text></g><g><title>QUEUE_TEST::collisionhandling::compute_acc (1,456,746,957 samples, 0.13%)</title><rect x="5.0112%" y="485" width="0.1323%" height="15" fill="rgb(235,212,8)" fg:x="55174272245" fg:w="1456746957"/><text x="5.2612%" y="495.50"></text></g><g><title>QUEUE_TEST::collisionhandling::omega_0_from_k (196,180,815 samples, 0.02%)</title><rect x="5.1967%" y="453" width="0.0178%" height="15" fill="rgb(223,33,50)" fg:x="57216370596" fg:w="196180815"/><text x="5.4467%" y="463.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (124,463,410 samples, 0.01%)</title><rect x="5.2032%" y="437" width="0.0113%" height="15" fill="rgb(219,149,13)" fg:x="57288088001" fg:w="124463410"/><text x="5.4532%" y="447.50"></text></g><g><title>QUEUE_TEST::collisionhandling::omega_l (425,778,771 samples, 0.04%)</title><rect x="5.1864%" y="469" width="0.0387%" height="15" fill="rgb(250,156,29)" fg:x="57103438391" fg:w="425778771"/><text x="5.4364%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (116,665,751 samples, 0.01%)</title><rect x="5.2145%" y="453" width="0.0106%" height="15" fill="rgb(216,193,19)" fg:x="57412551411" fg:w="116665751"/><text x="5.4645%" y="463.50"></text></g><g><title>QUEUE_TEST::collisionhandling::process_pair_get_dv (2,662,599,736 samples, 0.24%)</title><rect x="5.0026%" y="501" width="0.2418%" height="15" fill="rgb(216,135,14)" fg:x="55079637457" fg:w="2662599736"/><text x="5.2526%" y="511.50"></text></g><g><title>QUEUE_TEST::collisionhandling::get_next_time (1,111,217,991 samples, 0.10%)</title><rect x="5.1435%" y="485" width="0.1009%" height="15" fill="rgb(241,47,5)" fg:x="56631019202" fg:w="1111217991"/><text x="5.3935%" y="495.50"></text></g><g><title>QUEUE_TEST::collisionhandling::process_collision (3,239,893,668 samples, 0.29%)</title><rect x="4.9650%" y="517" width="0.2943%" height="15" fill="rgb(233,42,35)" fg:x="54664988779" fg:w="3239893668"/><text x="5.2150%" y="527.50"></text></g><g><title>clear_page_erms (415,288,240 samples, 0.04%)</title><rect x="5.3144%" y="293" width="0.0377%" height="15" fill="rgb(231,13,6)" fg:x="58512720611" fg:w="415288240"/><text x="5.5644%" y="303.50"></text></g><g><title>get_page_from_freelist (560,663,025 samples, 0.05%)</title><rect x="5.3131%" y="309" width="0.0509%" height="15" fill="rgb(207,181,40)" fg:x="58497717624" fg:w="560663025"/><text x="5.5631%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (580,395,453 samples, 0.05%)</title><rect x="5.3120%" y="325" width="0.0527%" height="15" fill="rgb(254,173,49)" fg:x="58486078469" fg:w="580395453"/><text x="5.5620%" y="335.50"></text></g><g><title>alloc_pages_vma (589,100,262 samples, 0.05%)</title><rect x="5.3115%" y="341" width="0.0535%" height="15" fill="rgb(221,1,38)" fg:x="58480250126" fg:w="589100262"/><text x="5.5615%" y="351.50"></text></g><g><title>mem_cgroup_try_charge (130,638,526 samples, 0.01%)</title><rect x="5.3811%" y="325" width="0.0119%" height="15" fill="rgb(206,124,46)" fg:x="59246805144" fg:w="130638526"/><text x="5.6311%" y="335.50"></text></g><g><title>mem_cgroup_try_charge_delay (175,129,833 samples, 0.02%)</title><rect x="5.3773%" y="341" width="0.0159%" height="15" fill="rgb(249,21,11)" fg:x="59205415148" fg:w="175129833"/><text x="5.6273%" y="351.50"></text></g><g><title>do_anonymous_page (958,444,153 samples, 0.09%)</title><rect x="5.3070%" y="357" width="0.0871%" height="15" fill="rgb(222,201,40)" fg:x="58431011411" fg:w="958444153"/><text x="5.5570%" y="367.50"></text></g><g><title>handle_mm_fault (1,092,734,823 samples, 0.10%)</title><rect x="5.2961%" y="389" width="0.0992%" height="15" fill="rgb(235,61,29)" fg:x="58310879817" fg:w="1092734823"/><text x="5.5461%" y="399.50"></text></g><g><title>__handle_mm_fault (1,043,883,198 samples, 0.09%)</title><rect x="5.3005%" y="373" width="0.0948%" height="15" fill="rgb(219,207,3)" fg:x="58359731442" fg:w="1043883198"/><text x="5.5505%" y="383.50"></text></g><g><title>do_user_addr_fault (1,167,417,479 samples, 0.11%)</title><rect x="5.2909%" y="405" width="0.1060%" height="15" fill="rgb(222,56,46)" fg:x="58253251563" fg:w="1167417479"/><text x="5.5409%" y="415.50"></text></g><g><title>__do_page_fault (1,192,127,151 samples, 0.11%)</title><rect x="5.2896%" y="421" width="0.1083%" height="15" fill="rgb(239,76,54)" fg:x="58239907938" fg:w="1192127151"/><text x="5.5396%" y="431.50"></text></g><g><title>page_fault (1,200,438,987 samples, 0.11%)</title><rect x="5.2892%" y="453" width="0.1090%" height="15" fill="rgb(231,124,27)" fg:x="58234416685" fg:w="1200438987"/><text x="5.5392%" y="463.50"></text></g><g><title>do_page_fault (1,197,643,195 samples, 0.11%)</title><rect x="5.2894%" y="437" width="0.1088%" height="15" fill="rgb(249,195,6)" fg:x="58237212477" fg:w="1197643195"/><text x="5.5394%" y="447.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (340,920,236 samples, 0.03%)</title><rect x="5.3982%" y="453" width="0.0310%" height="15" fill="rgb(237,174,47)" fg:x="59434855672" fg:w="340920236"/><text x="5.6482%" y="463.50"></text></g><g><title>prepare_exit_to_usermode (264,983,181 samples, 0.02%)</title><rect x="5.4051%" y="437" width="0.0241%" height="15" fill="rgb(206,201,31)" fg:x="59510792727" fg:w="264983181"/><text x="5.6551%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (1,829,784,824 samples, 0.17%)</title><rect x="5.2632%" y="485" width="0.1662%" height="15" fill="rgb(231,57,52)" fg:x="57948952084" fg:w="1829784824"/><text x="5.5132%" y="495.50"></text></g><g><title>core::ptr::write (1,798,160,181 samples, 0.16%)</title><rect x="5.2661%" y="469" width="0.1633%" height="15" fill="rgb(248,177,22)" fg:x="57980576727" fg:w="1798160181"/><text x="5.5161%" y="479.50"></text></g><g><title>QUEUE_TEST::csvreader::csvcon (1,902,211,363 samples, 0.17%)</title><rect x="5.2592%" y="517" width="0.1728%" height="15" fill="rgb(215,211,37)" fg:x="57904882447" fg:w="1902211363"/><text x="5.5092%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (1,887,573,452 samples, 0.17%)</title><rect x="5.2606%" y="501" width="0.1714%" height="15" fill="rgb(241,128,51)" fg:x="57919520358" fg:w="1887573452"/><text x="5.5106%" y="511.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (350,107,800 samples, 0.03%)</title><rect x="5.4784%" y="389" width="0.0318%" height="15" fill="rgb(227,165,31)" fg:x="60317638004" fg:w="350107800"/><text x="5.7284%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (350,107,800 samples, 0.03%)</title><rect x="5.4784%" y="373" width="0.0318%" height="15" fill="rgb(228,167,24)" fg:x="60317638004" fg:w="350107800"/><text x="5.7284%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (350,107,800 samples, 0.03%)</title><rect x="5.4784%" y="357" width="0.0318%" height="15" fill="rgb(228,143,12)" fg:x="60317638004" fg:w="350107800"/><text x="5.7284%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (223,818,948 samples, 0.02%)</title><rect x="5.4898%" y="341" width="0.0203%" height="15" fill="rgb(249,149,8)" fg:x="60443926856" fg:w="223818948"/><text x="5.7398%" y="351.50"></text></g><g><title>do_numa_page (179,255,652 samples, 0.02%)</title><rect x="5.5699%" y="277" width="0.0163%" height="15" fill="rgb(243,35,44)" fg:x="61325353781" fg:w="179255652"/><text x="5.8199%" y="287.50"></text></g><g><title>handle_mm_fault (245,486,527 samples, 0.02%)</title><rect x="5.5641%" y="309" width="0.0223%" height="15" fill="rgb(246,89,9)" fg:x="61261647475" fg:w="245486527"/><text x="5.8141%" y="319.50"></text></g><g><title>__handle_mm_fault (226,014,556 samples, 0.02%)</title><rect x="5.5659%" y="293" width="0.0205%" height="15" fill="rgb(233,213,13)" fg:x="61281119446" fg:w="226014556"/><text x="5.8159%" y="303.50"></text></g><g><title>do_user_addr_fault (284,491,234 samples, 0.03%)</title><rect x="5.5608%" y="325" width="0.0258%" height="15" fill="rgb(233,141,41)" fg:x="61225678914" fg:w="284491234"/><text x="5.8108%" y="335.50"></text></g><g><title>__do_page_fault (298,475,180 samples, 0.03%)</title><rect x="5.5603%" y="341" width="0.0271%" height="15" fill="rgb(239,167,4)" fg:x="61220084458" fg:w="298475180"/><text x="5.8103%" y="351.50"></text></g><g><title>page_fault (309,646,388 samples, 0.03%)</title><rect x="5.5598%" y="373" width="0.0281%" height="15" fill="rgb(209,217,16)" fg:x="61214628698" fg:w="309646388"/><text x="5.8098%" y="383.50"></text></g><g><title>do_page_fault (307,022,283 samples, 0.03%)</title><rect x="5.5601%" y="357" width="0.0279%" height="15" fill="rgb(219,88,35)" fg:x="61217252803" fg:w="307022283"/><text x="5.8101%" y="367.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (173,209,907 samples, 0.02%)</title><rect x="5.5882%" y="373" width="0.0157%" height="15" fill="rgb(220,193,23)" fg:x="61527134773" fg:w="173209907"/><text x="5.8382%" y="383.50"></text></g><g><title>prepare_exit_to_usermode (134,904,341 samples, 0.01%)</title><rect x="5.5917%" y="357" width="0.0123%" height="15" fill="rgb(230,90,52)" fg:x="61565440339" fg:w="134904341"/><text x="5.8417%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (1,404,574,703 samples, 0.13%)</title><rect x="5.4779%" y="421" width="0.1276%" height="15" fill="rgb(252,106,19)" fg:x="60312148272" fg:w="1404574703"/><text x="5.7279%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,404,574,703 samples, 0.13%)</title><rect x="5.4779%" y="405" width="0.1276%" height="15" fill="rgb(206,74,20)" fg:x="60312148272" fg:w="1404574703"/><text x="5.7279%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,018,344,722 samples, 0.09%)</title><rect x="5.5129%" y="389" width="0.0925%" height="15" fill="rgb(230,138,44)" fg:x="60698378253" fg:w="1018344722"/><text x="5.7629%" y="399.50"></text></g><g><title>QUEUE_TEST::time_parallel (1,649,361,996 samples, 0.15%)</title><rect x="5.4748%" y="501" width="0.1498%" height="15" fill="rgb(235,182,43)" fg:x="60277940418" fg:w="1649361996"/><text x="5.7248%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,620,881,424 samples, 0.15%)</title><rect x="5.4773%" y="485" width="0.1472%" height="15" fill="rgb(242,16,51)" fg:x="60306420990" fg:w="1620881424"/><text x="5.7273%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,620,881,424 samples, 0.15%)</title><rect x="5.4773%" y="469" width="0.1472%" height="15" fill="rgb(248,9,4)" fg:x="60306420990" fg:w="1620881424"/><text x="5.7273%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,620,881,424 samples, 0.15%)</title><rect x="5.4773%" y="453" width="0.1472%" height="15" fill="rgb(210,31,22)" fg:x="60306420990" fg:w="1620881424"/><text x="5.7273%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,620,881,424 samples, 0.15%)</title><rect x="5.4773%" y="437" width="0.1472%" height="15" fill="rgb(239,54,39)" fg:x="60306420990" fg:w="1620881424"/><text x="5.7273%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (210,579,439 samples, 0.02%)</title><rect x="5.6054%" y="421" width="0.0191%" height="15" fill="rgb(230,99,41)" fg:x="61716722975" fg:w="210579439"/><text x="5.8554%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (210,579,439 samples, 0.02%)</title><rect x="5.6054%" y="405" width="0.0191%" height="15" fill="rgb(253,106,12)" fg:x="61716722975" fg:w="210579439"/><text x="5.8554%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (210,579,439 samples, 0.02%)</title><rect x="5.6054%" y="389" width="0.0191%" height="15" fill="rgb(213,46,41)" fg:x="61716722975" fg:w="210579439"/><text x="5.8554%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (170,502,087 samples, 0.02%)</title><rect x="5.6246%" y="485" width="0.0155%" height="15" fill="rgb(215,133,35)" fg:x="61927302414" fg:w="170502087"/><text x="5.8746%" y="495.50"></text></g><g><title>core::ptr::read (158,947,449 samples, 0.01%)</title><rect x="5.6256%" y="469" width="0.0144%" height="15" fill="rgb(213,28,5)" fg:x="61938857052" fg:w="158947449"/><text x="5.8756%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (212,379,874 samples, 0.02%)</title><rect x="5.6246%" y="501" width="0.0193%" height="15" fill="rgb(215,77,49)" fg:x="61927302414" fg:w="212379874"/><text x="5.8746%" y="511.50"></text></g><g><title>clear_page_erms (424,926,125 samples, 0.04%)</title><rect x="5.7098%" y="309" width="0.0386%" height="15" fill="rgb(248,100,22)" fg:x="62865893403" fg:w="424926125"/><text x="5.9598%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (545,643,120 samples, 0.05%)</title><rect x="5.7062%" y="341" width="0.0496%" height="15" fill="rgb(208,67,9)" fg:x="62826200757" fg:w="545643120"/><text x="5.9562%" y="351.50"></text></g><g><title>get_page_from_freelist (523,922,098 samples, 0.05%)</title><rect x="5.7082%" y="325" width="0.0476%" height="15" fill="rgb(219,133,21)" fg:x="62847921779" fg:w="523922098"/><text x="5.9582%" y="335.50"></text></g><g><title>alloc_pages_vma (566,401,123 samples, 0.05%)</title><rect x="5.7049%" y="357" width="0.0514%" height="15" fill="rgb(246,46,29)" fg:x="62811547187" fg:w="566401123"/><text x="5.9549%" y="367.50"></text></g><g><title>mem_cgroup_try_charge (138,233,952 samples, 0.01%)</title><rect x="5.7753%" y="341" width="0.0126%" height="15" fill="rgb(246,185,52)" fg:x="63586990672" fg:w="138233952"/><text x="6.0253%" y="351.50"></text></g><g><title>mem_cgroup_try_charge_delay (217,663,360 samples, 0.02%)</title><rect x="5.7684%" y="357" width="0.0198%" height="15" fill="rgb(252,136,11)" fg:x="63510767032" fg:w="217663360"/><text x="6.0184%" y="367.50"></text></g><g><title>do_anonymous_page (986,228,697 samples, 0.09%)</title><rect x="5.7002%" y="373" width="0.0896%" height="15" fill="rgb(219,138,53)" fg:x="62760615240" fg:w="986228697"/><text x="5.9502%" y="383.50"></text></g><g><title>__handle_mm_fault (1,059,647,943 samples, 0.10%)</title><rect x="5.6946%" y="389" width="0.0962%" height="15" fill="rgb(211,51,23)" fg:x="62698991523" fg:w="1059647943"/><text x="5.9446%" y="399.50"></text></g><g><title>handle_mm_fault (1,080,938,815 samples, 0.10%)</title><rect x="5.6930%" y="405" width="0.0982%" height="15" fill="rgb(247,221,28)" fg:x="62680899789" fg:w="1080938815"/><text x="5.9430%" y="415.50"></text></g><g><title>do_user_addr_fault (1,140,680,165 samples, 0.10%)</title><rect x="5.6882%" y="421" width="0.1036%" height="15" fill="rgb(251,222,45)" fg:x="62627486524" fg:w="1140680165"/><text x="5.9382%" y="431.50"></text></g><g><title>page_fault (1,179,424,257 samples, 0.11%)</title><rect x="5.6860%" y="469" width="0.1071%" height="15" fill="rgb(217,162,53)" fg:x="62603409039" fg:w="1179424257"/><text x="5.9360%" y="479.50"></text></g><g><title>do_page_fault (1,173,559,985 samples, 0.11%)</title><rect x="5.6865%" y="453" width="0.1066%" height="15" fill="rgb(229,93,14)" fg:x="62609273311" fg:w="1173559985"/><text x="5.9365%" y="463.50"></text></g><g><title>__do_page_fault (1,173,559,985 samples, 0.11%)</title><rect x="5.6865%" y="437" width="0.1066%" height="15" fill="rgb(209,67,49)" fg:x="62609273311" fg:w="1173559985"/><text x="5.9365%" y="447.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (330,570,451 samples, 0.03%)</title><rect x="5.7931%" y="469" width="0.0300%" height="15" fill="rgb(213,87,29)" fg:x="63782833296" fg:w="330570451"/><text x="6.0431%" y="479.50"></text></g><g><title>prepare_exit_to_usermode (243,159,180 samples, 0.02%)</title><rect x="5.8010%" y="453" width="0.0221%" height="15" fill="rgb(205,151,52)" fg:x="63870244567" fg:w="243159180"/><text x="6.0510%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,953,277,842 samples, 0.18%)</title><rect x="5.6465%" y="501" width="0.1774%" height="15" fill="rgb(253,215,39)" fg:x="62169381091" fg:w="1953277842"/><text x="5.8965%" y="511.50"></text></g><g><title>core::ptr::write (1,923,393,769 samples, 0.17%)</title><rect x="5.6493%" y="485" width="0.1747%" height="15" fill="rgb(221,220,41)" fg:x="62199265164" fg:w="1923393769"/><text x="5.8993%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;QUEUE_TEST::csvreader::Rec&gt;&gt; (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="501" width="0.0273%" height="15" fill="rgb(218,133,21)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;QUEUE_TEST::csvreader::Rec&gt;&gt; (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="485" width="0.0273%" height="15" fill="rgb(221,193,43)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="469" width="0.0273%" height="15" fill="rgb(240,128,52)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="453" width="0.0273%" height="15" fill="rgb(253,114,12)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="437" width="0.0273%" height="15" fill="rgb(215,223,47)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="447.50"></text></g><g><title>__GI_munmap (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="421" width="0.0273%" height="15" fill="rgb(248,225,23)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="405" width="0.0273%" height="15" fill="rgb(250,108,0)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="415.50"></text></g><g><title>do_syscall_64 (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="389" width="0.0273%" height="15" fill="rgb(228,208,7)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="399.50"></text></g><g><title>__x64_sys_munmap (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="373" width="0.0273%" height="15" fill="rgb(244,45,10)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="383.50"></text></g><g><title>__vm_munmap (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="357" width="0.0273%" height="15" fill="rgb(207,125,25)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="367.50"></text></g><g><title>__do_munmap (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="341" width="0.0273%" height="15" fill="rgb(210,195,18)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="351.50"></text></g><g><title>unmap_region (300,310,135 samples, 0.03%)</title><rect x="5.8242%" y="325" width="0.0273%" height="15" fill="rgb(249,80,12)" fg:x="64125694509" fg:w="300310135"/><text x="6.0742%" y="335.50"></text></g><g><title>unmap_vmas (294,580,298 samples, 0.03%)</title><rect x="5.8247%" y="309" width="0.0268%" height="15" fill="rgb(221,65,9)" fg:x="64131424346" fg:w="294580298"/><text x="6.0747%" y="319.50"></text></g><g><title>unmap_single_vma (294,580,298 samples, 0.03%)</title><rect x="5.8247%" y="293" width="0.0268%" height="15" fill="rgb(235,49,36)" fg:x="64131424346" fg:w="294580298"/><text x="6.0747%" y="303.50"></text></g><g><title>unmap_page_range (294,580,298 samples, 0.03%)</title><rect x="5.8247%" y="277" width="0.0268%" height="15" fill="rgb(225,32,20)" fg:x="64131424346" fg:w="294580298"/><text x="6.0747%" y="287.50"></text></g><g><title>zap_pte_range.isra.0 (291,730,012 samples, 0.03%)</title><rect x="5.8250%" y="261" width="0.0265%" height="15" fill="rgb(215,141,46)" fg:x="64134274632" fg:w="291730012"/><text x="6.0750%" y="271.50"></text></g><g><title>tlb_flush_mmu (188,724,127 samples, 0.02%)</title><rect x="5.8344%" y="245" width="0.0171%" height="15" fill="rgb(250,160,47)" fg:x="64237280517" fg:w="188724127"/><text x="6.0844%" y="255.50"></text></g><g><title>free_pages_and_swap_cache (188,724,127 samples, 0.02%)</title><rect x="5.8344%" y="229" width="0.0171%" height="15" fill="rgb(216,222,40)" fg:x="64237280517" fg:w="188724127"/><text x="6.0844%" y="239.50"></text></g><g><title>release_pages (160,176,469 samples, 0.01%)</title><rect x="5.8370%" y="213" width="0.0145%" height="15" fill="rgb(234,217,39)" fg:x="64265828175" fg:w="160176469"/><text x="6.0870%" y="223.50"></text></g><g><title>tlb_finish_mmu (156,694,427 samples, 0.01%)</title><rect x="5.8518%" y="261" width="0.0142%" height="15" fill="rgb(207,178,40)" fg:x="64428867265" fg:w="156694427"/><text x="6.1018%" y="271.50"></text></g><g><title>tlb_flush_mmu (156,694,427 samples, 0.01%)</title><rect x="5.8518%" y="245" width="0.0142%" height="15" fill="rgb(221,136,13)" fg:x="64428867265" fg:w="156694427"/><text x="6.1018%" y="255.50"></text></g><g><title>free_pages_and_swap_cache (153,833,509 samples, 0.01%)</title><rect x="5.8520%" y="229" width="0.0140%" height="15" fill="rgb(249,199,10)" fg:x="64431728183" fg:w="153833509"/><text x="6.1020%" y="239.50"></text></g><g><title>release_pages (148,061,121 samples, 0.01%)</title><rect x="5.8525%" y="213" width="0.0134%" height="15" fill="rgb(249,222,13)" fg:x="64437500571" fg:w="148061121"/><text x="6.1025%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;QUEUE_TEST::KeyVal&gt;&gt;&gt; (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="501" width="0.0214%" height="15" fill="rgb(244,185,38)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="485" width="0.0214%" height="15" fill="rgb(236,202,9)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;QUEUE_TEST::KeyVal&gt;]&gt; (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="469" width="0.0214%" height="15" fill="rgb(250,229,37)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;QUEUE_TEST::KeyVal&gt;&gt; (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="453" width="0.0214%" height="15" fill="rgb(206,174,23)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;QUEUE_TEST::KeyVal&gt;&gt; (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="437" width="0.0214%" height="15" fill="rgb(211,33,43)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="421" width="0.0214%" height="15" fill="rgb(245,58,50)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="405" width="0.0214%" height="15" fill="rgb(244,68,36)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="389" width="0.0214%" height="15" fill="rgb(232,229,15)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="399.50"></text></g><g><title>__GI_munmap (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="373" width="0.0214%" height="15" fill="rgb(254,30,23)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="357" width="0.0214%" height="15" fill="rgb(235,160,14)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="367.50"></text></g><g><title>do_syscall_64 (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="341" width="0.0214%" height="15" fill="rgb(212,155,44)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="351.50"></text></g><g><title>__x64_sys_munmap (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="325" width="0.0214%" height="15" fill="rgb(226,2,50)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="335.50"></text></g><g><title>__vm_munmap (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="309" width="0.0214%" height="15" fill="rgb(234,177,6)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="319.50"></text></g><g><title>__do_munmap (235,090,237 samples, 0.02%)</title><rect x="5.8515%" y="293" width="0.0214%" height="15" fill="rgb(217,24,9)" fg:x="64426004644" fg:w="235090237"/><text x="6.1015%" y="303.50"></text></g><g><title>unmap_region (232,227,616 samples, 0.02%)</title><rect x="5.8518%" y="277" width="0.0211%" height="15" fill="rgb(220,13,46)" fg:x="64428867265" fg:w="232227616"/><text x="6.1018%" y="287.50"></text></g><g><title>clear_page_erms (198,000,167 samples, 0.02%)</title><rect x="5.9092%" y="309" width="0.0180%" height="15" fill="rgb(239,221,27)" fg:x="65061444115" fg:w="198000167"/><text x="6.1592%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (254,831,984 samples, 0.02%)</title><rect x="5.9076%" y="341" width="0.0231%" height="15" fill="rgb(222,198,25)" fg:x="65043402668" fg:w="254831984"/><text x="6.1576%" y="351.50"></text></g><g><title>get_page_from_freelist (242,961,771 samples, 0.02%)</title><rect x="5.9087%" y="325" width="0.0221%" height="15" fill="rgb(211,99,13)" fg:x="65055272881" fg:w="242961771"/><text x="6.1587%" y="335.50"></text></g><g><title>alloc_misplaced_dst_page (257,715,697 samples, 0.02%)</title><rect x="5.9076%" y="357" width="0.0234%" height="15" fill="rgb(232,111,31)" fg:x="65043402668" fg:w="257715697"/><text x="6.1576%" y="367.50"></text></g><g><title>copy_page (346,471,320 samples, 0.03%)</title><rect x="5.9323%" y="325" width="0.0315%" height="15" fill="rgb(245,82,37)" fg:x="65315810950" fg:w="346471320"/><text x="6.1823%" y="335.50"></text></g><g><title>migrate_page (417,738,504 samples, 0.04%)</title><rect x="5.9323%" y="341" width="0.0379%" height="15" fill="rgb(227,149,46)" fg:x="65315810950" fg:w="417738504"/><text x="6.1823%" y="351.50"></text></g><g><title>move_to_new_page (429,465,291 samples, 0.04%)</title><rect x="5.9318%" y="357" width="0.0390%" height="15" fill="rgb(218,36,50)" fg:x="65310046649" fg:w="429465291"/><text x="6.1818%" y="367.50"></text></g><g><title>rmap_walk (179,449,430 samples, 0.02%)</title><rect x="5.9818%" y="341" width="0.0163%" height="15" fill="rgb(226,80,48)" fg:x="65861055523" fg:w="179449430"/><text x="6.2318%" y="351.50"></text></g><g><title>rmap_walk_anon (179,449,430 samples, 0.02%)</title><rect x="5.9818%" y="325" width="0.0163%" height="15" fill="rgb(238,224,15)" fg:x="65861055523" fg:w="179449430"/><text x="6.2318%" y="335.50"></text></g><g><title>try_to_unmap_one (179,449,430 samples, 0.02%)</title><rect x="5.9818%" y="309" width="0.0163%" height="15" fill="rgb(241,136,10)" fg:x="65861055523" fg:w="179449430"/><text x="6.2318%" y="319.50"></text></g><g><title>migrate_pages (1,193,890,079 samples, 0.11%)</title><rect x="5.8900%" y="373" width="0.1084%" height="15" fill="rgb(208,32,45)" fg:x="64849624490" fg:w="1193890079"/><text x="6.1400%" y="383.50"></text></g><g><title>try_to_unmap (182,459,046 samples, 0.02%)</title><rect x="5.9818%" y="357" width="0.0166%" height="15" fill="rgb(207,135,9)" fg:x="65861055523" fg:w="182459046"/><text x="6.2318%" y="367.50"></text></g><g><title>migrate_misplaced_page (1,312,019,541 samples, 0.12%)</title><rect x="5.8889%" y="389" width="0.1192%" height="15" fill="rgb(206,86,44)" fg:x="64837795324" fg:w="1312019541"/><text x="6.1389%" y="399.50"></text></g><g><title>handle_mm_fault (1,421,307,557 samples, 0.13%)</title><rect x="5.8819%" y="437" width="0.1291%" height="15" fill="rgb(245,177,15)" fg:x="64761220320" fg:w="1421307557"/><text x="6.1319%" y="447.50"></text></g><g><title>__handle_mm_fault (1,403,546,088 samples, 0.13%)</title><rect x="5.8836%" y="421" width="0.1275%" height="15" fill="rgb(206,64,50)" fg:x="64778981789" fg:w="1403546088"/><text x="6.1336%" y="431.50"></text></g><g><title>do_numa_page (1,359,795,185 samples, 0.12%)</title><rect x="5.8875%" y="405" width="0.1235%" height="15" fill="rgb(234,36,40)" fg:x="64822732692" fg:w="1359795185"/><text x="6.1375%" y="415.50"></text></g><g><title>do_user_addr_fault (1,438,432,343 samples, 0.13%)</title><rect x="5.8807%" y="453" width="0.1306%" height="15" fill="rgb(213,64,8)" fg:x="64746977753" fg:w="1438432343"/><text x="6.1307%" y="463.50"></text></g><g><title>page_fault (1,464,458,257 samples, 0.13%)</title><rect x="5.8785%" y="501" width="0.1330%" height="15" fill="rgb(210,75,36)" fg:x="64723795052" fg:w="1464458257"/><text x="6.1285%" y="511.50"></text></g><g><title>do_page_fault (1,458,498,183 samples, 0.13%)</title><rect x="5.8791%" y="485" width="0.1325%" height="15" fill="rgb(229,88,21)" fg:x="64729755126" fg:w="1458498183"/><text x="6.1291%" y="495.50"></text></g><g><title>__do_page_fault (1,452,446,235 samples, 0.13%)</title><rect x="5.8796%" y="469" width="0.1319%" height="15" fill="rgb(252,204,47)" fg:x="64735807074" fg:w="1452446235"/><text x="6.1296%" y="479.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (179,527,511 samples, 0.02%)</title><rect x="6.0137%" y="501" width="0.0163%" height="15" fill="rgb(208,77,27)" fg:x="66211843848" fg:w="179527511"/><text x="6.2637%" y="511.50"></text></g><g><title>prepare_exit_to_usermode (129,587,693 samples, 0.01%)</title><rect x="6.0182%" y="485" width="0.0118%" height="15" fill="rgb(221,76,26)" fg:x="66261783666" fg:w="129587693"/><text x="6.2682%" y="495.50"></text></g><g><title>QUEUE_TEST::main (6,596,162,792 samples, 0.60%)</title><rect x="5.4320%" y="517" width="0.5991%" height="15" fill="rgb(225,139,18)" fg:x="59807093810" fg:w="6596162792"/><text x="5.6820%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (126,584,000 samples, 0.01%)</title><rect x="6.0486%" y="485" width="0.0115%" height="15" fill="rgb(230,137,11)" fg:x="66596071116" fg:w="126584000"/><text x="6.2986%" y="495.50"></text></g><g><title>[anon] (167,154,070 samples, 0.02%)</title><rect x="6.0462%" y="517" width="0.0152%" height="15" fill="rgb(212,28,1)" fg:x="66569530294" fg:w="167154070"/><text x="6.2962%" y="527.50"></text></g><g><title>syscall (146,254,371 samples, 0.01%)</title><rect x="6.0481%" y="501" width="0.0133%" height="15" fill="rgb(248,164,17)" fg:x="66590429993" fg:w="146254371"/><text x="6.2981%" y="511.50"></text></g><g><title>[unknown] (436,832,090 samples, 0.04%)</title><rect x="6.0614%" y="517" width="0.0397%" height="15" fill="rgb(222,171,42)" fg:x="66736684364" fg:w="436832090"/><text x="6.3114%" y="527.50"></text></g><g><title>syscall (200,522,350 samples, 0.02%)</title><rect x="6.0828%" y="501" width="0.0182%" height="15" fill="rgb(243,84,45)" fg:x="66972994104" fg:w="200522350"/><text x="6.3328%" y="511.50"></text></g><g><title>_int_realloc (185,744,324 samples, 0.02%)</title><rect x="6.1059%" y="437" width="0.0169%" height="15" fill="rgb(252,49,23)" fg:x="67227371068" fg:w="185744324"/><text x="6.3559%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (250,160,906 samples, 0.02%)</title><rect x="6.1034%" y="501" width="0.0227%" height="15" fill="rgb(215,19,7)" fg:x="67198987457" fg:w="250160906"/><text x="6.3534%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (250,160,906 samples, 0.02%)</title><rect x="6.1034%" y="485" width="0.0227%" height="15" fill="rgb(238,81,41)" fg:x="67198987457" fg:w="250160906"/><text x="6.3534%" y="495.50"></text></g><g><title>alloc::alloc::realloc (250,160,906 samples, 0.02%)</title><rect x="6.1034%" y="469" width="0.0227%" height="15" fill="rgb(210,199,37)" fg:x="67198987457" fg:w="250160906"/><text x="6.3534%" y="479.50"></text></g><g><title>__GI___libc_realloc (250,160,906 samples, 0.02%)</title><rect x="6.1034%" y="453" width="0.0227%" height="15" fill="rgb(244,192,49)" fg:x="67198987457" fg:w="250160906"/><text x="6.3534%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (303,585,631 samples, 0.03%)</title><rect x="6.1026%" y="517" width="0.0276%" height="15" fill="rgb(226,211,11)" fg:x="67190571309" fg:w="303585631"/><text x="6.3526%" y="527.50"></text></g><g><title>call_function_interrupt (114,044,969 samples, 0.01%)</title><rect x="6.1382%" y="517" width="0.0104%" height="15" fill="rgb(236,162,54)" fg:x="67582727278" fg:w="114044969"/><text x="6.3882%" y="527.50"></text></g><g><title>core::num::dec2flt::biased_fp_to_float (132,041,095 samples, 0.01%)</title><rect x="6.4216%" y="485" width="0.0120%" height="15" fill="rgb(220,229,9)" fg:x="70702875518" fg:w="132041095"/><text x="6.6716%" y="495.50"></text></g><g><title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::from_u64_bits (111,973,379 samples, 0.01%)</title><rect x="6.4234%" y="469" width="0.0102%" height="15" fill="rgb(250,87,22)" fg:x="70722943234" fg:w="111973379"/><text x="6.6734%" y="479.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits (111,973,379 samples, 0.01%)</title><rect x="6.4234%" y="453" width="0.0102%" height="15" fill="rgb(239,43,17)" fg:x="70722943234" fg:w="111973379"/><text x="6.6734%" y="463.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits::rt_u64_to_f64 (111,973,379 samples, 0.01%)</title><rect x="6.4234%" y="437" width="0.0102%" height="15" fill="rgb(231,177,25)" fg:x="70722943234" fg:w="111973379"/><text x="6.6734%" y="447.50"></text></g><g><title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::from_u64 (319,618,686 samples, 0.03%)</title><rect x="6.4395%" y="469" width="0.0290%" height="15" fill="rgb(219,179,1)" fg:x="70899597785" fg:w="319618686"/><text x="6.6895%" y="479.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (154,781,538 samples, 0.01%)</title><rect x="6.4695%" y="469" width="0.0141%" height="15" fill="rgb(238,219,53)" fg:x="71230663924" fg:w="154781538"/><text x="6.7195%" y="479.50"></text></g><g><title>core::num::dec2flt::number::Number::try_fast_path (927,069,308 samples, 0.08%)</title><rect x="6.4336%" y="485" width="0.0842%" height="15" fill="rgb(232,167,36)" fg:x="70834916613" fg:w="927069308"/><text x="6.6836%" y="495.50"></text></g><g><title>core::num::dec2flt::number::Number::is_fast_path (351,066,479 samples, 0.03%)</title><rect x="6.4859%" y="469" width="0.0319%" height="15" fill="rgb(244,19,51)" fg:x="71410919442" fg:w="351066479"/><text x="6.7359%" y="479.50"></text></g><g><title>core::num::dec2flt::dec2flt (2,865,610,900 samples, 0.26%)</title><rect x="6.2643%" y="501" width="0.2603%" height="15" fill="rgb(224,6,22)" fg:x="68970426270" fg:w="2865610900"/><text x="6.5143%" y="511.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (4,079,447,332 samples, 0.37%)</title><rect x="6.1545%" y="517" width="0.3705%" height="15" fill="rgb(224,145,5)" fg:x="67762184789" fg:w="4079447332"/><text x="6.4045%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (166,071,562 samples, 0.02%)</title><rect x="6.6991%" y="501" width="0.0151%" height="15" fill="rgb(234,130,49)" fg:x="73758722289" fg:w="166071562"/><text x="6.9491%" y="511.50"></text></g><g><title>core::num::dec2flt::lemire::full_multiplication (197,190,082 samples, 0.02%)</title><rect x="6.7272%" y="485" width="0.0179%" height="15" fill="rgb(254,6,2)" fg:x="74067911278" fg:w="197190082"/><text x="6.9772%" y="495.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (348,963,302 samples, 0.03%)</title><rect x="6.7142%" y="501" width="0.0317%" height="15" fill="rgb(208,96,46)" fg:x="73924793851" fg:w="348963302"/><text x="6.9642%" y="511.50"></text></g><g><title>core::num::dec2flt::lemire::power (145,238,245 samples, 0.01%)</title><rect x="6.7459%" y="501" width="0.0132%" height="15" fill="rgb(239,3,39)" fg:x="74273757153" fg:w="145238245"/><text x="6.9959%" y="511.50"></text></g><g><title>core::num::&lt;impl i32&gt;::wrapping_mul (145,238,245 samples, 0.01%)</title><rect x="6.7459%" y="485" width="0.0132%" height="15" fill="rgb(233,210,1)" fg:x="74273757153" fg:w="145238245"/><text x="6.9959%" y="495.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (2,578,107,413 samples, 0.23%)</title><rect x="6.5250%" y="517" width="0.2342%" height="15" fill="rgb(244,137,37)" fg:x="71841632121" fg:w="2578107413"/><text x="6.7750%" y="527.50"></text></g><g><title>core::num::&lt;impl u8&gt;::saturating_sub (1,298,234,503 samples, 0.12%)</title><rect x="7.2505%" y="485" width="0.1179%" height="15" fill="rgb(240,136,2)" fg:x="79829116355" fg:w="1298234503"/><text x="7.5005%" y="495.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (490,929,421 samples, 0.04%)</title><rect x="7.6858%" y="453" width="0.0446%" height="15" fill="rgb(239,18,37)" fg:x="84621852841" fg:w="490929421"/><text x="7.9358%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (482,862,094 samples, 0.04%)</title><rect x="7.7420%" y="437" width="0.0439%" height="15" fill="rgb(218,185,22)" fg:x="85241228810" fg:w="482862094"/><text x="7.9920%" y="447.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::parse_digits (3,449,671,544 samples, 0.31%)</title><rect x="7.4985%" y="469" width="0.3133%" height="15" fill="rgb(225,218,4)" fg:x="82559733353" fg:w="3449671544"/><text x="7.7485%" y="479.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits::{{closure}} (896,622,635 samples, 0.08%)</title><rect x="7.7304%" y="453" width="0.0814%" height="15" fill="rgb(230,182,32)" fg:x="85112782262" fg:w="896622635"/><text x="7.9804%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (285,313,993 samples, 0.03%)</title><rect x="7.7859%" y="437" width="0.0259%" height="15" fill="rgb(242,56,43)" fg:x="85724090904" fg:w="285313993"/><text x="8.0359%" y="447.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::read_u64 (307,082,620 samples, 0.03%)</title><rect x="7.8118%" y="469" width="0.0279%" height="15" fill="rgb(233,99,24)" fg:x="86009404897" fg:w="307082620"/><text x="8.0618%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (307,082,620 samples, 0.03%)</title><rect x="7.8118%" y="453" width="0.0279%" height="15" fill="rgb(234,209,42)" fg:x="86009404897" fg:w="307082620"/><text x="8.0618%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (307,082,620 samples, 0.03%)</title><rect x="7.8118%" y="437" width="0.0279%" height="15" fill="rgb(227,7,12)" fg:x="86009404897" fg:w="307082620"/><text x="8.0618%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (134,348,396 samples, 0.01%)</title><rect x="7.8400%" y="469" width="0.0122%" height="15" fill="rgb(245,203,43)" fg:x="86319341424" fg:w="134348396"/><text x="8.0900%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (198,937,922 samples, 0.02%)</title><rect x="7.8812%" y="453" width="0.0181%" height="15" fill="rgb(238,205,33)" fg:x="86773765748" fg:w="198937922"/><text x="8.1312%" y="463.50"></text></g><g><title>core::num::dec2flt::common::is_8digits (610,545,152 samples, 0.06%)</title><rect x="7.8615%" y="469" width="0.0555%" height="15" fill="rgb(231,56,7)" fg:x="86556748063" fg:w="610545152"/><text x="8.1115%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (194,589,545 samples, 0.02%)</title><rect x="7.8993%" y="453" width="0.0177%" height="15" fill="rgb(244,186,29)" fg:x="86972703670" fg:w="194589545"/><text x="8.1493%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (540,663,937 samples, 0.05%)</title><rect x="7.9800%" y="453" width="0.0491%" height="15" fill="rgb(234,111,31)" fg:x="87860674807" fg:w="540663937"/><text x="8.2300%" y="463.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (1,287,781,769 samples, 0.12%)</title><rect x="7.9170%" y="469" width="0.1170%" height="15" fill="rgb(241,149,10)" fg:x="87167293215" fg:w="1287781769"/><text x="8.1670%" y="479.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (7,380,957,907 samples, 0.67%)</title><rect x="7.3684%" y="485" width="0.6704%" height="15" fill="rgb(249,206,44)" fg:x="81127350858" fg:w="7380957907"/><text x="7.6184%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (593,030,938 samples, 0.05%)</title><rect x="8.0388%" y="485" width="0.0539%" height="15" fill="rgb(251,153,30)" fg:x="88508308765" fg:w="593030938"/><text x="8.2888%" y="495.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (13,192,204,081 samples, 1.20%)</title><rect x="6.8948%" y="501" width="1.1982%" height="15" fill="rgb(239,152,38)" fg:x="75912399037" fg:w="13192204081"/><text x="7.1448%" y="511.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (14,748,425,078 samples, 1.34%)</title><rect x="6.7592%" y="517" width="1.3395%" height="15" fill="rgb(249,139,47)" fg:x="74419739534" fg:w="14748425078"/><text x="7.0092%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (279,874,214 samples, 0.03%)</title><rect x="8.1238%" y="485" width="0.0254%" height="15" fill="rgb(244,64,35)" fg:x="89444418368" fg:w="279874214"/><text x="8.3738%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (552,675,300 samples, 0.05%)</title><rect x="8.1501%" y="437" width="0.0502%" height="15" fill="rgb(216,46,15)" fg:x="89734007421" fg:w="552675300"/><text x="8.4001%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (552,675,300 samples, 0.05%)</title><rect x="8.1501%" y="421" width="0.0502%" height="15" fill="rgb(250,74,19)" fg:x="89734007421" fg:w="552675300"/><text x="8.4001%" y="431.50"></text></g><g><title>_raw_spin_lock (3,172,286,889 samples, 0.29%)</title><rect x="8.2471%" y="341" width="0.2881%" height="15" fill="rgb(249,42,33)" fg:x="90801879846" fg:w="3172286889"/><text x="8.4971%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (3,172,286,889 samples, 0.29%)</title><rect x="8.2471%" y="325" width="0.2881%" height="15" fill="rgb(242,149,17)" fg:x="90801879846" fg:w="3172286889"/><text x="8.4971%" y="335.50"></text></g><g><title>select_task_rq_fair (127,695,829 samples, 0.01%)</title><rect x="8.5836%" y="309" width="0.0116%" height="15" fill="rgb(244,29,21)" fg:x="94507146411" fg:w="127695829"/><text x="8.8336%" y="319.50"></text></g><g><title>activate_task (160,681,411 samples, 0.01%)</title><rect x="8.5961%" y="293" width="0.0146%" height="15" fill="rgb(220,130,37)" fg:x="94643962529" fg:w="160681411"/><text x="8.8461%" y="303.50"></text></g><g><title>ttwu_do_activate (190,381,274 samples, 0.02%)</title><rect x="8.5961%" y="309" width="0.0173%" height="15" fill="rgb(211,67,2)" fg:x="94643962529" fg:w="190381274"/><text x="8.8461%" y="319.50"></text></g><g><title>try_to_wake_up (740,198,662 samples, 0.07%)</title><rect x="8.5478%" y="325" width="0.0672%" height="15" fill="rgb(235,68,52)" fg:x="94112860196" fg:w="740198662"/><text x="8.7978%" y="335.50"></text></g><g><title>futex_wake (4,189,733,409 samples, 0.38%)</title><rect x="8.2348%" y="357" width="0.3805%" height="15" fill="rgb(246,142,3)" fg:x="90666283601" fg:w="4189733409"/><text x="8.4848%" y="367.50"></text></g><g><title>wake_up_q (791,803,698 samples, 0.07%)</title><rect x="8.5434%" y="341" width="0.0719%" height="15" fill="rgb(241,25,7)" fg:x="94064213312" fg:w="791803698"/><text x="8.7934%" y="351.50"></text></g><g><title>__x64_sys_futex (4,301,324,944 samples, 0.39%)</title><rect x="8.2267%" y="389" width="0.3907%" height="15" fill="rgb(242,119,39)" fg:x="90577179610" fg:w="4301324944"/><text x="8.4767%" y="399.50"></text></g><g><title>do_futex (4,296,188,716 samples, 0.39%)</title><rect x="8.2272%" y="373" width="0.3902%" height="15" fill="rgb(241,98,45)" fg:x="90582315838" fg:w="4296188716"/><text x="8.4772%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,559,951,920 samples, 0.41%)</title><rect x="8.2040%" y="421" width="0.4142%" height="15" fill="rgb(254,28,30)" fg:x="90327525973" fg:w="4559951920"/><text x="8.4540%" y="431.50"></text></g><g><title>do_syscall_64 (4,544,671,234 samples, 0.41%)</title><rect x="8.2054%" y="405" width="0.4128%" height="15" fill="rgb(241,142,54)" fg:x="90342806659" fg:w="4544671234"/><text x="8.4554%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt;&gt; (5,225,670,692 samples, 0.47%)</title><rect x="8.1492%" y="485" width="0.4746%" height="15" fill="rgb(222,85,15)" fg:x="89724292582" fg:w="5225670692"/><text x="8.3992%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,225,670,692 samples, 0.47%)</title><rect x="8.1492%" y="469" width="0.4746%" height="15" fill="rgb(210,85,47)" fg:x="89724292582" fg:w="5225670692"/><text x="8.3992%" y="479.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5,225,670,692 samples, 0.47%)</title><rect x="8.1492%" y="453" width="0.4746%" height="15" fill="rgb(224,206,25)" fg:x="89724292582" fg:w="5225670692"/><text x="8.3992%" y="463.50"></text></g><g><title>syscall (4,652,710,027 samples, 0.42%)</title><rect x="8.2013%" y="437" width="0.4226%" height="15" fill="rgb(243,201,19)" fg:x="90297253247" fg:w="4652710027"/><text x="8.4513%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (487,919,599 samples, 0.04%)</title><rect x="8.6343%" y="453" width="0.0443%" height="15" fill="rgb(236,59,4)" fg:x="95065327595" fg:w="487919599"/><text x="8.8843%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (487,919,599 samples, 0.04%)</title><rect x="8.6343%" y="437" width="0.0443%" height="15" fill="rgb(254,179,45)" fg:x="95065327595" fg:w="487919599"/><text x="8.8843%" y="447.50"></text></g><g><title>QUEUE_TEST::parallelbucketqueue::ParBqueue&lt;&amp;T&gt;::bulk_push::{{closure}} (6,369,783,623 samples, 0.58%)</title><rect x="8.1012%" y="501" width="0.5785%" height="15" fill="rgb(226,14,10)" fg:x="89196076534" fg:w="6369783623"/><text x="8.3512%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (607,818,825 samples, 0.06%)</title><rect x="8.6246%" y="485" width="0.0552%" height="15" fill="rgb(244,27,41)" fg:x="94958041332" fg:w="607818825"/><text x="8.8746%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (508,363,296 samples, 0.05%)</title><rect x="8.6336%" y="469" width="0.0462%" height="15" fill="rgb(235,35,32)" fg:x="95057496861" fg:w="508363296"/><text x="8.8836%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6,399,818,993 samples, 0.58%)</title><rect x="8.0987%" y="517" width="0.5813%" height="15" fill="rgb(218,68,31)" fg:x="89168164612" fg:w="6399818993"/><text x="8.3487%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (234,388,938 samples, 0.02%)</title><rect x="8.7975%" y="453" width="0.0213%" height="15" fill="rgb(207,120,37)" fg:x="96862237328" fg:w="234388938"/><text x="9.0475%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (294,611,414 samples, 0.03%)</title><rect x="8.7975%" y="469" width="0.0268%" height="15" fill="rgb(227,98,0)" fg:x="96862237328" fg:w="294611414"/><text x="9.0475%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (496,384,338 samples, 0.05%)</title><rect x="8.8255%" y="437" width="0.0451%" height="15" fill="rgb(207,7,3)" fg:x="97169890219" fg:w="496384338"/><text x="9.0755%" y="447.50"></text></g><g><title>account_process_tick (112,486,836 samples, 0.01%)</title><rect x="9.1932%" y="293" width="0.0102%" height="15" fill="rgb(206,98,19)" fg:x="101218418216" fg:w="112486836"/><text x="9.4432%" y="303.50"></text></g><g><title>account_user_time (112,486,836 samples, 0.01%)</title><rect x="9.1932%" y="277" width="0.0102%" height="15" fill="rgb(217,5,26)" fg:x="101218418216" fg:w="112486836"/><text x="9.4432%" y="287.50"></text></g><g><title>task_tick_fair (340,918,685 samples, 0.03%)</title><rect x="9.2161%" y="277" width="0.0310%" height="15" fill="rgb(235,190,38)" fg:x="101471169240" fg:w="340918685"/><text x="9.4661%" y="287.50"></text></g><g><title>update_load_avg (161,424,869 samples, 0.01%)</title><rect x="9.2324%" y="261" width="0.0147%" height="15" fill="rgb(247,86,24)" fg:x="101650663056" fg:w="161424869"/><text x="9.4824%" y="271.50"></text></g><g><title>scheduler_tick (484,347,391 samples, 0.04%)</title><rect x="9.2081%" y="293" width="0.0440%" height="15" fill="rgb(205,101,16)" fg:x="101383187835" fg:w="484347391"/><text x="9.4581%" y="303.50"></text></g><g><title>tick_sched_handle (674,880,003 samples, 0.06%)</title><rect x="9.1916%" y="325" width="0.0613%" height="15" fill="rgb(246,168,33)" fg:x="101201252498" fg:w="674880003"/><text x="9.4416%" y="335.50"></text></g><g><title>update_process_times (672,413,131 samples, 0.06%)</title><rect x="9.1918%" y="309" width="0.0611%" height="15" fill="rgb(231,114,1)" fg:x="101203719370" fg:w="672413131"/><text x="9.4418%" y="319.50"></text></g><g><title>tick_sched_timer (702,710,754 samples, 0.06%)</title><rect x="9.1898%" y="341" width="0.0638%" height="15" fill="rgb(207,184,53)" fg:x="101180732538" fg:w="702710754"/><text x="9.4398%" y="351.50"></text></g><g><title>__hrtimer_run_queues (917,413,795 samples, 0.08%)</title><rect x="9.1707%" y="357" width="0.0833%" height="15" fill="rgb(224,95,51)" fg:x="100971311219" fg:w="917413795"/><text x="9.4207%" y="367.50"></text></g><g><title>hrtimer_interrupt (1,053,422,043 samples, 0.10%)</title><rect x="9.1698%" y="373" width="0.0957%" height="15" fill="rgb(212,188,45)" fg:x="100960514332" fg:w="1053422043"/><text x="9.4198%" y="383.50"></text></g><g><title>run_rebalance_domains (156,067,582 samples, 0.01%)</title><rect x="9.2788%" y="341" width="0.0142%" height="15" fill="rgb(223,154,38)" fg:x="102161020224" fg:w="156067582"/><text x="9.5288%" y="351.50"></text></g><g><title>update_blocked_averages (112,175,647 samples, 0.01%)</title><rect x="9.2828%" y="325" width="0.0102%" height="15" fill="rgb(251,22,52)" fg:x="102204912159" fg:w="112175647"/><text x="9.5328%" y="335.50"></text></g><g><title>__softirqentry_text_start (312,508,347 samples, 0.03%)</title><rect x="9.2676%" y="357" width="0.0284%" height="15" fill="rgb(229,209,22)" fg:x="102038187273" fg:w="312508347"/><text x="9.5176%" y="367.50"></text></g><g><title>irq_exit (323,543,084 samples, 0.03%)</title><rect x="9.2674%" y="373" width="0.0294%" height="15" fill="rgb(234,138,34)" fg:x="102035527619" fg:w="323543084"/><text x="9.5174%" y="383.50"></text></g><g><title>apic_timer_interrupt (1,458,005,862 samples, 0.13%)</title><rect x="9.1666%" y="405" width="0.1324%" height="15" fill="rgb(212,95,11)" fg:x="100925310327" fg:w="1458005862"/><text x="9.4166%" y="415.50"></text></g><g><title>smp_apic_timer_interrupt (1,434,249,522 samples, 0.13%)</title><rect x="9.1687%" y="389" width="0.1303%" height="15" fill="rgb(240,179,47)" fg:x="100949066667" fg:w="1434249522"/><text x="9.4187%" y="399.50"></text></g><g><title>flush_tlb_func_common.constprop.0 (145,793,662 samples, 0.01%)</title><rect x="9.3035%" y="325" width="0.0132%" height="15" fill="rgb(240,163,11)" fg:x="102433359805" fg:w="145793662"/><text x="9.5535%" y="335.50"></text></g><g><title>native_flush_tlb_one_user (123,333,403 samples, 0.01%)</title><rect x="9.3056%" y="309" width="0.0112%" height="15" fill="rgb(236,37,12)" fg:x="102455820064" fg:w="123333403"/><text x="9.5556%" y="319.50"></text></g><g><title>flush_smp_call_function_queue (175,570,961 samples, 0.02%)</title><rect x="9.3015%" y="357" width="0.0159%" height="15" fill="rgb(232,164,16)" fg:x="102411260180" fg:w="175570961"/><text x="9.5515%" y="367.50"></text></g><g><title>flush_tlb_func_remote (155,497,183 samples, 0.01%)</title><rect x="9.3033%" y="341" width="0.0141%" height="15" fill="rgb(244,205,15)" fg:x="102431333958" fg:w="155497183"/><text x="9.5533%" y="351.50"></text></g><g><title>generic_smp_call_function_single_interrupt (211,590,409 samples, 0.02%)</title><rect x="9.3015%" y="373" width="0.0192%" height="15" fill="rgb(223,117,47)" fg:x="102411260180" fg:w="211590409"/><text x="9.5515%" y="383.50"></text></g><g><title>call_function_interrupt (272,951,507 samples, 0.02%)</title><rect x="9.2990%" y="405" width="0.0248%" height="15" fill="rgb(244,107,35)" fg:x="102383316189" fg:w="272951507"/><text x="9.5490%" y="415.50"></text></g><g><title>smp_call_function_interrupt (261,800,506 samples, 0.02%)</title><rect x="9.3000%" y="389" width="0.0238%" height="15" fill="rgb(205,140,8)" fg:x="102394467190" fg:w="261800506"/><text x="9.5500%" y="399.50"></text></g><g><title>blk_update_request (310,542,491 samples, 0.03%)</title><rect x="9.3492%" y="261" width="0.0282%" height="15" fill="rgb(228,84,46)" fg:x="102936758706" fg:w="310542491"/><text x="9.5992%" y="271.50"></text></g><g><title>bio_endio (307,884,230 samples, 0.03%)</title><rect x="9.3495%" y="245" width="0.0280%" height="15" fill="rgb(254,188,9)" fg:x="102939416967" fg:w="307884230"/><text x="9.5995%" y="255.50"></text></g><g><title>ext4_end_bio (307,884,230 samples, 0.03%)</title><rect x="9.3495%" y="229" width="0.0280%" height="15" fill="rgb(206,112,54)" fg:x="102939416967" fg:w="307884230"/><text x="9.5995%" y="239.50"></text></g><g><title>ext4_finish_bio (305,254,899 samples, 0.03%)</title><rect x="9.3497%" y="213" width="0.0277%" height="15" fill="rgb(216,84,49)" fg:x="102942046298" fg:w="305254899"/><text x="9.5997%" y="223.50"></text></g><g><title>end_page_writeback (219,599,286 samples, 0.02%)</title><rect x="9.3575%" y="197" width="0.0199%" height="15" fill="rgb(214,194,35)" fg:x="103027701911" fg:w="219599286"/><text x="9.6075%" y="207.50"></text></g><g><title>test_clear_page_writeback (200,550,981 samples, 0.02%)</title><rect x="9.3592%" y="181" width="0.0182%" height="15" fill="rgb(249,28,3)" fg:x="103046750216" fg:w="200550981"/><text x="9.6092%" y="191.50"></text></g><g><title>blk_done_softirq (321,747,211 samples, 0.03%)</title><rect x="9.3485%" y="341" width="0.0292%" height="15" fill="rgb(222,56,52)" fg:x="102928519416" fg:w="321747211"/><text x="9.5985%" y="351.50"></text></g><g><title>scsi_softirq_done (321,747,211 samples, 0.03%)</title><rect x="9.3485%" y="325" width="0.0292%" height="15" fill="rgb(245,217,50)" fg:x="102928519416" fg:w="321747211"/><text x="9.5985%" y="335.50"></text></g><g><title>scsi_finish_command (321,747,211 samples, 0.03%)</title><rect x="9.3485%" y="309" width="0.0292%" height="15" fill="rgb(213,201,24)" fg:x="102928519416" fg:w="321747211"/><text x="9.5985%" y="319.50"></text></g><g><title>scsi_io_completion (321,747,211 samples, 0.03%)</title><rect x="9.3485%" y="293" width="0.0292%" height="15" fill="rgb(248,116,28)" fg:x="102928519416" fg:w="321747211"/><text x="9.5985%" y="303.50"></text></g><g><title>scsi_end_request (321,747,211 samples, 0.03%)</title><rect x="9.3485%" y="277" width="0.0292%" height="15" fill="rgb(219,72,43)" fg:x="102928519416" fg:w="321747211"/><text x="9.5985%" y="287.50"></text></g><g><title>ret_from_intr (370,886,051 samples, 0.03%)</title><rect x="9.3445%" y="405" width="0.0337%" height="15" fill="rgb(209,138,14)" fg:x="102884484205" fg:w="370886051"/><text x="9.5945%" y="415.50"></text></g><g><title>do_IRQ (365,304,549 samples, 0.03%)</title><rect x="9.3450%" y="389" width="0.0332%" height="15" fill="rgb(222,18,33)" fg:x="102890065707" fg:w="365304549"/><text x="9.5950%" y="399.50"></text></g><g><title>irq_exit (329,659,525 samples, 0.03%)</title><rect x="9.3482%" y="373" width="0.0299%" height="15" fill="rgb(213,199,7)" fg:x="102925710731" fg:w="329659525"/><text x="9.5982%" y="383.50"></text></g><g><title>__softirqentry_text_start (329,659,525 samples, 0.03%)</title><rect x="9.3482%" y="357" width="0.0299%" height="15" fill="rgb(250,110,10)" fg:x="102925710731" fg:w="329659525"/><text x="9.5982%" y="367.50"></text></g><g><title>__sched_text_start (149,012,767 samples, 0.01%)</title><rect x="9.4031%" y="341" width="0.0135%" height="15" fill="rgb(248,123,6)" fg:x="103530068345" fg:w="149012767"/><text x="9.6531%" y="351.50"></text></g><g><title>schedule (157,934,823 samples, 0.01%)</title><rect x="9.4029%" y="357" width="0.0143%" height="15" fill="rgb(206,91,31)" fg:x="103527325055" fg:w="157934823"/><text x="9.6529%" y="367.50"></text></g><g><title>change_pte_range (738,597,648 samples, 0.07%)</title><rect x="9.4175%" y="277" width="0.0671%" height="15" fill="rgb(211,154,13)" fg:x="103688166016" fg:w="738597648"/><text x="9.6675%" y="287.50"></text></g><g><title>exit_to_usermode_loop (1,007,693,035 samples, 0.09%)</title><rect x="9.4021%" y="373" width="0.0915%" height="15" fill="rgb(225,148,7)" fg:x="103519198582" fg:w="1007693035"/><text x="9.6521%" y="383.50"></text></g><g><title>task_work_run (841,631,739 samples, 0.08%)</title><rect x="9.4172%" y="357" width="0.0764%" height="15" fill="rgb(220,160,43)" fg:x="103685259878" fg:w="841631739"/><text x="9.6672%" y="367.50"></text></g><g><title>task_numa_work (841,631,739 samples, 0.08%)</title><rect x="9.4172%" y="341" width="0.0764%" height="15" fill="rgb(213,52,39)" fg:x="103685259878" fg:w="841631739"/><text x="9.6672%" y="351.50"></text></g><g><title>change_prot_numa (841,631,739 samples, 0.08%)</title><rect x="9.4172%" y="325" width="0.0764%" height="15" fill="rgb(243,137,7)" fg:x="103685259878" fg:w="841631739"/><text x="9.6672%" y="335.50"></text></g><g><title>change_protection (841,631,739 samples, 0.08%)</title><rect x="9.4172%" y="309" width="0.0764%" height="15" fill="rgb(230,79,13)" fg:x="103685259878" fg:w="841631739"/><text x="9.6672%" y="319.50"></text></g><g><title>change_protection_range (841,631,739 samples, 0.08%)</title><rect x="9.4172%" y="293" width="0.0764%" height="15" fill="rgb(247,105,23)" fg:x="103685259878" fg:w="841631739"/><text x="9.6672%" y="303.50"></text></g><g><title>prepare_exit_to_usermode (1,217,547,633 samples, 0.11%)</title><rect x="9.3858%" y="389" width="0.1106%" height="15" fill="rgb(223,179,41)" fg:x="103339224065" fg:w="1217547633"/><text x="9.6358%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,402,152,086 samples, 0.67%)</title><rect x="8.8243%" y="453" width="0.6723%" height="15" fill="rgb(218,9,34)" fg:x="97156848742" fg:w="7402152086"/><text x="9.0743%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (6,892,726,271 samples, 0.63%)</title><rect x="8.8706%" y="437" width="0.6260%" height="15" fill="rgb(222,106,8)" fg:x="97666274557" fg:w="6892726271"/><text x="9.1206%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (6,892,726,271 samples, 0.63%)</title><rect x="8.8706%" y="421" width="0.6260%" height="15" fill="rgb(211,220,0)" fg:x="97666274557" fg:w="6892726271"/><text x="9.1206%" y="431.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1,303,630,572 samples, 0.12%)</title><rect x="9.3782%" y="405" width="0.1184%" height="15" fill="rgb(229,52,16)" fg:x="103255370256" fg:w="1303630572"/><text x="9.6282%" y="415.50"></text></g><g><title>down_read_trylock (580,694,115 samples, 0.05%)</title><rect x="77.3316%" y="341" width="0.0527%" height="15" fill="rgb(212,155,18)" fg:x="851433693659" fg:w="580694115"/><text x="77.5816%" y="351.50"></text></g><g><title>_raw_spin_lock (1,279,592,652 samples, 0.12%)</title><rect x="77.4222%" y="309" width="0.1162%" height="15" fill="rgb(242,21,14)" fg:x="852431048788" fg:w="1279592652"/><text x="77.6722%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (1,146,629,036 samples, 0.10%)</title><rect x="77.4343%" y="293" width="0.1041%" height="15" fill="rgb(222,19,48)" fg:x="852564012404" fg:w="1146629036"/><text x="77.6843%" y="303.50"></text></g><g><title>_raw_spin_lock (8,238,853,847 samples, 0.75%)</title><rect x="77.5455%" y="293" width="0.7483%" height="15" fill="rgb(232,45,27)" fg:x="853788180423" fg:w="8238853847"/><text x="77.7955%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (8,230,834,266 samples, 0.75%)</title><rect x="77.5462%" y="277" width="0.7476%" height="15" fill="rgb(249,103,42)" fg:x="853796200004" fg:w="8230834266"/><text x="77.7962%" y="287.50"></text></g><g><title>do_numa_page (8,307,519,001 samples, 0.75%)</title><rect x="77.5424%" y="309" width="0.7545%" height="15" fill="rgb(246,81,33)" fg:x="853754600402" fg:w="8307519001"/><text x="77.7924%" y="319.50"></text></g><g><title>__handle_mm_fault (9,925,959,340 samples, 0.90%)</title><rect x="77.3962%" y="325" width="0.9015%" height="15" fill="rgb(252,33,42)" fg:x="852144329930" fg:w="9925959340"/><text x="77.6462%" y="335.50"></text></g><g><title>handle_mm_fault (10,025,097,432 samples, 0.91%)</title><rect x="77.3911%" y="341" width="0.9105%" height="15" fill="rgb(209,212,41)" fg:x="852088493198" fg:w="10025097432"/><text x="77.6411%" y="351.50"></text></g><g><title>do_user_addr_fault (10,716,849,826 samples, 0.97%)</title><rect x="77.3285%" y="357" width="0.9734%" height="15" fill="rgb(207,154,6)" fg:x="851399781491" fg:w="10716849826"/><text x="77.5785%" y="367.50"></text></g><g><title>__do_page_fault (11,077,146,013 samples, 1.01%)</title><rect x="77.3244%" y="373" width="1.0061%" height="15" fill="rgb(223,64,47)" fg:x="851354811135" fg:w="11077146013"/><text x="77.5744%" y="383.50"></text></g><g><title>up_read (302,085,388 samples, 0.03%)</title><rect x="78.3031%" y="357" width="0.0274%" height="15" fill="rgb(211,161,38)" fg:x="862129871760" fg:w="302085388"/><text x="78.5531%" y="367.50"></text></g><g><title>page_fault (11,093,356,243 samples, 1.01%)</title><rect x="77.3235%" y="405" width="1.0076%" height="15" fill="rgb(219,138,40)" fg:x="851343871110" fg:w="11093356243"/><text x="77.5735%" y="415.50"></text></g><g><title>do_page_fault (11,085,312,511 samples, 1.01%)</title><rect x="77.3242%" y="389" width="1.0068%" height="15" fill="rgb(241,228,46)" fg:x="851351914842" fg:w="11085312511"/><text x="77.5742%" y="399.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (480,187,737 samples, 0.04%)</title><rect x="78.3315%" y="405" width="0.0436%" height="15" fill="rgb(223,209,38)" fg:x="862442811301" fg:w="480187737"/><text x="78.5815%" y="415.50"></text></g><g><title>prepare_exit_to_usermode (319,752,352 samples, 0.03%)</title><rect x="78.3461%" y="389" width="0.0290%" height="15" fill="rgb(236,164,45)" fg:x="862603246686" fg:w="319752352"/><text x="78.5961%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (765,777,309,100 samples, 69.55%)</title><rect x="8.8243%" y="469" width="69.5519%" height="15" fill="rgb(231,15,5)" fg:x="97156848742" fg:w="765777309100"/><text x="9.0743%" y="479.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find</text></g><g><title>QUEUE_TEST::time_parallel::{{closure}}::{{closure}} (758,375,157,014 samples, 68.88%)</title><rect x="9.4966%" y="453" width="68.8796%" height="15" fill="rgb(252,35,15)" fg:x="104559000828" fg:w="758375157014"/><text x="9.7466%" y="463.50">QUEUE_TEST::time_parallel::{{closure}}::{{closure}}</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (758,375,157,014 samples, 68.88%)</title><rect x="9.4966%" y="437" width="68.8796%" height="15" fill="rgb(248,181,18)" fg:x="104559000828" fg:w="758375157014"/><text x="9.7466%" y="447.50">core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12,065,642,822 samples, 1.10%)</title><rect x="77.2803%" y="421" width="1.0959%" height="15" fill="rgb(233,39,42)" fg:x="850868515020" fg:w="12065642822"/><text x="77.5303%" y="431.50"></text></g><g><title>QUEUE_TEST::particle::Particle::new (133,009,624 samples, 0.01%)</title><rect x="78.3894%" y="453" width="0.0121%" height="15" fill="rgb(238,110,33)" fg:x="863079765104" fg:w="133009624"/><text x="78.6394%" y="463.50"></text></g><g><title>QUEUE_TEST::csvreader::Rec::p1 (281,472,371 samples, 0.03%)</title><rect x="78.3761%" y="469" width="0.0256%" height="15" fill="rgb(233,195,10)" fg:x="862934157842" fg:w="281472371"/><text x="78.6261%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (767,171,372,054 samples, 69.68%)</title><rect x="8.7344%" y="501" width="69.6785%" height="15" fill="rgb(254,105,3)" fg:x="96167436401" fg:w="767171372054"/><text x="8.9844%" y="511.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut</text></g><g><title>QUEUE_TEST::time_parallel::{{closure}} (767,078,415,261 samples, 69.67%)</title><rect x="8.7429%" y="485" width="69.6700%" height="15" fill="rgb(221,225,9)" fg:x="96260393194" fg:w="767078415261"/><text x="8.9929%" y="495.50">QUEUE_TEST::time_parallel::{{closure}}</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (767,775,969,499 samples, 69.73%)</title><rect x="8.6800%" y="517" width="69.7334%" height="15" fill="rgb(224,227,45)" fg:x="95567983605" fg:w="767775969499"/><text x="8.9300%" y="527.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>core::sync::atomic::AtomicUsize::load (174,494,991 samples, 0.02%)</title><rect x="78.4625%" y="501" width="0.0158%" height="15" fill="rgb(229,198,43)" fg:x="863884389043" fg:w="174494991"/><text x="78.7125%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (174,494,991 samples, 0.02%)</title><rect x="78.4625%" y="485" width="0.0158%" height="15" fill="rgb(206,209,35)" fg:x="863884389043" fg:w="174494991"/><text x="78.7125%" y="495.50"></text></g><g><title>core::sync::atomic::fence (359,335,906 samples, 0.03%)</title><rect x="78.4783%" y="501" width="0.0326%" height="15" fill="rgb(245,195,53)" fg:x="864058884034" fg:w="359335906"/><text x="78.7283%" y="511.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (1,181,190,524 samples, 0.11%)</title><rect x="78.4142%" y="517" width="0.1073%" height="15" fill="rgb(240,92,26)" fg:x="863352683312" fg:w="1181190524"/><text x="78.6642%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,735,798,678 samples, 0.16%)</title><rect x="79.1387%" y="501" width="0.1577%" height="15" fill="rgb(207,40,23)" fg:x="871329702337" fg:w="1735798678"/><text x="79.3887%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,735,798,678 samples, 0.16%)</title><rect x="79.1387%" y="485" width="0.1577%" height="15" fill="rgb(223,111,35)" fg:x="871329702337" fg:w="1735798678"/><text x="79.3887%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,735,798,678 samples, 0.16%)</title><rect x="79.1387%" y="469" width="0.1577%" height="15" fill="rgb(229,147,28)" fg:x="871329702337" fg:w="1735798678"/><text x="79.3887%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (246,387,888 samples, 0.02%)</title><rect x="79.4966%" y="453" width="0.0224%" height="15" fill="rgb(211,29,28)" fg:x="875270312240" fg:w="246387888"/><text x="79.7466%" y="463.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (2,084,687,450 samples, 0.19%)</title><rect x="79.5285%" y="453" width="0.1893%" height="15" fill="rgb(228,72,33)" fg:x="875621523452" fg:w="2084687450"/><text x="79.7785%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (2,084,687,450 samples, 0.19%)</title><rect x="79.5285%" y="437" width="0.1893%" height="15" fill="rgb(205,214,31)" fg:x="875621523452" fg:w="2084687450"/><text x="79.7785%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_store (2,084,687,450 samples, 0.19%)</title><rect x="79.5285%" y="421" width="0.1893%" height="15" fill="rgb(224,111,15)" fg:x="875621523452" fg:w="2084687450"/><text x="79.7785%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (4,612,587,300 samples, 0.42%)</title><rect x="79.2994%" y="501" width="0.4189%" height="15" fill="rgb(253,21,26)" fg:x="873099290274" fg:w="4612587300"/><text x="79.5494%" y="511.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (4,612,587,300 samples, 0.42%)</title><rect x="79.2994%" y="485" width="0.4189%" height="15" fill="rgb(245,139,43)" fg:x="873099290274" fg:w="4612587300"/><text x="79.5494%" y="495.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (4,602,347,056 samples, 0.42%)</title><rect x="79.3003%" y="469" width="0.4180%" height="15" fill="rgb(252,170,7)" fg:x="873109530518" fg:w="4602347056"/><text x="79.5503%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicIsize::compare_exchange (543,893,694 samples, 0.05%)</title><rect x="79.7188%" y="501" width="0.0494%" height="15" fill="rgb(231,118,14)" fg:x="877717458707" fg:w="543893694"/><text x="79.9688%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (543,893,694 samples, 0.05%)</title><rect x="79.7188%" y="485" width="0.0494%" height="15" fill="rgb(238,83,0)" fg:x="877717458707" fg:w="543893694"/><text x="79.9688%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (2,107,444,124 samples, 0.19%)</title><rect x="79.7682%" y="501" width="0.1914%" height="15" fill="rgb(221,39,39)" fg:x="878261352401" fg:w="2107444124"/><text x="80.0182%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (2,107,444,124 samples, 0.19%)</title><rect x="79.7682%" y="485" width="0.1914%" height="15" fill="rgb(222,119,46)" fg:x="878261352401" fg:w="2107444124"/><text x="80.0182%" y="495.50"></text></g><g><title>core::ptr::read_volatile (284,318,820 samples, 0.03%)</title><rect x="79.9596%" y="485" width="0.0258%" height="15" fill="rgb(222,165,49)" fg:x="880368796525" fg:w="284318820"/><text x="80.2096%" y="495.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (384,611,514 samples, 0.03%)</title><rect x="79.9596%" y="501" width="0.0349%" height="15" fill="rgb(219,113,52)" fg:x="880368796525" fg:w="384611514"/><text x="80.2096%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,194,154,688 samples, 0.20%)</title><rect x="80.2218%" y="453" width="0.1993%" height="15" fill="rgb(214,7,15)" fg:x="883255512438" fg:w="2194154688"/><text x="80.4718%" y="463.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (2,194,154,688 samples, 0.20%)</title><rect x="80.2218%" y="437" width="0.1993%" height="15" fill="rgb(235,32,4)" fg:x="883255512438" fg:w="2194154688"/><text x="80.4718%" y="447.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (2,194,154,688 samples, 0.20%)</title><rect x="80.2218%" y="421" width="0.1993%" height="15" fill="rgb(238,90,54)" fg:x="883255512438" fg:w="2194154688"/><text x="80.4718%" y="431.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (4,661,636,598 samples, 0.42%)</title><rect x="79.9987%" y="501" width="0.4234%" height="15" fill="rgb(213,208,19)" fg:x="880799285644" fg:w="4661636598"/><text x="80.2487%" y="511.50"></text></g><g><title>crossbeam_epoch::default::with_handle (4,661,636,598 samples, 0.42%)</title><rect x="79.9987%" y="485" width="0.4234%" height="15" fill="rgb(233,156,4)" fg:x="880799285644" fg:w="4661636598"/><text x="80.2487%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,612,977,203 samples, 0.42%)</title><rect x="80.0032%" y="469" width="0.4190%" height="15" fill="rgb(207,194,5)" fg:x="880847945039" fg:w="4612977203"/><text x="80.2532%" y="479.50"></text></g><g><title>crossbeam_epoch::default::pin (3,889,527,616 samples, 0.35%)</title><rect x="80.4221%" y="501" width="0.3533%" height="15" fill="rgb(206,111,30)" fg:x="885460922242" fg:w="3889527616"/><text x="80.6721%" y="511.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (24,862,341,025 samples, 2.26%)</title><rect x="78.5214%" y="517" width="2.2581%" height="15" fill="rgb(243,70,54)" fg:x="864533873836" fg:w="24862341025"/><text x="78.7714%" y="527.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (509,696,371 samples, 0.05%)</title><rect x="80.7933%" y="501" width="0.0463%" height="15" fill="rgb(242,28,8)" fg:x="889547505934" fg:w="509696371"/><text x="81.0433%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (509,696,371 samples, 0.05%)</title><rect x="80.7933%" y="485" width="0.0463%" height="15" fill="rgb(219,106,18)" fg:x="889547505934" fg:w="509696371"/><text x="81.0433%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (509,696,371 samples, 0.05%)</title><rect x="80.7933%" y="469" width="0.0463%" height="15" fill="rgb(244,222,10)" fg:x="889547505934" fg:w="509696371"/><text x="81.0433%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (880,325,061 samples, 0.08%)</title><rect x="80.8491%" y="501" width="0.0800%" height="15" fill="rgb(236,179,52)" fg:x="890161352205" fg:w="880325061"/><text x="81.0991%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (880,325,061 samples, 0.08%)</title><rect x="80.8491%" y="485" width="0.0800%" height="15" fill="rgb(213,23,39)" fg:x="890161352205" fg:w="880325061"/><text x="81.0991%" y="495.50"></text></g><g><title>core::sync::atomic::fence (285,624,053 samples, 0.03%)</title><rect x="80.9298%" y="501" width="0.0259%" height="15" fill="rgb(238,48,10)" fg:x="891049899959" fg:w="285624053"/><text x="81.1798%" y="511.50"></text></g><g><title>core::ptr::read_volatile (331,426,300 samples, 0.03%)</title><rect x="80.9557%" y="485" width="0.0301%" height="15" fill="rgb(251,196,23)" fg:x="891335524012" fg:w="331426300"/><text x="81.2057%" y="495.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (350,925,414 samples, 0.03%)</title><rect x="80.9557%" y="501" width="0.0319%" height="15" fill="rgb(250,152,24)" fg:x="891335524012" fg:w="350925414"/><text x="81.2057%" y="511.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (2,292,782,120 samples, 0.21%)</title><rect x="80.7796%" y="517" width="0.2082%" height="15" fill="rgb(209,150,17)" fg:x="889396214861" fg:w="2292782120"/><text x="81.0296%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,987,437,145 samples, 0.18%)</title><rect x="81.3222%" y="485" width="0.1805%" height="15" fill="rgb(234,202,34)" fg:x="895370522545" fg:w="1987437145"/><text x="81.5722%" y="495.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (1,987,437,145 samples, 0.18%)</title><rect x="81.3222%" y="469" width="0.1805%" height="15" fill="rgb(253,148,53)" fg:x="895370522545" fg:w="1987437145"/><text x="81.5722%" y="479.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (1,987,437,145 samples, 0.18%)</title><rect x="81.3222%" y="453" width="0.1805%" height="15" fill="rgb(218,129,16)" fg:x="895370522545" fg:w="1987437145"/><text x="81.5722%" y="463.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;usize&gt; as core::ops::arith::Add&gt;::add (191,126,505 samples, 0.02%)</title><rect x="81.6362%" y="421" width="0.0174%" height="15" fill="rgb(216,85,19)" fg:x="898828358018" fg:w="191126505"/><text x="81.8862%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (191,126,505 samples, 0.02%)</title><rect x="81.6362%" y="405" width="0.0174%" height="15" fill="rgb(235,228,7)" fg:x="898828358018" fg:w="191126505"/><text x="81.8862%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (3,651,369,162 samples, 0.33%)</title><rect x="81.6536%" y="421" width="0.3316%" height="15" fill="rgb(245,175,0)" fg:x="899019484523" fg:w="3651369162"/><text x="81.9036%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (380,465,622 samples, 0.03%)</title><rect x="81.9852%" y="421" width="0.0346%" height="15" fill="rgb(208,168,36)" fg:x="902670853685" fg:w="380465622"/><text x="82.2352%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (380,465,622 samples, 0.03%)</title><rect x="81.9852%" y="405" width="0.0346%" height="15" fill="rgb(246,171,24)" fg:x="902670853685" fg:w="380465622"/><text x="82.2352%" y="415.50"></text></g><g><title>core::mem::replace (380,465,622 samples, 0.03%)</title><rect x="81.9852%" y="389" width="0.0346%" height="15" fill="rgb(215,142,24)" fg:x="902670853685" fg:w="380465622"/><text x="82.2352%" y="399.50"></text></g><g><title>core::ptr::write (380,465,622 samples, 0.03%)</title><rect x="81.9852%" y="373" width="0.0346%" height="15" fill="rgb(250,187,7)" fg:x="902670853685" fg:w="380465622"/><text x="82.2352%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (155,810,330 samples, 0.01%)</title><rect x="82.0198%" y="421" width="0.0142%" height="15" fill="rgb(228,66,33)" fg:x="903051319307" fg:w="155810330"/><text x="82.2698%" y="431.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (23,771,002,606 samples, 2.16%)</title><rect x="82.0339%" y="421" width="2.1590%" height="15" fill="rgb(234,215,21)" fg:x="903207129637" fg:w="23771002606"/><text x="82.2839%" y="431.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23,771,002,606 samples, 2.16%)</title><rect x="82.0339%" y="405" width="2.1590%" height="15" fill="rgb(222,191,20)" fg:x="903207129637" fg:w="23771002606"/><text x="82.2839%" y="415.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (23,771,002,606 samples, 2.16%)</title><rect x="82.0339%" y="389" width="2.1590%" height="15" fill="rgb(245,79,54)" fg:x="903207129637" fg:w="23771002606"/><text x="82.2839%" y="399.50">c..</text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (9,597,219,399 samples, 0.87%)</title><rect x="84.1930%" y="421" width="0.8717%" height="15" fill="rgb(240,10,37)" fg:x="926978132243" fg:w="9597219399"/><text x="84.4430%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9,597,219,399 samples, 0.87%)</title><rect x="84.1930%" y="405" width="0.8717%" height="15" fill="rgb(214,192,32)" fg:x="926978132243" fg:w="9597219399"/><text x="84.4430%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (9,597,219,399 samples, 0.87%)</title><rect x="84.1930%" y="389" width="0.8717%" height="15" fill="rgb(209,36,54)" fg:x="926978132243" fg:w="9597219399"/><text x="84.4430%" y="399.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (706,311,008 samples, 0.06%)</title><rect x="85.0646%" y="421" width="0.0642%" height="15" fill="rgb(220,10,11)" fg:x="936575351642" fg:w="706311008"/><text x="85.3146%" y="431.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (40,071,385,019 samples, 3.64%)</title><rect x="81.5027%" y="485" width="3.6395%" height="15" fill="rgb(221,106,17)" fg:x="897357959690" fg:w="40071385019"/><text x="81.7527%" y="495.50">cros..</text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (40,071,385,019 samples, 3.64%)</title><rect x="81.5027%" y="469" width="3.6395%" height="15" fill="rgb(251,142,44)" fg:x="897357959690" fg:w="40071385019"/><text x="81.7527%" y="479.50">cros..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (40,071,385,019 samples, 3.64%)</title><rect x="81.5027%" y="453" width="3.6395%" height="15" fill="rgb(238,13,15)" fg:x="897357959690" fg:w="40071385019"/><text x="81.7527%" y="463.50">cros..</text></g><g><title>crossbeam_epoch::internal::Local::pin (40,071,385,019 samples, 3.64%)</title><rect x="81.5027%" y="437" width="3.6395%" height="15" fill="rgb(208,107,27)" fg:x="897357959690" fg:w="40071385019"/><text x="81.7527%" y="447.50">cros..</text></g><g><title>crossbeam_epoch::internal::Local::global (147,682,059 samples, 0.01%)</title><rect x="85.1288%" y="421" width="0.0134%" height="15" fill="rgb(205,136,37)" fg:x="937281662650" fg:w="147682059"/><text x="85.3788%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (147,682,059 samples, 0.01%)</title><rect x="85.1288%" y="405" width="0.0134%" height="15" fill="rgb(250,205,27)" fg:x="937281662650" fg:w="147682059"/><text x="85.3788%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (147,682,059 samples, 0.01%)</title><rect x="85.1288%" y="389" width="0.0134%" height="15" fill="rgb(210,80,43)" fg:x="937281662650" fg:w="147682059"/><text x="85.3788%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (147,682,059 samples, 0.01%)</title><rect x="85.1288%" y="373" width="0.0134%" height="15" fill="rgb(247,160,36)" fg:x="937281662650" fg:w="147682059"/><text x="85.3788%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (42,162,190,979 samples, 3.83%)</title><rect x="81.3131%" y="501" width="3.8294%" height="15" fill="rgb(234,13,49)" fg:x="895270898661" fg:w="42162190979"/><text x="81.5631%" y="511.50">std:..</text></g><g><title>crossbeam_epoch::default::with_handle (45,764,580,027 samples, 4.16%)</title><rect x="80.9878%" y="517" width="4.1566%" height="15" fill="rgb(234,122,0)" fg:x="891688996981" fg:w="45764580027"/><text x="81.2378%" y="527.50">cross..</text></g><g><title>crossbeam_epoch::internal::Global::collect (190,932,656 samples, 0.02%)</title><rect x="85.1444%" y="517" width="0.0173%" height="15" fill="rgb(207,146,38)" fg:x="937453577008" fg:w="190932656"/><text x="85.3944%" y="527.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (8,152,824,239 samples, 0.74%)</title><rect x="85.3030%" y="485" width="0.7405%" height="15" fill="rgb(207,177,25)" fg:x="939199798468" fg:w="8152824239"/><text x="85.5530%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8,152,824,239 samples, 0.74%)</title><rect x="85.3030%" y="469" width="0.7405%" height="15" fill="rgb(211,178,42)" fg:x="939199798468" fg:w="8152824239"/><text x="85.5530%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (8,152,824,239 samples, 0.74%)</title><rect x="85.3030%" y="453" width="0.7405%" height="15" fill="rgb(230,69,54)" fg:x="939199798468" fg:w="8152824239"/><text x="85.5530%" y="463.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,237,362,710 samples, 0.84%)</title><rect x="85.2520%" y="501" width="0.8390%" height="15" fill="rgb(214,135,41)" fg:x="938638962575" fg:w="9237362710"/><text x="85.5020%" y="511.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (523,702,578 samples, 0.05%)</title><rect x="86.0435%" y="485" width="0.0476%" height="15" fill="rgb(237,67,25)" fg:x="947352622707" fg:w="523702578"/><text x="86.2935%" y="495.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (523,702,578 samples, 0.05%)</title><rect x="86.0435%" y="469" width="0.0476%" height="15" fill="rgb(222,189,50)" fg:x="947352622707" fg:w="523702578"/><text x="86.2935%" y="479.50"></text></g><g><title>core::sync::atomic::fence (252,489,305 samples, 0.02%)</title><rect x="86.0913%" y="501" width="0.0229%" height="15" fill="rgb(245,148,34)" fg:x="947879260588" fg:w="252489305"/><text x="86.3413%" y="511.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (15,077,073,461 samples, 1.37%)</title><rect x="86.1142%" y="501" width="1.3694%" height="15" fill="rgb(222,29,6)" fg:x="948131749893" fg:w="15077073461"/><text x="86.3642%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15,077,073,461 samples, 1.37%)</title><rect x="86.1142%" y="485" width="1.3694%" height="15" fill="rgb(221,189,43)" fg:x="948131749893" fg:w="15077073461"/><text x="86.3642%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (15,077,073,461 samples, 1.37%)</title><rect x="86.1142%" y="469" width="1.3694%" height="15" fill="rgb(207,36,27)" fg:x="948131749893" fg:w="15077073461"/><text x="86.3642%" y="479.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (25,688,836,941 samples, 2.33%)</title><rect x="85.1617%" y="517" width="2.3332%" height="15" fill="rgb(217,90,24)" fg:x="937644509664" fg:w="25688836941"/><text x="85.4117%" y="527.50">c..</text></g><g><title>__memmove_avx_unaligned_erms (2,812,320,967 samples, 0.26%)</title><rect x="87.5138%" y="501" width="0.2554%" height="15" fill="rgb(224,66,35)" fg:x="963540911938" fg:w="2812320967"/><text x="87.7638%" y="511.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (202,991,205 samples, 0.02%)</title><rect x="87.7727%" y="485" width="0.0184%" height="15" fill="rgb(221,13,50)" fg:x="966391204088" fg:w="202991205"/><text x="88.0227%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (202,991,205 samples, 0.02%)</title><rect x="87.7727%" y="469" width="0.0184%" height="15" fill="rgb(236,68,49)" fg:x="966391204088" fg:w="202991205"/><text x="88.0227%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (202,991,205 samples, 0.02%)</title><rect x="87.7727%" y="453" width="0.0184%" height="15" fill="rgb(229,146,28)" fg:x="966391204088" fg:w="202991205"/><text x="88.0227%" y="463.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (3,284,515,744 samples, 0.30%)</title><rect x="87.4951%" y="517" width="0.2983%" height="15" fill="rgb(225,31,38)" fg:x="963335780637" fg:w="3284515744"/><text x="87.7451%" y="527.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::pop_if_internal (267,063,476 samples, 0.02%)</title><rect x="87.7692%" y="501" width="0.0243%" height="15" fill="rgb(250,208,3)" fg:x="966353232905" fg:w="267063476"/><text x="88.0192%" y="511.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (569,867,167 samples, 0.05%)</title><rect x="87.8031%" y="501" width="0.0518%" height="15" fill="rgb(246,54,23)" fg:x="966726978701" fg:w="569867167"/><text x="88.0531%" y="511.50"></text></g><g><title>core::slice::ascii::is_ascii (569,867,167 samples, 0.05%)</title><rect x="87.8031%" y="485" width="0.0518%" height="15" fill="rgb(243,76,11)" fg:x="966726978701" fg:w="569867167"/><text x="88.0531%" y="495.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (729,459,291 samples, 0.07%)</title><rect x="87.7935%" y="517" width="0.0663%" height="15" fill="rgb(245,21,50)" fg:x="966620296381" fg:w="729459291"/><text x="88.0435%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (135,452,569 samples, 0.01%)</title><rect x="87.8795%" y="501" width="0.0123%" height="15" fill="rgb(228,9,43)" fg:x="967567475685" fg:w="135452569"/><text x="88.1295%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (113,105,199 samples, 0.01%)</title><rect x="87.8815%" y="485" width="0.0103%" height="15" fill="rgb(208,100,47)" fg:x="967589823055" fg:w="113105199"/><text x="88.1315%" y="495.50"></text></g><g><title>csv::deserializer::deserialize_string_record (444,565,834 samples, 0.04%)</title><rect x="87.8597%" y="517" width="0.0404%" height="15" fill="rgb(232,26,8)" fg:x="967349755672" fg:w="444565834"/><text x="88.1097%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (292,870,211 samples, 0.03%)</title><rect x="88.1725%" y="485" width="0.0266%" height="15" fill="rgb(216,166,38)" fg:x="970793411638" fg:w="292870211"/><text x="88.4225%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::gt (192,460,386 samples, 0.02%)</title><rect x="88.1991%" y="485" width="0.0175%" height="15" fill="rgb(251,202,51)" fg:x="971086281849" fg:w="192460386"/><text x="88.4491%" y="495.50"></text></g><g><title>csv_core::reader::Dfa::get_output (1,778,186,931 samples, 0.16%)</title><rect x="88.2166%" y="485" width="0.1615%" height="15" fill="rgb(254,216,34)" fg:x="971278742235" fg:w="1778186931"/><text x="88.4666%" y="495.50"></text></g><g><title>csv_core::reader::DfaClasses::scan_and_copy (9,428,594,280 samples, 0.86%)</title><rect x="88.3804%" y="485" width="0.8564%" height="15" fill="rgb(251,32,27)" fg:x="973082779064" fg:w="9428594280"/><text x="88.6304%" y="495.50"></text></g><g><title>csv_core::reader::Reader::read_record_dfa (14,521,967,725 samples, 1.32%)</title><rect x="87.9183%" y="501" width="1.3190%" height="15" fill="rgb(208,127,28)" fg:x="967995193382" fg:w="14521967725"/><text x="88.1683%" y="511.50"></text></g><g><title>csv_core::reader::Reader::read_record (14,731,526,641 samples, 1.34%)</title><rect x="87.9001%" y="517" width="1.3380%" height="15" fill="rgb(224,137,22)" fg:x="967794321506" fg:w="14731526641"/><text x="88.1501%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1,527,356,725 samples, 0.14%)</title><rect x="89.2381%" y="517" width="0.1387%" height="15" fill="rgb(254,70,32)" fg:x="982525848147" fg:w="1527356725"/><text x="89.4881%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (324,065,371 samples, 0.03%)</title><rect x="89.3768%" y="517" width="0.0294%" height="15" fill="rgb(229,75,37)" fg:x="984053204872" fg:w="324065371"/><text x="89.6268%" y="527.50"></text></g><g><title>do_numa_page (121,283,697 samples, 0.01%)</title><rect x="89.5080%" y="421" width="0.0110%" height="15" fill="rgb(252,64,23)" fg:x="985497550501" fg:w="121283697"/><text x="89.7580%" y="431.50"></text></g><g><title>page_fault (989,263,223 samples, 0.09%)</title><rect x="89.4294%" y="517" width="0.0899%" height="15" fill="rgb(232,162,48)" fg:x="984632514120" fg:w="989263223"/><text x="89.6794%" y="527.50"></text></g><g><title>do_page_fault (168,469,832 samples, 0.02%)</title><rect x="89.5040%" y="501" width="0.0153%" height="15" fill="rgb(246,160,12)" fg:x="985453307511" fg:w="168469832"/><text x="89.7540%" y="511.50"></text></g><g><title>__do_page_fault (168,469,832 samples, 0.02%)</title><rect x="89.5040%" y="485" width="0.0153%" height="15" fill="rgb(247,166,0)" fg:x="985453307511" fg:w="168469832"/><text x="89.7540%" y="495.50"></text></g><g><title>do_user_addr_fault (160,728,448 samples, 0.01%)</title><rect x="89.5047%" y="469" width="0.0146%" height="15" fill="rgb(249,219,21)" fg:x="985461048895" fg:w="160728448"/><text x="89.7547%" y="479.50"></text></g><g><title>handle_mm_fault (147,599,846 samples, 0.01%)</title><rect x="89.5059%" y="453" width="0.0134%" height="15" fill="rgb(205,209,3)" fg:x="985474177497" fg:w="147599846"/><text x="89.7559%" y="463.50"></text></g><g><title>__handle_mm_fault (141,863,532 samples, 0.01%)</title><rect x="89.5064%" y="437" width="0.0129%" height="15" fill="rgb(243,44,1)" fg:x="985479913811" fg:w="141863532"/><text x="89.7564%" y="447.50"></text></g><g><title>&lt;rayon::vec::SliceDrain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (864,550,654 samples, 0.08%)</title><rect x="89.5769%" y="485" width="0.0785%" height="15" fill="rgb(206,159,16)" fg:x="986256430557" fg:w="864550654"/><text x="89.8269%" y="495.50"></text></g><g><title>core::ptr::read (804,607,973 samples, 0.07%)</title><rect x="89.5824%" y="469" width="0.0731%" height="15" fill="rgb(244,77,30)" fg:x="986316373238" fg:w="804607973"/><text x="89.8324%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (875,370,934 samples, 0.08%)</title><rect x="89.5769%" y="501" width="0.0795%" height="15" fill="rgb(218,69,12)" fg:x="986256430557" fg:w="875370934"/><text x="89.8269%" y="511.50"></text></g><g><title>&lt;rayon::iter::flatten::FlattenFolder&lt;C,&lt;C as rayon::iter::plumbing::Consumer&lt;&lt;T as rayon::iter::IntoParallelIterator&gt;::Item&gt;&gt;::Result&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (305,412,543 samples, 0.03%)</title><rect x="89.6564%" y="501" width="0.0277%" height="15" fill="rgb(212,87,7)" fg:x="987131801491" fg:w="305412543"/><text x="89.9064%" y="511.50"></text></g><g><title>&lt;rayon::option::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (284,899,181 samples, 0.03%)</title><rect x="89.6583%" y="485" width="0.0259%" height="15" fill="rgb(245,114,25)" fg:x="987152314853" fg:w="284899181"/><text x="89.9083%" y="495.50"></text></g><g><title>&lt;rayon::option::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::drive (284,899,181 samples, 0.03%)</title><rect x="89.6583%" y="469" width="0.0259%" height="15" fill="rgb(210,61,42)" fg:x="987152314853" fg:w="284899181"/><text x="89.9083%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1,823,843,043 samples, 0.17%)</title><rect x="89.5193%" y="517" width="0.1657%" height="15" fill="rgb(211,52,33)" fg:x="985621777343" fg:w="1823843043"/><text x="89.7693%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapConsumer&lt;C,F&gt; as rayon::iter::plumbing::Consumer&lt;T&gt;&gt;::split_at (322,253,586 samples, 0.03%)</title><rect x="89.7687%" y="501" width="0.0293%" height="15" fill="rgb(234,58,33)" fg:x="988368439076" fg:w="322253586"/><text x="90.0187%" y="511.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (132,794,219 samples, 0.01%)</title><rect x="89.8609%" y="485" width="0.0121%" height="15" fill="rgb(220,115,36)" fg:x="989383693304" fg:w="132794219"/><text x="90.1109%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (641,831,981 samples, 0.06%)</title><rect x="89.8152%" y="501" width="0.0583%" height="15" fill="rgb(243,153,54)" fg:x="988879687034" fg:w="641831981"/><text x="90.0652%" y="511.50"></text></g><g><title>rayon_core::join::join_context (363,237,310 samples, 0.03%)</title><rect x="89.8735%" y="501" width="0.0330%" height="15" fill="rgb(251,47,18)" fg:x="989521519015" fg:w="363237310"/><text x="90.1235%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,444,052,013 samples, 0.22%)</title><rect x="89.6849%" y="517" width="0.2220%" height="15" fill="rgb(242,102,42)" fg:x="987445620386" fg:w="2444052013"/><text x="89.9349%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;rayon_core::job::JobResult&lt;core::option::Option&lt;usize&gt;&gt;&gt;&gt; (201,368,448 samples, 0.02%)</title><rect x="89.9201%" y="501" width="0.0183%" height="15" fill="rgb(234,31,38)" fg:x="990034510175" fg:w="201368448"/><text x="90.1701%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::job::JobResult&lt;core::option::Option&lt;usize&gt;&gt;&gt; (201,368,448 samples, 0.02%)</title><rect x="89.9201%" y="485" width="0.0183%" height="15" fill="rgb(221,117,51)" fg:x="990034510175" fg:w="201368448"/><text x="90.1701%" y="495.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (429,483,500 samples, 0.04%)</title><rect x="89.9089%" y="517" width="0.0390%" height="15" fill="rgb(212,20,18)" fg:x="989911467849" fg:w="429483500"/><text x="90.1589%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (194,850,083 samples, 0.02%)</title><rect x="90.0299%" y="501" width="0.0177%" height="15" fill="rgb(245,133,36)" fg:x="991243927408" fg:w="194850083"/><text x="90.2799%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (151,390,192 samples, 0.01%)</title><rect x="90.0540%" y="469" width="0.0138%" height="15" fill="rgb(212,6,19)" fg:x="991509748004" fg:w="151390192"/><text x="90.3040%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (151,390,192 samples, 0.01%)</title><rect x="90.0540%" y="453" width="0.0138%" height="15" fill="rgb(218,1,36)" fg:x="991509748004" fg:w="151390192"/><text x="90.3040%" y="463.50"></text></g><g><title>rayon_core::latch::SpinLatch::probe (160,060,027 samples, 0.01%)</title><rect x="90.0535%" y="501" width="0.0145%" height="15" fill="rgb(246,84,54)" fg:x="991504179050" fg:w="160060027"/><text x="90.3035%" y="511.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (160,060,027 samples, 0.01%)</title><rect x="90.0535%" y="485" width="0.0145%" height="15" fill="rgb(242,110,6)" fg:x="991504179050" fg:w="160060027"/><text x="90.3035%" y="495.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::push (127,782,437 samples, 0.01%)</title><rect x="90.0730%" y="485" width="0.0116%" height="15" fill="rgb(214,47,5)" fg:x="991718744228" fg:w="127782437"/><text x="90.3230%" y="495.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (1,097,646,872 samples, 0.10%)</title><rect x="90.0871%" y="437" width="0.0997%" height="15" fill="rgb(218,159,25)" fg:x="991873491327" fg:w="1097646872"/><text x="90.3371%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,097,646,872 samples, 0.10%)</title><rect x="90.0871%" y="421" width="0.0997%" height="15" fill="rgb(215,211,28)" fg:x="991873491327" fg:w="1097646872"/><text x="90.3371%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (1,097,646,872 samples, 0.10%)</title><rect x="90.0871%" y="405" width="0.0997%" height="15" fill="rgb(238,59,32)" fg:x="991873491327" fg:w="1097646872"/><text x="90.3371%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (1,323,680,653 samples, 0.12%)</title><rect x="90.0681%" y="501" width="0.1202%" height="15" fill="rgb(226,82,3)" fg:x="991664239077" fg:w="1323680653"/><text x="90.3181%" y="511.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (1,141,393,065 samples, 0.10%)</title><rect x="90.0846%" y="485" width="0.1037%" height="15" fill="rgb(240,164,32)" fg:x="991846526665" fg:w="1141393065"/><text x="90.3346%" y="495.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (1,141,393,065 samples, 0.10%)</title><rect x="90.0846%" y="469" width="0.1037%" height="15" fill="rgb(232,46,7)" fg:x="991846526665" fg:w="1141393065"/><text x="90.3346%" y="479.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (1,122,716,879 samples, 0.10%)</title><rect x="90.0863%" y="453" width="0.1020%" height="15" fill="rgb(229,129,53)" fg:x="991865202851" fg:w="1122716879"/><text x="90.3363%" y="463.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,788,490,745 samples, 0.25%)</title><rect x="89.9479%" y="517" width="0.2533%" height="15" fill="rgb(234,188,29)" fg:x="990340951349" fg:w="2788490745"/><text x="90.1979%" y="527.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (164,099,282 samples, 0.01%)</title><rect x="90.2428%" y="469" width="0.0149%" height="15" fill="rgb(246,141,4)" fg:x="993587500418" fg:w="164099282"/><text x="90.4928%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (150,736,922 samples, 0.01%)</title><rect x="90.2746%" y="453" width="0.0137%" height="15" fill="rgb(229,23,39)" fg:x="993938522373" fg:w="150736922"/><text x="90.5246%" y="463.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (150,736,922 samples, 0.01%)</title><rect x="90.2746%" y="437" width="0.0137%" height="15" fill="rgb(206,12,3)" fg:x="993938522373" fg:w="150736922"/><text x="90.5246%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (126,260,433 samples, 0.01%)</title><rect x="90.2883%" y="453" width="0.0115%" height="15" fill="rgb(252,226,20)" fg:x="994089259295" fg:w="126260433"/><text x="90.5383%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126,260,433 samples, 0.01%)</title><rect x="90.2883%" y="437" width="0.0115%" height="15" fill="rgb(216,123,35)" fg:x="994089259295" fg:w="126260433"/><text x="90.5383%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,199,899,784 samples, 0.11%)</title><rect x="90.2379%" y="501" width="0.1090%" height="15" fill="rgb(212,68,40)" fg:x="993534375278" fg:w="1199899784"/><text x="90.4879%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (1,197,298,564 samples, 0.11%)</title><rect x="90.2382%" y="485" width="0.1087%" height="15" fill="rgb(254,125,32)" fg:x="993536976498" fg:w="1197298564"/><text x="90.4882%" y="495.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (982,675,362 samples, 0.09%)</title><rect x="90.2577%" y="469" width="0.0893%" height="15" fill="rgb(253,97,22)" fg:x="993751599700" fg:w="982675362"/><text x="90.5077%" y="479.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (466,075,457 samples, 0.04%)</title><rect x="90.3046%" y="453" width="0.0423%" height="15" fill="rgb(241,101,14)" fg:x="994268199605" fg:w="466075457"/><text x="90.5546%" y="463.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next (207,269,154 samples, 0.02%)</title><rect x="90.3281%" y="437" width="0.0188%" height="15" fill="rgb(238,103,29)" fg:x="994527005908" fg:w="207269154"/><text x="90.5781%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,927,711,338 samples, 0.18%)</title><rect x="90.2021%" y="517" width="0.1751%" height="15" fill="rgb(233,195,47)" fg:x="993140253528" fg:w="1927711338"/><text x="90.4521%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (333,689,804 samples, 0.03%)</title><rect x="90.3469%" y="501" width="0.0303%" height="15" fill="rgb(246,218,30)" fg:x="994734275062" fg:w="333689804"/><text x="90.5969%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (197,787,957 samples, 0.02%)</title><rect x="90.3955%" y="485" width="0.0180%" height="15" fill="rgb(219,145,47)" fg:x="995268734731" fg:w="197787957"/><text x="90.6455%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (197,787,957 samples, 0.02%)</title><rect x="90.3955%" y="469" width="0.0180%" height="15" fill="rgb(243,12,26)" fg:x="995268734731" fg:w="197787957"/><text x="90.6455%" y="479.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (210,546,037 samples, 0.02%)</title><rect x="90.3946%" y="501" width="0.0191%" height="15" fill="rgb(214,87,16)" fg:x="995258836841" fg:w="210546037"/><text x="90.6446%" y="511.50"></text></g><g><title>__switch_to (920,433,189 samples, 0.08%)</title><rect x="90.5169%" y="469" width="0.0836%" height="15" fill="rgb(208,99,42)" fg:x="996606101316" fg:w="920433189"/><text x="90.7669%" y="479.50"></text></g><g><title>__switch_to_asm (788,641,992 samples, 0.07%)</title><rect x="90.6005%" y="469" width="0.0716%" height="15" fill="rgb(253,99,2)" fg:x="997526534505" fg:w="788641992"/><text x="90.8505%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (3,582,924,785 samples, 0.33%)</title><rect x="90.6845%" y="469" width="0.3254%" height="15" fill="rgb(220,168,23)" fg:x="998451432307" fg:w="3582924785"/><text x="90.9345%" y="479.50"></text></g><g><title>__x64_sys_sched_yield (368,009,836 samples, 0.03%)</title><rect x="91.1007%" y="453" width="0.0334%" height="15" fill="rgb(242,38,24)" fg:x="1003033446481" fg:w="368009836"/><text x="91.3507%" y="463.50"></text></g><g><title>amd_clear_divider (431,223,503 samples, 0.04%)</title><rect x="91.1353%" y="453" width="0.0392%" height="15" fill="rgb(225,182,9)" fg:x="1003415021020" fg:w="431223503"/><text x="91.3853%" y="463.50"></text></g><g><title>_raw_spin_lock (696,089,769 samples, 0.06%)</title><rect x="92.4164%" y="421" width="0.0632%" height="15" fill="rgb(243,178,37)" fg:x="1017519395654" fg:w="696089769"/><text x="92.6664%" y="431.50"></text></g><g><title>_raw_spin_lock (115,228,204 samples, 0.01%)</title><rect x="92.5271%" y="405" width="0.0105%" height="15" fill="rgb(232,139,19)" fg:x="1018738461052" fg:w="115228204"/><text x="92.7771%" y="415.50"></text></g><g><title>native_queued_spin_lock_slowpath (115,228,204 samples, 0.01%)</title><rect x="92.5271%" y="389" width="0.0105%" height="15" fill="rgb(225,201,24)" fg:x="1018738461052" fg:w="115228204"/><text x="92.7771%" y="399.50"></text></g><g><title>__perf_event_task_sched_out (647,691,303 samples, 0.06%)</title><rect x="92.7657%" y="373" width="0.0588%" height="15" fill="rgb(221,47,46)" fg:x="1021365424017" fg:w="647691303"/><text x="93.0157%" y="383.50"></text></g><g><title>__switch_to (303,873,867 samples, 0.03%)</title><rect x="92.8245%" y="373" width="0.0276%" height="15" fill="rgb(249,23,13)" fg:x="1022013115320" fg:w="303873867"/><text x="93.0745%" y="383.50"></text></g><g><title>_raw_spin_lock (310,789,175 samples, 0.03%)</title><rect x="92.8521%" y="373" width="0.0282%" height="15" fill="rgb(219,9,5)" fg:x="1022316989187" fg:w="310789175"/><text x="93.1021%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (269,229,746 samples, 0.02%)</title><rect x="92.9069%" y="357" width="0.0245%" height="15" fill="rgb(254,171,16)" fg:x="1022920409291" fg:w="269229746"/><text x="93.1569%" y="367.50"></text></g><g><title>finish_task_switch (505,891,149 samples, 0.05%)</title><rect x="92.8900%" y="373" width="0.0459%" height="15" fill="rgb(230,171,20)" fg:x="1022733604416" fg:w="505891149"/><text x="93.1400%" y="383.50"></text></g><g><title>pick_next_entity (128,466,863 samples, 0.01%)</title><rect x="92.9359%" y="373" width="0.0117%" height="15" fill="rgb(210,71,41)" fg:x="1023239495565" fg:w="128466863"/><text x="93.1859%" y="383.50"></text></g><g><title>__calc_delta (137,709,482 samples, 0.01%)</title><rect x="93.0677%" y="357" width="0.0125%" height="15" fill="rgb(206,173,20)" fg:x="1024690075068" fg:w="137709482"/><text x="93.3177%" y="367.50"></text></g><g><title>clear_buddies (186,821,282 samples, 0.02%)</title><rect x="93.0848%" y="357" width="0.0170%" height="15" fill="rgb(233,88,34)" fg:x="1024879083927" fg:w="186821282"/><text x="93.3348%" y="367.50"></text></g><g><title>clear_buddies (198,954,676 samples, 0.02%)</title><rect x="93.1779%" y="341" width="0.0181%" height="15" fill="rgb(223,209,46)" fg:x="1025904355591" fg:w="198954676"/><text x="93.4279%" y="351.50"></text></g><g><title>pick_next_entity (1,047,070,975 samples, 0.10%)</title><rect x="93.1046%" y="357" width="0.0951%" height="15" fill="rgb(250,43,18)" fg:x="1025096841972" fg:w="1047070975"/><text x="93.3546%" y="367.50"></text></g><g><title>__enqueue_entity (138,866,832 samples, 0.01%)</title><rect x="93.2119%" y="341" width="0.0126%" height="15" fill="rgb(208,13,10)" fg:x="1026277724190" fg:w="138866832"/><text x="93.4619%" y="351.50"></text></g><g><title>update_curr (111,727,321 samples, 0.01%)</title><rect x="93.2367%" y="341" width="0.0101%" height="15" fill="rgb(212,200,36)" fg:x="1026551226687" fg:w="111727321"/><text x="93.4867%" y="351.50"></text></g><g><title>__update_load_avg_cfs_rq (225,194,786 samples, 0.02%)</title><rect x="93.2654%" y="325" width="0.0205%" height="15" fill="rgb(225,90,30)" fg:x="1026867112285" fg:w="225194786"/><text x="93.5154%" y="335.50"></text></g><g><title>put_prev_entity (1,162,421,569 samples, 0.11%)</title><rect x="93.1997%" y="357" width="0.1056%" height="15" fill="rgb(236,182,39)" fg:x="1026143912947" fg:w="1162421569"/><text x="93.4497%" y="367.50"></text></g><g><title>update_load_avg (643,380,508 samples, 0.06%)</title><rect x="93.2468%" y="341" width="0.0584%" height="15" fill="rgb(212,144,35)" fg:x="1026662954008" fg:w="643380508"/><text x="93.4968%" y="351.50"></text></g><g><title>__update_load_avg_se (214,027,445 samples, 0.02%)</title><rect x="93.2858%" y="325" width="0.0194%" height="15" fill="rgb(228,63,44)" fg:x="1027092307071" fg:w="214027445"/><text x="93.5358%" y="335.50"></text></g><g><title>__update_load_avg_cfs_rq (138,314,634 samples, 0.01%)</title><rect x="93.3555%" y="325" width="0.0126%" height="15" fill="rgb(228,109,6)" fg:x="1027859289813" fg:w="138314634"/><text x="93.6055%" y="335.50"></text></g><g><title>set_next_entity (768,257,331 samples, 0.07%)</title><rect x="93.3161%" y="357" width="0.0698%" height="15" fill="rgb(238,117,24)" fg:x="1027425227134" fg:w="768257331"/><text x="93.5661%" y="367.50"></text></g><g><title>update_load_avg (538,401,858 samples, 0.05%)</title><rect x="93.3370%" y="341" width="0.0489%" height="15" fill="rgb(242,26,26)" fg:x="1027655082607" fg:w="538401858"/><text x="93.5870%" y="351.50"></text></g><g><title>__update_load_avg_se (195,880,018 samples, 0.02%)</title><rect x="93.3681%" y="325" width="0.0178%" height="15" fill="rgb(221,92,48)" fg:x="1027997604447" fg:w="195880018"/><text x="93.6181%" y="335.50"></text></g><g><title>__calc_delta (531,108,520 samples, 0.05%)</title><rect x="93.5005%" y="341" width="0.0482%" height="15" fill="rgb(209,209,32)" fg:x="1029456195864" fg:w="531108520"/><text x="93.7505%" y="351.50"></text></g><g><title>__cgroup_account_cputime (178,114,986 samples, 0.02%)</title><rect x="93.5488%" y="341" width="0.0162%" height="15" fill="rgb(221,70,22)" fg:x="1029987304384" fg:w="178114986"/><text x="93.7988%" y="351.50"></text></g><g><title>cpuacct_charge (319,004,540 samples, 0.03%)</title><rect x="93.5664%" y="341" width="0.0290%" height="15" fill="rgb(248,145,5)" fg:x="1030181531098" fg:w="319004540"/><text x="93.8164%" y="351.50"></text></g><g><title>update_curr (2,544,459,860 samples, 0.23%)</title><rect x="93.3859%" y="357" width="0.2311%" height="15" fill="rgb(226,116,26)" fg:x="1028193484465" fg:w="2544459860"/><text x="93.6359%" y="367.50"></text></g><g><title>update_min_vruntime (237,408,687 samples, 0.02%)</title><rect x="93.5954%" y="341" width="0.0216%" height="15" fill="rgb(244,5,17)" fg:x="1030500535638" fg:w="237408687"/><text x="93.8454%" y="351.50"></text></g><g><title>update_min_vruntime (119,801,775 samples, 0.01%)</title><rect x="93.6199%" y="357" width="0.0109%" height="15" fill="rgb(252,159,33)" fg:x="1030769922234" fg:w="119801775"/><text x="93.8699%" y="367.50"></text></g><g><title>pick_next_task_fair (7,566,555,019 samples, 0.69%)</title><rect x="92.9476%" y="373" width="0.6872%" height="15" fill="rgb(206,71,0)" fg:x="1023367962428" fg:w="7566555019"/><text x="93.1976%" y="383.50"></text></g><g><title>rcu_note_context_switch (223,003,461 samples, 0.02%)</title><rect x="93.6378%" y="373" width="0.0203%" height="15" fill="rgb(233,118,54)" fg:x="1030967409550" fg:w="223003461"/><text x="93.8878%" y="383.50"></text></g><g><title>switch_mm_irqs_off (203,074,868 samples, 0.02%)</title><rect x="93.6674%" y="373" width="0.0184%" height="15" fill="rgb(234,83,48)" fg:x="1031293722470" fg:w="203074868"/><text x="93.9174%" y="383.50"></text></g><g><title>native_sched_clock (199,543,269 samples, 0.02%)</title><rect x="93.7121%" y="341" width="0.0181%" height="15" fill="rgb(228,3,54)" fg:x="1031785664563" fg:w="199543269"/><text x="93.9621%" y="351.50"></text></g><g><title>__sched_text_start (12,840,210,228 samples, 1.17%)</title><rect x="92.5664%" y="389" width="1.1662%" height="15" fill="rgb(226,155,13)" fg:x="1019171058991" fg:w="12840210228"/><text x="92.8164%" y="399.50"></text></g><g><title>update_rq_clock (442,576,606 samples, 0.04%)</title><rect x="93.6924%" y="373" width="0.0402%" height="15" fill="rgb(241,28,37)" fg:x="1031568692613" fg:w="442576606"/><text x="93.9424%" y="383.50"></text></g><g><title>sched_clock_cpu (291,655,539 samples, 0.03%)</title><rect x="93.7061%" y="357" width="0.0265%" height="15" fill="rgb(233,93,10)" fg:x="1031719613680" fg:w="291655539"/><text x="93.9561%" y="367.50"></text></g><g><title>_raw_spin_lock (377,633,763 samples, 0.03%)</title><rect x="93.7468%" y="389" width="0.0343%" height="15" fill="rgb(225,113,19)" fg:x="1032167938431" fg:w="377633763"/><text x="93.9968%" y="399.50"></text></g><g><title>schedule (13,878,634,924 samples, 1.26%)</title><rect x="92.5449%" y="405" width="1.2605%" height="15" fill="rgb(241,2,18)" fg:x="1018934737529" fg:w="13878634924"/><text x="92.7949%" y="415.50"></text></g><g><title>clear_buddies (126,487,132 samples, 0.01%)</title><rect x="93.8667%" y="389" width="0.0115%" height="15" fill="rgb(228,207,21)" fg:x="1033487445831" fg:w="126487132"/><text x="94.1167%" y="399.50"></text></g><g><title>__cgroup_account_cputime (197,005,389 samples, 0.02%)</title><rect x="93.9195%" y="373" width="0.0179%" height="15" fill="rgb(213,211,35)" fg:x="1034068788918" fg:w="197005389"/><text x="94.1695%" y="383.50"></text></g><g><title>cgroup_rstat_updated (127,616,109 samples, 0.01%)</title><rect x="93.9258%" y="357" width="0.0116%" height="15" fill="rgb(209,83,10)" fg:x="1034138178198" fg:w="127616109"/><text x="94.1758%" y="367.50"></text></g><g><title>cpuacct_charge (375,723,414 samples, 0.03%)</title><rect x="93.9393%" y="373" width="0.0341%" height="15" fill="rgb(209,164,1)" fg:x="1034286672202" fg:w="375723414"/><text x="94.1893%" y="383.50"></text></g><g><title>update_curr (1,152,273,897 samples, 0.10%)</title><rect x="93.8817%" y="389" width="0.1047%" height="15" fill="rgb(213,184,43)" fg:x="1033652615268" fg:w="1152273897"/><text x="94.1317%" y="399.50"></text></g><g><title>update_min_vruntime (142,493,549 samples, 0.01%)</title><rect x="93.9734%" y="373" width="0.0129%" height="15" fill="rgb(231,61,34)" fg:x="1034662395616" fg:w="142493549"/><text x="94.2234%" y="383.50"></text></g><g><title>native_sched_clock (199,346,591 samples, 0.02%)</title><rect x="94.0182%" y="357" width="0.0181%" height="15" fill="rgb(235,75,3)" fg:x="1035155803226" fg:w="199346591"/><text x="94.2682%" y="367.50"></text></g><g><title>do_sched_yield (17,168,109,261 samples, 1.56%)</title><rect x="92.4796%" y="421" width="1.5593%" height="15" fill="rgb(220,106,47)" fg:x="1018215485423" fg:w="17168109261"/><text x="92.7296%" y="431.50"></text></g><g><title>yield_task_fair (2,451,525,064 samples, 0.22%)</title><rect x="93.8162%" y="405" width="0.2227%" height="15" fill="rgb(210,196,33)" fg:x="1032932069620" fg:w="2451525064"/><text x="94.0662%" y="415.50"></text></g><g><title>update_rq_clock (531,503,861 samples, 0.05%)</title><rect x="93.9906%" y="389" width="0.0483%" height="15" fill="rgb(229,154,42)" fg:x="1034852090823" fg:w="531503861"/><text x="94.2406%" y="399.50"></text></g><g><title>sched_clock_cpu (350,113,648 samples, 0.03%)</title><rect x="94.0071%" y="373" width="0.0318%" height="15" fill="rgb(228,114,26)" fg:x="1035033481036" fg:w="350113648"/><text x="94.2571%" y="383.50"></text></g><g><title>__x64_sys_sched_yield (18,437,642,976 samples, 1.67%)</title><rect x="92.4009%" y="437" width="1.6746%" height="15" fill="rgb(208,144,1)" fg:x="1017349383696" fg:w="18437642976"/><text x="92.6509%" y="447.50"></text></g><g><title>yield_task_fair (312,902,903 samples, 0.03%)</title><rect x="94.0471%" y="421" width="0.0284%" height="15" fill="rgb(239,112,37)" fg:x="1035474123769" fg:w="312902903"/><text x="94.2971%" y="431.50"></text></g><g><title>do_sched_yield (173,209,727 samples, 0.02%)</title><rect x="94.0765%" y="437" width="0.0157%" height="15" fill="rgb(210,96,50)" fg:x="1035797289888" fg:w="173209727"/><text x="94.3265%" y="447.50"></text></g><g><title>fpregs_assert_state_consistent (112,927,491 samples, 0.01%)</title><rect x="94.0922%" y="437" width="0.0103%" height="15" fill="rgb(222,178,2)" fg:x="1035970499615" fg:w="112927491"/><text x="94.3422%" y="447.50"></text></g><g><title>do_syscall_64 (32,905,625,593 samples, 2.99%)</title><rect x="91.1745%" y="453" width="2.9887%" height="15" fill="rgb(226,74,18)" fg:x="1003846244523" fg:w="32905625593"/><text x="91.4245%" y="463.50">do_..</text></g><g><title>switch_fpu_return (653,339,711 samples, 0.06%)</title><rect x="94.1038%" y="437" width="0.0593%" height="15" fill="rgb(225,67,54)" fg:x="1036098530405" fg:w="653339711"/><text x="94.3538%" y="447.50"></text></g><g><title>fpregs_assert_state_consistent (137,391,087 samples, 0.01%)</title><rect x="94.1632%" y="453" width="0.0125%" height="15" fill="rgb(251,92,32)" fg:x="1036751870116" fg:w="137391087"/><text x="94.4132%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34,871,277,211 samples, 3.17%)</title><rect x="91.0099%" y="469" width="3.1672%" height="15" fill="rgb(228,149,22)" fg:x="1002034357092" fg:w="34871277211"/><text x="91.2599%" y="479.50">ent..</text></g><g><title>native_load_tls (122,769,901 samples, 0.01%)</title><rect x="94.1780%" y="469" width="0.0112%" height="15" fill="rgb(243,54,13)" fg:x="1036915078633" fg:w="122769901"/><text x="94.4280%" y="479.50"></text></g><g><title>native_write_msr (635,691,175 samples, 0.06%)</title><rect x="94.1891%" y="469" width="0.0577%" height="15" fill="rgb(243,180,28)" fg:x="1037037848534" fg:w="635691175"/><text x="94.4391%" y="479.50"></text></g><g><title>change_pte_range (146,021,980 samples, 0.01%)</title><rect x="94.2520%" y="341" width="0.0133%" height="15" fill="rgb(208,167,24)" fg:x="1037730430511" fg:w="146021980"/><text x="94.5020%" y="351.50"></text></g><g><title>prepare_exit_to_usermode (165,161,361 samples, 0.02%)</title><rect x="94.2508%" y="453" width="0.0150%" height="15" fill="rgb(245,73,45)" fg:x="1037716828463" fg:w="165161361"/><text x="94.5008%" y="463.50"></text></g><g><title>exit_to_usermode_loop (156,688,888 samples, 0.01%)</title><rect x="94.2516%" y="437" width="0.0142%" height="15" fill="rgb(237,203,48)" fg:x="1037725300936" fg:w="156688888"/><text x="94.5016%" y="447.50"></text></g><g><title>task_work_run (154,357,033 samples, 0.01%)</title><rect x="94.2518%" y="421" width="0.0140%" height="15" fill="rgb(211,197,16)" fg:x="1037727632791" fg:w="154357033"/><text x="94.5018%" y="431.50"></text></g><g><title>task_numa_work (154,357,033 samples, 0.01%)</title><rect x="94.2518%" y="405" width="0.0140%" height="15" fill="rgb(243,99,51)" fg:x="1037727632791" fg:w="154357033"/><text x="94.5018%" y="415.50"></text></g><g><title>change_prot_numa (151,559,313 samples, 0.01%)</title><rect x="94.2520%" y="389" width="0.0138%" height="15" fill="rgb(215,123,29)" fg:x="1037730430511" fg:w="151559313"/><text x="94.5020%" y="399.50"></text></g><g><title>change_protection (151,559,313 samples, 0.01%)</title><rect x="94.2520%" y="373" width="0.0138%" height="15" fill="rgb(239,186,37)" fg:x="1037730430511" fg:w="151559313"/><text x="94.5020%" y="383.50"></text></g><g><title>change_protection_range (151,559,313 samples, 0.01%)</title><rect x="94.2520%" y="357" width="0.0138%" height="15" fill="rgb(252,136,39)" fg:x="1037730430511" fg:w="151559313"/><text x="94.5020%" y="367.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (170,030,093 samples, 0.02%)</title><rect x="94.2505%" y="469" width="0.0154%" height="15" fill="rgb(223,213,32)" fg:x="1037713924791" fg:w="170030093"/><text x="94.5005%" y="479.50"></text></g><g><title>__GI___sched_yield (45,833,607,189 samples, 4.16%)</title><rect x="90.4548%" y="485" width="4.1628%" height="15" fill="rgb(233,115,5)" fg:x="995922165350" fg:w="45833607189"/><text x="90.7048%" y="495.50">__GI_..</text></g><g><title>syscall_return_via_sysret (3,871,817,655 samples, 0.35%)</title><rect x="94.2660%" y="469" width="0.3517%" height="15" fill="rgb(207,226,44)" fg:x="1037883954884" fg:w="3871817655"/><text x="94.5160%" y="479.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (46,380,916,833 samples, 4.21%)</title><rect x="90.4168%" y="501" width="4.2126%" height="15" fill="rgb(208,126,0)" fg:x="995503512500" fg:w="46380916833"/><text x="90.6668%" y="511.50">rayon..</text></g><g><title>rayon_core::sleep::counters::AtomicCounters::add_inactive_thread (366,263,800 samples, 0.03%)</title><rect x="94.6301%" y="485" width="0.0333%" height="15" fill="rgb(244,66,21)" fg:x="1041892476640" fg:w="366263800"/><text x="94.8801%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (366,263,800 samples, 0.03%)</title><rect x="94.6301%" y="469" width="0.0333%" height="15" fill="rgb(222,97,12)" fg:x="1041892476640" fg:w="366263800"/><text x="94.8801%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (366,263,800 samples, 0.03%)</title><rect x="94.6301%" y="453" width="0.0333%" height="15" fill="rgb(219,213,19)" fg:x="1041892476640" fg:w="366263800"/><text x="94.8801%" y="463.50"></text></g><g><title>rayon_core::sleep::Sleep::start_looking (377,943,096 samples, 0.03%)</title><rect x="94.6293%" y="501" width="0.0343%" height="15" fill="rgb(252,169,30)" fg:x="1041884429333" fg:w="377943096"/><text x="94.8793%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (608,952,835 samples, 0.06%)</title><rect x="94.6709%" y="469" width="0.0553%" height="15" fill="rgb(206,32,51)" fg:x="1042341861212" fg:w="608952835"/><text x="94.9209%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (608,952,835 samples, 0.06%)</title><rect x="94.6709%" y="453" width="0.0553%" height="15" fill="rgb(250,172,42)" fg:x="1042341861212" fg:w="608952835"/><text x="94.9209%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (47,890,820,258 samples, 4.35%)</title><rect x="90.3772%" y="517" width="4.3497%" height="15" fill="rgb(209,34,43)" fg:x="995067964866" fg:w="47890820258"/><text x="90.6272%" y="527.50">rayon..</text></g><g><title>rayon_core::sleep::Sleep::work_found (696,412,695 samples, 0.06%)</title><rect x="94.6637%" y="501" width="0.0633%" height="15" fill="rgb(223,11,35)" fg:x="1042262372429" fg:w="696412695"/><text x="94.9137%" y="511.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_inactive_thread (620,271,029 samples, 0.06%)</title><rect x="94.6706%" y="485" width="0.0563%" height="15" fill="rgb(251,219,26)" fg:x="1042338514095" fg:w="620271029"/><text x="94.9206%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (335,253,441 samples, 0.03%)</title><rect x="94.7704%" y="501" width="0.0304%" height="15" fill="rgb(231,119,3)" fg:x="1043437598417" fg:w="335253441"/><text x="95.0204%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::current (185,636,602 samples, 0.02%)</title><rect x="94.8011%" y="501" width="0.0169%" height="15" fill="rgb(216,97,11)" fg:x="1043775654811" fg:w="185636602"/><text x="95.0511%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (185,636,602 samples, 0.02%)</title><rect x="94.8011%" y="485" width="0.0169%" height="15" fill="rgb(223,59,9)" fg:x="1043775654811" fg:w="185636602"/><text x="95.0511%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (185,636,602 samples, 0.02%)</title><rect x="94.8011%" y="469" width="0.0169%" height="15" fill="rgb(233,93,31)" fg:x="1043775654811" fg:w="185636602"/><text x="95.0511%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (1,016,361,724 samples, 0.09%)</title><rect x="94.7269%" y="517" width="0.0923%" height="15" fill="rgb(239,81,33)" fg:x="1042958785124" fg:w="1016361724"/><text x="94.9769%" y="527.50"></text></g><g><title>rayon_core::latch::CoreLatch::get_sleepy (125,606,872 samples, 0.01%)</title><rect x="94.8317%" y="501" width="0.0114%" height="15" fill="rgb(213,120,34)" fg:x="1044112598654" fg:w="125606872"/><text x="95.0817%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (117,879,138 samples, 0.01%)</title><rect x="94.8324%" y="485" width="0.0107%" height="15" fill="rgb(243,49,53)" fg:x="1044120326388" fg:w="117879138"/><text x="95.0824%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (117,879,138 samples, 0.01%)</title><rect x="94.8324%" y="469" width="0.0107%" height="15" fill="rgb(247,216,33)" fg:x="1044120326388" fg:w="117879138"/><text x="95.0824%" y="479.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (488,416,192 samples, 0.04%)</title><rect x="94.8192%" y="517" width="0.0444%" height="15" fill="rgb(226,26,14)" fg:x="1043975146848" fg:w="488416192"/><text x="95.0692%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (471,109,225 samples, 0.04%)</title><rect x="94.8814%" y="485" width="0.0428%" height="15" fill="rgb(215,49,53)" fg:x="1044659629888" fg:w="471109225"/><text x="95.1314%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (517,923,511 samples, 0.05%)</title><rect x="94.8797%" y="501" width="0.0470%" height="15" fill="rgb(245,162,40)" fg:x="1044641402808" fg:w="517923511"/><text x="95.1297%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (610,508,062 samples, 0.06%)</title><rect x="94.9351%" y="453" width="0.0554%" height="15" fill="rgb(229,68,17)" fg:x="1045250803191" fg:w="610508062"/><text x="95.1851%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (610,508,062 samples, 0.06%)</title><rect x="94.9351%" y="437" width="0.0554%" height="15" fill="rgb(213,182,10)" fg:x="1045250803191" fg:w="610508062"/><text x="95.1851%" y="447.50"></text></g><g><title>_raw_spin_lock (643,050,507 samples, 0.06%)</title><rect x="95.0932%" y="357" width="0.0584%" height="15" fill="rgb(245,125,30)" fg:x="1046991508797" fg:w="643050507"/><text x="95.3432%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (643,050,507 samples, 0.06%)</title><rect x="95.0932%" y="341" width="0.0584%" height="15" fill="rgb(232,202,2)" fg:x="1046991508797" fg:w="643050507"/><text x="95.3432%" y="351.50"></text></g><g><title>get_futex_key (112,509,023 samples, 0.01%)</title><rect x="95.1516%" y="357" width="0.0102%" height="15" fill="rgb(237,140,51)" fg:x="1047634559304" fg:w="112509023"/><text x="95.4016%" y="367.50"></text></g><g><title>available_idle_cpu (113,072,970 samples, 0.01%)</title><rect x="95.2567%" y="293" width="0.0103%" height="15" fill="rgb(236,157,25)" fg:x="1048792127392" fg:w="113072970"/><text x="95.5067%" y="303.50"></text></g><g><title>select_idle_sibling (449,257,036 samples, 0.04%)</title><rect x="95.2558%" y="309" width="0.0408%" height="15" fill="rgb(219,209,0)" fg:x="1048781591828" fg:w="449257036"/><text x="95.5058%" y="319.50"></text></g><g><title>select_idle_sibling.part.0 (311,867,475 samples, 0.03%)</title><rect x="95.2682%" y="293" width="0.0283%" height="15" fill="rgb(240,116,54)" fg:x="1048918981389" fg:w="311867475"/><text x="95.5182%" y="303.50"></text></g><g><title>select_task_rq_fair (655,235,817 samples, 0.06%)</title><rect x="95.2381%" y="325" width="0.0595%" height="15" fill="rgb(216,10,36)" fg:x="1048587007912" fg:w="655235817"/><text x="95.4881%" y="335.50"></text></g><g><title>enqueue_entity (191,091,160 samples, 0.02%)</title><rect x="95.3092%" y="277" width="0.0174%" height="15" fill="rgb(222,72,44)" fg:x="1049369490489" fg:w="191091160"/><text x="95.5592%" y="287.50"></text></g><g><title>enqueue_task_fair (375,638,961 samples, 0.03%)</title><rect x="95.3025%" y="293" width="0.0341%" height="15" fill="rgb(232,159,9)" fg:x="1049296086344" fg:w="375638961"/><text x="95.5525%" y="303.50"></text></g><g><title>activate_task (656,021,711 samples, 0.06%)</title><rect x="95.3010%" y="309" width="0.0596%" height="15" fill="rgb(210,39,32)" fg:x="1049279979501" fg:w="656021711"/><text x="95.5510%" y="319.50"></text></g><g><title>psi_task_change (264,275,907 samples, 0.02%)</title><rect x="95.3366%" y="293" width="0.0240%" height="15" fill="rgb(216,194,45)" fg:x="1049671725305" fg:w="264275907"/><text x="95.5866%" y="303.50"></text></g><g><title>ttwu_do_activate (708,529,032 samples, 0.06%)</title><rect x="95.3006%" y="325" width="0.0644%" height="15" fill="rgb(218,18,35)" fg:x="1049274643724" fg:w="708529032"/><text x="95.5506%" y="335.50"></text></g><g><title>update_cfs_rq_h_load (140,446,590 samples, 0.01%)</title><rect x="95.3652%" y="325" width="0.0128%" height="15" fill="rgb(207,83,51)" fg:x="1049985965259" fg:w="140446590"/><text x="95.6152%" y="335.50"></text></g><g><title>futex_wake (3,461,337,446 samples, 0.31%)</title><rect x="95.0666%" y="373" width="0.3144%" height="15" fill="rgb(225,63,43)" fg:x="1046698573729" fg:w="3461337446"/><text x="95.3166%" y="383.50"></text></g><g><title>wake_up_q (2,283,861,125 samples, 0.21%)</title><rect x="95.1735%" y="357" width="0.2074%" height="15" fill="rgb(207,57,36)" fg:x="1047876050050" fg:w="2283861125"/><text x="95.4235%" y="367.50"></text></g><g><title>try_to_wake_up (2,188,235,934 samples, 0.20%)</title><rect x="95.1822%" y="341" width="0.1987%" height="15" fill="rgb(216,99,33)" fg:x="1047971675241" fg:w="2188235934"/><text x="95.4322%" y="351.50"></text></g><g><title>do_futex (3,621,830,500 samples, 0.33%)</title><rect x="95.0567%" y="389" width="0.3290%" height="15" fill="rgb(225,42,16)" fg:x="1046590070874" fg:w="3621830500"/><text x="95.3067%" y="399.50"></text></g><g><title>__x64_sys_futex (3,661,870,253 samples, 0.33%)</title><rect x="95.0533%" y="405" width="0.3326%" height="15" fill="rgb(220,201,45)" fg:x="1046552535777" fg:w="3661870253"/><text x="95.3033%" y="415.50"></text></g><g><title>do_syscall_64 (4,213,488,529 samples, 0.38%)</title><rect x="95.0075%" y="421" width="0.3827%" height="15" fill="rgb(225,33,4)" fg:x="1046048459379" fg:w="4213488529"/><text x="95.2575%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,294,649,531 samples, 0.39%)</title><rect x="95.0004%" y="437" width="0.3901%" height="15" fill="rgb(224,33,50)" fg:x="1045969838165" fg:w="4294649531"/><text x="95.2504%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (5,280,038,878 samples, 0.48%)</title><rect x="94.9268%" y="501" width="0.4796%" height="15" fill="rgb(246,198,51)" fg:x="1045159326319" fg:w="5280038878"/><text x="95.1768%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,280,038,878 samples, 0.48%)</title><rect x="94.9268%" y="485" width="0.4796%" height="15" fill="rgb(205,22,4)" fg:x="1045159326319" fg:w="5280038878"/><text x="95.1768%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5,229,466,154 samples, 0.47%)</title><rect x="94.9314%" y="469" width="0.4750%" height="15" fill="rgb(206,3,8)" fg:x="1045209899043" fg:w="5229466154"/><text x="95.1814%" y="479.50"></text></g><g><title>syscall (4,570,131,666 samples, 0.42%)</title><rect x="94.9913%" y="453" width="0.4151%" height="15" fill="rgb(251,23,15)" fg:x="1045869233531" fg:w="4570131666"/><text x="95.2413%" y="463.50"></text></g><g><title>syscall_return_via_sysret (164,047,033 samples, 0.01%)</title><rect x="95.3914%" y="437" width="0.0149%" height="15" fill="rgb(252,88,28)" fg:x="1050275318164" fg:w="164047033"/><text x="95.6414%" y="447.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_sleeping_thread (114,864,983 samples, 0.01%)</title><rect x="95.4063%" y="501" width="0.0104%" height="15" fill="rgb(212,127,14)" fg:x="1050439365197" fg:w="114864983"/><text x="95.6563%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (114,864,983 samples, 0.01%)</title><rect x="95.4063%" y="485" width="0.0104%" height="15" fill="rgb(247,145,37)" fg:x="1050439365197" fg:w="114864983"/><text x="95.6563%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (114,864,983 samples, 0.01%)</title><rect x="95.4063%" y="469" width="0.0104%" height="15" fill="rgb(209,117,53)" fg:x="1050439365197" fg:w="114864983"/><text x="95.6563%" y="479.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (166,652,106 samples, 0.02%)</title><rect x="95.4168%" y="485" width="0.0151%" height="15" fill="rgb(212,90,42)" fg:x="1050554230180" fg:w="166652106"/><text x="95.6668%" y="495.50"></text></g><g><title>std::sync::poison::Flag::guard (166,652,106 samples, 0.02%)</title><rect x="95.4168%" y="469" width="0.0151%" height="15" fill="rgb(218,164,37)" fg:x="1050554230180" fg:w="166652106"/><text x="95.6668%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,445,119,697 samples, 0.13%)</title><rect x="95.4383%" y="469" width="0.1313%" height="15" fill="rgb(246,65,34)" fg:x="1050791752230" fg:w="1445119697"/><text x="95.6883%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,445,119,697 samples, 0.13%)</title><rect x="95.4383%" y="453" width="0.1313%" height="15" fill="rgb(231,100,33)" fg:x="1050791752230" fg:w="1445119697"/><text x="95.6883%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,746,706,546 samples, 0.16%)</title><rect x="95.4168%" y="501" width="0.1586%" height="15" fill="rgb(228,126,14)" fg:x="1050554230180" fg:w="1746706546"/><text x="95.6668%" y="511.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1,580,054,440 samples, 0.14%)</title><rect x="95.4319%" y="485" width="0.1435%" height="15" fill="rgb(215,173,21)" fg:x="1050720882286" fg:w="1580054440"/><text x="95.6819%" y="495.50"></text></g><g><title>mark_wake_futex (125,755,583 samples, 0.01%)</title><rect x="95.6466%" y="405" width="0.0114%" height="15" fill="rgb(210,6,40)" fg:x="1053084960093" fg:w="125755583"/><text x="95.8966%" y="415.50"></text></g><g><title>available_idle_cpu (130,046,291 samples, 0.01%)</title><rect x="95.7212%" y="341" width="0.0118%" height="15" fill="rgb(212,48,18)" fg:x="1053905636672" fg:w="130046291"/><text x="95.9712%" y="351.50"></text></g><g><title>select_idle_sibling (580,663,197 samples, 0.05%)</title><rect x="95.7190%" y="357" width="0.0527%" height="15" fill="rgb(230,214,11)" fg:x="1053882049607" fg:w="580663197"/><text x="95.9690%" y="367.50"></text></g><g><title>select_idle_sibling.part.0 (416,510,001 samples, 0.04%)</title><rect x="95.7339%" y="341" width="0.0378%" height="15" fill="rgb(254,105,39)" fg:x="1054046202803" fg:w="416510001"/><text x="95.9839%" y="351.50"></text></g><g><title>select_task_rq_fair (788,053,742 samples, 0.07%)</title><rect x="95.7018%" y="373" width="0.0716%" height="15" fill="rgb(245,158,5)" fg:x="1053692279069" fg:w="788053742"/><text x="95.9518%" y="383.50"></text></g><g><title>enqueue_entity (221,605,409 samples, 0.02%)</title><rect x="95.7848%" y="325" width="0.0201%" height="15" fill="rgb(249,208,11)" fg:x="1054605904644" fg:w="221605409"/><text x="96.0348%" y="335.50"></text></g><g><title>enqueue_task_fair (409,093,790 samples, 0.04%)</title><rect x="95.7798%" y="341" width="0.0372%" height="15" fill="rgb(210,39,28)" fg:x="1054551066671" fg:w="409093790"/><text x="96.0298%" y="351.50"></text></g><g><title>activate_task (716,349,570 samples, 0.07%)</title><rect x="95.7783%" y="357" width="0.0651%" height="15" fill="rgb(211,56,53)" fg:x="1054534273498" fg:w="716349570"/><text x="96.0283%" y="367.50"></text></g><g><title>psi_task_change (287,621,781 samples, 0.03%)</title><rect x="95.8172%" y="341" width="0.0261%" height="15" fill="rgb(226,201,30)" fg:x="1054963001287" fg:w="287621781"/><text x="96.0672%" y="351.50"></text></g><g><title>ttwu_do_activate (801,020,600 samples, 0.07%)</title><rect x="95.7780%" y="373" width="0.0728%" height="15" fill="rgb(239,101,34)" fg:x="1054531705644" fg:w="801020600"/><text x="96.0280%" y="383.50"></text></g><g><title>futex_wake (2,654,148,696 samples, 0.24%)</title><rect x="95.6249%" y="421" width="0.2411%" height="15" fill="rgb(226,209,5)" fg:x="1052845276467" fg:w="2654148696"/><text x="95.8749%" y="431.50"></text></g><g><title>wake_up_q (2,270,365,250 samples, 0.21%)</title><rect x="95.6597%" y="405" width="0.2062%" height="15" fill="rgb(250,105,47)" fg:x="1053229059913" fg:w="2270365250"/><text x="95.9097%" y="415.50"></text></g><g><title>try_to_wake_up (2,145,239,074 samples, 0.19%)</title><rect x="95.6711%" y="389" width="0.1948%" height="15" fill="rgb(230,72,3)" fg:x="1053354186089" fg:w="2145239074"/><text x="95.9211%" y="399.50"></text></g><g><title>__x64_sys_futex (2,745,841,308 samples, 0.25%)</title><rect x="95.6189%" y="453" width="0.2494%" height="15" fill="rgb(232,218,39)" fg:x="1052779897188" fg:w="2745841308"/><text x="95.8689%" y="463.50"></text></g><g><title>do_futex (2,728,125,690 samples, 0.25%)</title><rect x="95.6205%" y="437" width="0.2478%" height="15" fill="rgb(248,166,6)" fg:x="1052797612806" fg:w="2728125690"/><text x="95.8705%" y="447.50"></text></g><g><title>do_syscall_64 (3,121,598,989 samples, 0.28%)</title><rect x="95.5888%" y="469" width="0.2835%" height="15" fill="rgb(247,89,20)" fg:x="1052448066893" fg:w="3121598989"/><text x="95.8388%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,160,766,617 samples, 0.29%)</title><rect x="95.5857%" y="485" width="0.2871%" height="15" fill="rgb(248,130,54)" fg:x="1052414169504" fg:w="3160766617"/><text x="95.8357%" y="495.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (11,092,435,799 samples, 1.01%)</title><rect x="94.8722%" y="517" width="1.0075%" height="15" fill="rgb(234,196,4)" fg:x="1044558723927" fg:w="11092435799"/><text x="95.1222%" y="527.50"></text></g><g><title>syscall (3,347,529,692 samples, 0.30%)</title><rect x="95.5757%" y="501" width="0.3040%" height="15" fill="rgb(250,143,31)" fg:x="1052303630034" fg:w="3347529692"/><text x="95.8257%" y="511.50"></text></g><g><title>update_load_avg (164,093,698 samples, 0.01%)</title><rect x="96.0064%" y="277" width="0.0149%" height="15" fill="rgb(211,110,34)" fg:x="1057046057475" fg:w="164093698"/><text x="96.2564%" y="287.50"></text></g><g><title>dequeue_entity (316,088,721 samples, 0.03%)</title><rect x="95.9931%" y="293" width="0.0287%" height="15" fill="rgb(215,124,48)" fg:x="1056900242538" fg:w="316088721"/><text x="96.2431%" y="303.50"></text></g><g><title>dequeue_task_fair (534,258,996 samples, 0.05%)</title><rect x="95.9893%" y="309" width="0.0485%" height="15" fill="rgb(216,46,13)" fg:x="1056858144398" fg:w="534258996"/><text x="96.2393%" y="319.50"></text></g><g><title>psi_task_change (360,760,555 samples, 0.03%)</title><rect x="96.0378%" y="309" width="0.0328%" height="15" fill="rgb(205,184,25)" fg:x="1057392403394" fg:w="360760555"/><text x="96.2878%" y="319.50"></text></g><g><title>deactivate_task (942,668,008 samples, 0.09%)</title><rect x="95.9867%" y="325" width="0.0856%" height="15" fill="rgb(228,1,10)" fg:x="1056829105907" fg:w="942668008"/><text x="96.2367%" y="335.50"></text></g><g><title>finish_task_switch (151,930,234 samples, 0.01%)</title><rect x="96.0733%" y="325" width="0.0138%" height="15" fill="rgb(213,116,27)" fg:x="1057782463998" fg:w="151930234"/><text x="96.3233%" y="335.50"></text></g><g><title>find_busiest_group (176,812,143 samples, 0.02%)</title><rect x="96.1010%" y="277" width="0.0161%" height="15" fill="rgb(241,95,50)" fg:x="1058087356296" fg:w="176812143"/><text x="96.3510%" y="287.50"></text></g><g><title>update_sd_lb_stats (140,007,604 samples, 0.01%)</title><rect x="96.1043%" y="261" width="0.0127%" height="15" fill="rgb(238,48,32)" fg:x="1058124160835" fg:w="140007604"/><text x="96.3543%" y="271.50"></text></g><g><title>load_balance (254,727,379 samples, 0.02%)</title><rect x="96.0951%" y="293" width="0.0231%" height="15" fill="rgb(235,113,49)" fg:x="1058022564697" fg:w="254727379"/><text x="96.3451%" y="303.50"></text></g><g><title>newidle_balance (310,002,926 samples, 0.03%)</title><rect x="96.0908%" y="309" width="0.0282%" height="15" fill="rgb(205,127,43)" fg:x="1057975131786" fg:w="310002926"/><text x="96.3408%" y="319.50"></text></g><g><title>pick_next_task_fair (461,248,631 samples, 0.04%)</title><rect x="96.0880%" y="325" width="0.0419%" height="15" fill="rgb(250,162,2)" fg:x="1057944032037" fg:w="461248631"/><text x="96.3380%" y="335.50"></text></g><g><title>__sched_text_start (1,916,512,225 samples, 0.17%)</title><rect x="95.9649%" y="341" width="0.1741%" height="15" fill="rgb(220,13,41)" fg:x="1056589437041" fg:w="1916512225"/><text x="96.2149%" y="351.50"></text></g><g><title>futex_wait_queue_me (1,991,831,110 samples, 0.18%)</title><rect x="95.9593%" y="373" width="0.1809%" height="15" fill="rgb(249,221,25)" fg:x="1056527909498" fg:w="1991831110"/><text x="96.2093%" y="383.50"></text></g><g><title>schedule (1,938,653,022 samples, 0.18%)</title><rect x="95.9642%" y="357" width="0.1761%" height="15" fill="rgb(215,208,19)" fg:x="1056581087586" fg:w="1938653022"/><text x="96.2142%" y="367.50"></text></g><g><title>futex_wait_setup (131,824,732 samples, 0.01%)</title><rect x="96.1402%" y="373" width="0.0120%" height="15" fill="rgb(236,175,2)" fg:x="1058519740608" fg:w="131824732"/><text x="96.3902%" y="383.50"></text></g><g><title>do_futex (2,367,487,486 samples, 0.22%)</title><rect x="95.9423%" y="405" width="0.2150%" height="15" fill="rgb(241,52,2)" fg:x="1056340512231" fg:w="2367487486"/><text x="96.1923%" y="415.50"></text></g><g><title>futex_wait (2,298,563,002 samples, 0.21%)</title><rect x="95.9486%" y="389" width="0.2088%" height="15" fill="rgb(248,140,14)" fg:x="1056409436715" fg:w="2298563002"/><text x="96.1986%" y="399.50"></text></g><g><title>__x64_sys_futex (2,424,475,159 samples, 0.22%)</title><rect x="95.9378%" y="421" width="0.2202%" height="15" fill="rgb(253,22,42)" fg:x="1056290940326" fg:w="2424475159"/><text x="96.1878%" y="431.50"></text></g><g><title>do_syscall_64 (2,851,001,849 samples, 0.26%)</title><rect x="95.9120%" y="437" width="0.2589%" height="15" fill="rgb(234,61,47)" fg:x="1056006981760" fg:w="2851001849"/><text x="96.1620%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,921,066,184 samples, 0.27%)</title><rect x="95.9070%" y="453" width="0.2653%" height="15" fill="rgb(208,226,15)" fg:x="1055951261462" fg:w="2921066184"/><text x="96.1570%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3,199,766,980 samples, 0.29%)</title><rect x="95.8932%" y="485" width="0.2906%" height="15" fill="rgb(217,221,4)" fg:x="1055799893391" fg:w="3199766980"/><text x="96.1432%" y="495.50"></text></g><g><title>syscall (3,165,613,290 samples, 0.29%)</title><rect x="95.8963%" y="469" width="0.2875%" height="15" fill="rgb(212,174,34)" fg:x="1055834047081" fg:w="3165613290"/><text x="96.1463%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (111,077,227 samples, 0.01%)</title><rect x="96.1840%" y="469" width="0.0101%" height="15" fill="rgb(253,83,4)" fg:x="1059001694587" fg:w="111077227"/><text x="96.4340%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (111,077,227 samples, 0.01%)</title><rect x="96.1840%" y="453" width="0.0101%" height="15" fill="rgb(250,195,49)" fg:x="1059001694587" fg:w="111077227"/><text x="96.4340%" y="463.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (115,909,351 samples, 0.01%)</title><rect x="96.1838%" y="485" width="0.0105%" height="15" fill="rgb(241,192,25)" fg:x="1058999660371" fg:w="115909351"/><text x="96.4338%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (3,352,907,413 samples, 0.30%)</title><rect x="95.8916%" y="517" width="0.3045%" height="15" fill="rgb(208,124,10)" fg:x="1055782169590" fg:w="3352907413"/><text x="96.1416%" y="527.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (3,345,077,170 samples, 0.30%)</title><rect x="95.8923%" y="501" width="0.3038%" height="15" fill="rgb(222,33,0)" fg:x="1055789999833" fg:w="3345077170"/><text x="96.1423%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (647,751,586 samples, 0.06%)</title><rect x="96.2148%" y="501" width="0.0588%" height="15" fill="rgb(234,209,28)" fg:x="1059340944838" fg:w="647751586"/><text x="96.4648%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (647,751,586 samples, 0.06%)</title><rect x="96.2148%" y="485" width="0.0588%" height="15" fill="rgb(224,11,23)" fg:x="1059340944838" fg:w="647751586"/><text x="96.4648%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (602,743,367 samples, 0.05%)</title><rect x="96.2737%" y="501" width="0.0547%" height="15" fill="rgb(232,99,1)" fg:x="1059988696424" fg:w="602743367"/><text x="96.5237%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (602,743,367 samples, 0.05%)</title><rect x="96.2737%" y="485" width="0.0547%" height="15" fill="rgb(237,95,45)" fg:x="1059988696424" fg:w="602743367"/><text x="96.5237%" y="495.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (258,536,199 samples, 0.02%)</title><rect x="96.3316%" y="485" width="0.0235%" height="15" fill="rgb(208,109,11)" fg:x="1060626823947" fg:w="258536199"/><text x="96.5816%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (212,587,363 samples, 0.02%)</title><rect x="96.3358%" y="469" width="0.0193%" height="15" fill="rgb(216,190,48)" fg:x="1060672772783" fg:w="212587363"/><text x="96.5858%" y="479.50"></text></g><g><title>std::sys::pal::unix::os::errno (212,587,363 samples, 0.02%)</title><rect x="96.3358%" y="453" width="0.0193%" height="15" fill="rgb(251,171,36)" fg:x="1060672772783" fg:w="212587363"/><text x="96.5858%" y="463.50"></text></g><g><title>syscall (150,453,032 samples, 0.01%)</title><rect x="96.3414%" y="437" width="0.0137%" height="15" fill="rgb(230,62,22)" fg:x="1060734907114" fg:w="150453032"/><text x="96.5914%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (150,453,032 samples, 0.01%)</title><rect x="96.3414%" y="421" width="0.0137%" height="15" fill="rgb(225,114,35)" fg:x="1060734907114" fg:w="150453032"/><text x="96.5914%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (219,159,963 samples, 0.02%)</title><rect x="96.3580%" y="485" width="0.0199%" height="15" fill="rgb(215,118,42)" fg:x="1060917729095" fg:w="219159963"/><text x="96.6080%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (219,159,963 samples, 0.02%)</title><rect x="96.3580%" y="469" width="0.0199%" height="15" fill="rgb(243,119,21)" fg:x="1060917729095" fg:w="219159963"/><text x="96.6080%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (296,533,606 samples, 0.03%)</title><rect x="96.4069%" y="469" width="0.0269%" height="15" fill="rgb(252,177,53)" fg:x="1061455553288" fg:w="296533606"/><text x="96.6569%" y="479.50"></text></g><g><title>_raw_spin_lock (325,788,381 samples, 0.03%)</title><rect x="96.6585%" y="389" width="0.0296%" height="15" fill="rgb(237,209,29)" fg:x="1064226148599" fg:w="325788381"/><text x="96.9085%" y="399.50"></text></g><g><title>__perf_event_task_sched_out (211,836,652 samples, 0.02%)</title><rect x="96.7291%" y="341" width="0.0192%" height="15" fill="rgb(212,65,23)" fg:x="1065003373734" fg:w="211836652"/><text x="96.9791%" y="351.50"></text></g><g><title>task_ctx_sched_out (140,301,623 samples, 0.01%)</title><rect x="96.7356%" y="325" width="0.0127%" height="15" fill="rgb(230,222,46)" fg:x="1065074908763" fg:w="140301623"/><text x="96.9856%" y="335.50"></text></g><g><title>ctx_sched_out (140,301,623 samples, 0.01%)</title><rect x="96.7356%" y="309" width="0.0127%" height="15" fill="rgb(215,135,32)" fg:x="1065074908763" fg:w="140301623"/><text x="96.9856%" y="319.50"></text></g><g><title>update_cfs_group (135,841,700 samples, 0.01%)</title><rect x="96.7873%" y="293" width="0.0123%" height="15" fill="rgb(246,101,22)" fg:x="1065644346872" fg:w="135841700"/><text x="97.0373%" y="303.50"></text></g><g><title>update_curr (327,831,424 samples, 0.03%)</title><rect x="96.7997%" y="293" width="0.0298%" height="15" fill="rgb(206,107,13)" fg:x="1065780188572" fg:w="327831424"/><text x="97.0497%" y="303.50"></text></g><g><title>update_load_avg (337,116,358 samples, 0.03%)</title><rect x="96.8294%" y="293" width="0.0306%" height="15" fill="rgb(250,100,44)" fg:x="1066108019996" fg:w="337116358"/><text x="97.0794%" y="303.50"></text></g><g><title>dequeue_entity (988,597,310 samples, 0.09%)</title><rect x="96.7732%" y="309" width="0.0898%" height="15" fill="rgb(231,147,38)" fg:x="1065488575580" fg:w="988597310"/><text x="97.0232%" y="319.50"></text></g><g><title>update_cfs_group (175,346,553 samples, 0.02%)</title><rect x="96.8630%" y="309" width="0.0159%" height="15" fill="rgb(229,8,40)" fg:x="1066477172890" fg:w="175346553"/><text x="97.1130%" y="319.50"></text></g><g><title>dequeue_task_fair (1,373,328,541 samples, 0.12%)</title><rect x="96.7621%" y="325" width="0.1247%" height="15" fill="rgb(221,135,30)" fg:x="1065366723610" fg:w="1373328541"/><text x="97.0121%" y="335.50"></text></g><g><title>record_times (195,988,864 samples, 0.02%)</title><rect x="96.9360%" y="309" width="0.0178%" height="15" fill="rgb(249,193,18)" fg:x="1067281178971" fg:w="195988864"/><text x="97.1860%" y="319.50"></text></g><g><title>sched_clock_cpu (113,329,815 samples, 0.01%)</title><rect x="96.9435%" y="293" width="0.0103%" height="15" fill="rgb(209,133,39)" fg:x="1067363838020" fg:w="113329815"/><text x="97.1935%" y="303.50"></text></g><g><title>psi_task_change (741,083,565 samples, 0.07%)</title><rect x="96.8873%" y="325" width="0.0673%" height="15" fill="rgb(232,100,14)" fg:x="1066745530173" fg:w="741083565"/><text x="97.1373%" y="335.50"></text></g><g><title>deactivate_task (2,189,469,411 samples, 0.20%)</title><rect x="96.7584%" y="341" width="0.1989%" height="15" fill="rgb(224,185,1)" fg:x="1065325504346" fg:w="2189469411"/><text x="97.0084%" y="351.50"></text></g><g><title>__perf_event_task_sched_in (155,523,828 samples, 0.01%)</title><rect x="96.9699%" y="325" width="0.0141%" height="15" fill="rgb(223,139,8)" fg:x="1067654878057" fg:w="155523828"/><text x="97.2199%" y="335.50"></text></g><g><title>finish_task_switch (303,662,934 samples, 0.03%)</title><rect x="96.9599%" y="341" width="0.0276%" height="15" fill="rgb(232,213,38)" fg:x="1067544512509" fg:w="303662934"/><text x="97.2099%" y="351.50"></text></g><g><title>find_busiest_group (276,140,152 samples, 0.03%)</title><rect x="97.0097%" y="293" width="0.0251%" height="15" fill="rgb(207,94,22)" fg:x="1068093110064" fg:w="276140152"/><text x="97.2597%" y="303.50"></text></g><g><title>update_sd_lb_stats (208,468,011 samples, 0.02%)</title><rect x="97.0159%" y="277" width="0.0189%" height="15" fill="rgb(219,183,54)" fg:x="1068160782205" fg:w="208468011"/><text x="97.2659%" y="287.50"></text></g><g><title>load_balance (361,618,506 samples, 0.03%)</title><rect x="97.0025%" y="309" width="0.0328%" height="15" fill="rgb(216,185,54)" fg:x="1068012822916" fg:w="361618506"/><text x="97.2525%" y="319.50"></text></g><g><title>newidle_balance (427,447,962 samples, 0.04%)</title><rect x="96.9977%" y="325" width="0.0388%" height="15" fill="rgb(254,217,39)" fg:x="1067960250816" fg:w="427447962"/><text x="97.2477%" y="335.50"></text></g><g><title>pick_next_task_fair (613,689,453 samples, 0.06%)</title><rect x="96.9901%" y="341" width="0.0557%" height="15" fill="rgb(240,178,23)" fg:x="1067877069346" fg:w="613689453"/><text x="97.2401%" y="351.50"></text></g><g><title>__update_idle_core (111,178,046 samples, 0.01%)</title><rect x="97.0522%" y="309" width="0.0101%" height="15" fill="rgb(218,11,47)" fg:x="1068560301842" fg:w="111178046"/><text x="97.3022%" y="319.50"></text></g><g><title>pick_next_task_idle (215,316,663 samples, 0.02%)</title><rect x="97.0459%" y="341" width="0.0196%" height="15" fill="rgb(218,51,51)" fg:x="1068490758799" fg:w="215316663"/><text x="97.2959%" y="351.50"></text></g><g><title>set_next_task_idle (148,474,224 samples, 0.01%)</title><rect x="97.0519%" y="325" width="0.0135%" height="15" fill="rgb(238,126,27)" fg:x="1068557601238" fg:w="148474224"/><text x="97.3019%" y="335.50"></text></g><g><title>rcu_note_context_switch (118,890,050 samples, 0.01%)</title><rect x="97.0694%" y="341" width="0.0108%" height="15" fill="rgb(249,202,22)" fg:x="1068749608607" fg:w="118890050"/><text x="97.3194%" y="351.50"></text></g><g><title>__sched_text_start (4,180,374,661 samples, 0.38%)</title><rect x="96.7094%" y="357" width="0.3797%" height="15" fill="rgb(254,195,49)" fg:x="1064786638925" fg:w="4180374661"/><text x="96.9594%" y="367.50"></text></g><g><title>_raw_spin_lock (122,547,228 samples, 0.01%)</title><rect x="97.0904%" y="357" width="0.0111%" height="15" fill="rgb(208,123,14)" fg:x="1068980650257" fg:w="122547228"/><text x="97.3404%" y="367.50"></text></g><g><title>futex_wait_queue_me (4,607,470,639 samples, 0.42%)</title><rect x="96.6881%" y="389" width="0.4185%" height="15" fill="rgb(224,200,8)" fg:x="1064551936980" fg:w="4607470639"/><text x="96.9381%" y="399.50"></text></g><g><title>schedule (4,401,952,001 samples, 0.40%)</title><rect x="96.7068%" y="373" width="0.3998%" height="15" fill="rgb(217,61,36)" fg:x="1064757455618" fg:w="4401952001"/><text x="96.9568%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (23,901,879,978 samples, 2.17%)</title><rect x="97.2519%" y="357" width="2.1709%" height="15" fill="rgb(206,35,45)" fg:x="1070758963313" fg:w="23901879978"/><text x="97.5019%" y="367.50">n..</text></g><g><title>_raw_spin_lock (23,915,901,867 samples, 2.17%)</title><rect x="97.2511%" y="373" width="2.1722%" height="15" fill="rgb(217,65,33)" fg:x="1070750370364" fg:w="23915901867"/><text x="97.5011%" y="383.50">_..</text></g><g><title>get_futex_key (151,575,460 samples, 0.01%)</title><rect x="99.4234%" y="373" width="0.0138%" height="15" fill="rgb(222,158,48)" fg:x="1094668329896" fg:w="151575460"/><text x="99.6734%" y="383.50"></text></g><g><title>get_futex_value_locked (703,535,228 samples, 0.06%)</title><rect x="99.4387%" y="373" width="0.0639%" height="15" fill="rgb(254,2,54)" fg:x="1094836563720" fg:w="703535228"/><text x="99.6887%" y="383.50"></text></g><g><title>futex_wait_setup (26,406,845,201 samples, 2.40%)</title><rect x="97.1066%" y="389" width="2.3984%" height="15" fill="rgb(250,143,38)" fg:x="1069159407619" fg:w="26406845201"/><text x="97.3566%" y="399.50">fu..</text></g><g><title>plist_add (207,531,296 samples, 0.02%)</title><rect x="99.5192%" y="389" width="0.0188%" height="15" fill="rgb(248,25,0)" fg:x="1095723044588" fg:w="207531296"/><text x="99.7692%" y="399.50"></text></g><g><title>futex_wait (32,048,188,903 samples, 2.91%)</title><rect x="96.6282%" y="405" width="2.9108%" height="15" fill="rgb(206,152,27)" fg:x="1063892639344" fg:w="32048188903"/><text x="96.8782%" y="415.50">fu..</text></g><g><title>do_futex (32,205,422,768 samples, 2.93%)</title><rect x="96.6158%" y="421" width="2.9251%" height="15" fill="rgb(240,77,30)" fg:x="1063755510032" fg:w="32205422768"/><text x="96.8658%" y="431.50">do..</text></g><g><title>__x64_sys_futex (32,397,213,884 samples, 2.94%)</title><rect x="96.6011%" y="437" width="2.9425%" height="15" fill="rgb(231,5,3)" fg:x="1063594050617" fg:w="32397213884"/><text x="96.8511%" y="447.50">__..</text></g><g><title>do_syscall_64 (34,151,213,392 samples, 3.10%)</title><rect x="96.4553%" y="453" width="3.1018%" height="15" fill="rgb(207,226,32)" fg:x="1061988847428" fg:w="34151213392"/><text x="96.7053%" y="463.50">do_..</text></g><g><title>switch_fpu_return (113,166,337 samples, 0.01%)</title><rect x="99.5468%" y="437" width="0.0103%" height="15" fill="rgb(222,207,47)" fg:x="1096026894483" fg:w="113166337"/><text x="99.7968%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34,419,372,525 samples, 3.13%)</title><rect x="96.4338%" y="469" width="3.1261%" height="15" fill="rgb(229,115,45)" fg:x="1061752086894" fg:w="34419372525"/><text x="96.6838%" y="479.50">ent..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (36,063,894,892 samples, 3.28%)</title><rect x="96.3291%" y="501" width="3.2755%" height="15" fill="rgb(224,191,6)" fg:x="1060599131865" fg:w="36063894892"/><text x="96.5791%" y="511.50">std..</text></g><g><title>syscall (35,523,522,498 samples, 3.23%)</title><rect x="96.3782%" y="485" width="3.2264%" height="15" fill="rgb(230,227,24)" fg:x="1061139504259" fg:w="35523522498"/><text x="96.6282%" y="495.50">sys..</text></g><g><title>syscall_return_via_sysret (430,651,025 samples, 0.04%)</title><rect x="99.5655%" y="469" width="0.0391%" height="15" fill="rgb(228,80,19)" fg:x="1096232375732" fg:w="430651025"/><text x="99.8155%" y="479.50"></text></g><g><title>core::hint::spin_loop (364,528,362 samples, 0.03%)</title><rect x="99.6208%" y="485" width="0.0331%" height="15" fill="rgb(247,229,0)" fg:x="1096841612944" fg:w="364528362"/><text x="99.8708%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (364,528,362 samples, 0.03%)</title><rect x="99.6208%" y="469" width="0.0331%" height="15" fill="rgb(237,194,15)" fg:x="1096841612944" fg:w="364528362"/><text x="99.8708%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2,878,654,473 samples, 0.26%)</title><rect x="99.6539%" y="485" width="0.2615%" height="15" fill="rgb(219,203,20)" fg:x="1097206141306" fg:w="2878654473"/><text x="99.9039%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (2,878,654,473 samples, 0.26%)</title><rect x="99.6539%" y="469" width="0.2615%" height="15" fill="rgb(234,128,8)" fg:x="1097206141306" fg:w="2878654473"/><text x="99.9039%" y="479.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (40,957,499,882 samples, 3.72%)</title><rect x="96.1961%" y="517" width="3.7200%" height="15" fill="rgb(248,202,8)" fg:x="1059135077003" fg:w="40957499882"/><text x="96.4461%" y="527.50">std:..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (3,429,550,128 samples, 0.31%)</title><rect x="99.6046%" y="501" width="0.3115%" height="15" fill="rgb(206,104,37)" fg:x="1096663026757" fg:w="3429550128"/><text x="99.8546%" y="511.50"></text></g><g><title>std::thread::yield_now (149,797,994 samples, 0.01%)</title><rect x="99.9177%" y="517" width="0.0136%" height="15" fill="rgb(223,8,27)" fg:x="1100110121064" fg:w="149797994"/><text x="100.1677%" y="527.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (120,628,753 samples, 0.01%)</title><rect x="99.9203%" y="501" width="0.0110%" height="15" fill="rgb(216,217,28)" fg:x="1100139290305" fg:w="120628753"/><text x="100.1703%" y="511.50"></text></g><g><title>change_pte_range (422,368,793 samples, 0.04%)</title><rect x="99.9341%" y="389" width="0.0384%" height="15" fill="rgb(249,199,1)" fg:x="1100290480414" fg:w="422368793"/><text x="100.1841%" y="399.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (478,360,530 samples, 0.04%)</title><rect x="99.9313%" y="517" width="0.0434%" height="15" fill="rgb(240,85,17)" fg:x="1100259919058" fg:w="478360530"/><text x="100.1813%" y="527.50"></text></g><g><title>prepare_exit_to_usermode (459,224,118 samples, 0.04%)</title><rect x="99.9330%" y="501" width="0.0417%" height="15" fill="rgb(206,108,45)" fg:x="1100279055470" fg:w="459224118"/><text x="100.1830%" y="511.50"></text></g><g><title>exit_to_usermode_loop (456,639,941 samples, 0.04%)</title><rect x="99.9333%" y="485" width="0.0415%" height="15" fill="rgb(245,210,41)" fg:x="1100281639647" fg:w="456639941"/><text x="100.1833%" y="495.50"></text></g><g><title>task_work_run (456,639,941 samples, 0.04%)</title><rect x="99.9333%" y="469" width="0.0415%" height="15" fill="rgb(206,13,37)" fg:x="1100281639647" fg:w="456639941"/><text x="100.1833%" y="479.50"></text></g><g><title>task_numa_work (456,639,941 samples, 0.04%)</title><rect x="99.9333%" y="453" width="0.0415%" height="15" fill="rgb(250,61,18)" fg:x="1100281639647" fg:w="456639941"/><text x="100.1833%" y="463.50"></text></g><g><title>change_prot_numa (456,639,941 samples, 0.04%)</title><rect x="99.9333%" y="437" width="0.0415%" height="15" fill="rgb(235,172,48)" fg:x="1100281639647" fg:w="456639941"/><text x="100.1833%" y="447.50"></text></g><g><title>change_protection (456,639,941 samples, 0.04%)</title><rect x="99.9333%" y="421" width="0.0415%" height="15" fill="rgb(249,201,17)" fg:x="1100281639647" fg:w="456639941"/><text x="100.1833%" y="431.50"></text></g><g><title>change_protection_range (456,639,941 samples, 0.04%)</title><rect x="99.9333%" y="405" width="0.0415%" height="15" fill="rgb(219,208,6)" fg:x="1100281639647" fg:w="456639941"/><text x="100.1833%" y="415.50"></text></g><g><title>QUEUE_TEST (1,101,016,299,114 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(248,31,23)" fg:x="0" fg:w="1101016299114"/><text x="0.2500%" y="543.50">QUEUE_TEST</text></g><g><title>syscall_return_via_sysret (265,294,140 samples, 0.02%)</title><rect x="99.9759%" y="517" width="0.0241%" height="15" fill="rgb(245,15,42)" fg:x="1100751004974" fg:w="265294140"/><text x="100.2259%" y="527.50"></text></g><g><title>all (1,101,016,323,104 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(222,217,39)" fg:x="0" fg:w="1101016323104"/><text x="0.2500%" y="559.50"></text></g></svg></svg>