<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="475311007493"><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (80,918,946 samples, 0.02%)</title><rect x="0.0195%" y="325" width="0.0170%" height="15" fill="rgb(227,0,7)" fg:x="92583336" fg:w="80918946"/><text x="0.2695%" y="335.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (80,918,946 samples, 0.02%)</title><rect x="0.0195%" y="309" width="0.0170%" height="15" fill="rgb(217,0,24)" fg:x="92583336" fg:w="80918946"/><text x="0.2695%" y="319.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (80,918,946 samples, 0.02%)</title><rect x="0.0195%" y="293" width="0.0170%" height="15" fill="rgb(221,193,54)" fg:x="92583336" fg:w="80918946"/><text x="0.2695%" y="303.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (80,918,946 samples, 0.02%)</title><rect x="0.0195%" y="277" width="0.0170%" height="15" fill="rgb(248,212,6)" fg:x="92583336" fg:w="80918946"/><text x="0.2695%" y="287.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_bytes (80,918,946 samples, 0.02%)</title><rect x="0.0195%" y="261" width="0.0170%" height="15" fill="rgb(208,68,35)" fg:x="92583336" fg:w="80918946"/><text x="0.2695%" y="271.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_bytes (80,918,946 samples, 0.02%)</title><rect x="0.0195%" y="245" width="0.0170%" height="15" fill="rgb(232,128,0)" fg:x="92583336" fg:w="80918946"/><text x="0.2695%" y="255.50"></text></g><g><title>serde::de::MapAccess::next_key (194,515,603 samples, 0.04%)</title><rect x="0.0195%" y="357" width="0.0409%" height="15" fill="rgb(207,160,47)" fg:x="92583336" fg:w="194515603"/><text x="0.2695%" y="367.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_key_seed (194,515,603 samples, 0.04%)</title><rect x="0.0195%" y="341" width="0.0409%" height="15" fill="rgb(228,23,34)" fg:x="92583336" fg:w="194515603"/><text x="0.2695%" y="351.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_header_bytes (107,939,957 samples, 0.02%)</title><rect x="0.0377%" y="325" width="0.0227%" height="15" fill="rgb(218,30,26)" fg:x="179158982" fg:w="107939957"/><text x="0.2877%" y="335.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header_bytes (107,939,957 samples, 0.02%)</title><rect x="0.0377%" y="309" width="0.0227%" height="15" fill="rgb(220,122,19)" fg:x="179158982" fg:w="107939957"/><text x="0.2877%" y="319.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header (107,939,957 samples, 0.02%)</title><rect x="0.0377%" y="293" width="0.0227%" height="15" fill="rgb(250,228,42)" fg:x="179158982" fg:w="107939957"/><text x="0.2877%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (107,939,957 samples, 0.02%)</title><rect x="0.0377%" y="277" width="0.0227%" height="15" fill="rgb(240,193,28)" fg:x="179158982" fg:w="107939957"/><text x="0.2877%" y="287.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header::{{closure}} (107,939,957 samples, 0.02%)</title><rect x="0.0377%" y="261" width="0.0227%" height="15" fill="rgb(216,20,37)" fg:x="179158982" fg:w="107939957"/><text x="0.2877%" y="271.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (107,939,957 samples, 0.02%)</title><rect x="0.0377%" y="245" width="0.0227%" height="15" fill="rgb(206,188,39)" fg:x="179158982" fg:w="107939957"/><text x="0.2877%" y="255.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (107,939,957 samples, 0.02%)</title><rect x="0.0377%" y="229" width="0.0227%" height="15" fill="rgb(217,207,13)" fg:x="179158982" fg:w="107939957"/><text x="0.2877%" y="239.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (308,315,053 samples, 0.06%)</title><rect x="0.0000%" y="389" width="0.0649%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="308315053"/><text x="0.2500%" y="399.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (296,783,669 samples, 0.06%)</title><rect x="0.0024%" y="373" width="0.0624%" height="15" fill="rgb(225,20,46)" fg:x="11531384" fg:w="296783669"/><text x="0.2524%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (4,414,545,653 samples, 0.93%)</title><rect x="1.0715%" y="341" width="0.9288%" height="15" fill="rgb(210,31,41)" fg:x="5092844836" fg:w="4414545653"/><text x="1.3215%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (4,414,545,653 samples, 0.93%)</title><rect x="1.0715%" y="325" width="0.9288%" height="15" fill="rgb(221,200,47)" fg:x="5092844836" fg:w="4414545653"/><text x="1.3215%" y="335.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (4,842,568,589 samples, 1.02%)</title><rect x="1.0292%" y="357" width="1.0188%" height="15" fill="rgb(226,26,5)" fg:x="4891883823" fg:w="4842568589"/><text x="1.2792%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (227,061,923 samples, 0.05%)</title><rect x="2.0002%" y="341" width="0.0478%" height="15" fill="rgb(249,33,26)" fg:x="9507390489" fg:w="227061923"/><text x="2.2502%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5,275,551,216 samples, 1.11%)</title><rect x="2.0480%" y="357" width="1.1099%" height="15" fill="rgb(235,183,28)" fg:x="9734452412" fg:w="5275551216"/><text x="2.2980%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5,275,551,216 samples, 1.11%)</title><rect x="2.0480%" y="341" width="1.1099%" height="15" fill="rgb(221,5,38)" fg:x="9734452412" fg:w="5275551216"/><text x="2.2980%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (103,949,884 samples, 0.02%)</title><rect x="3.1361%" y="325" width="0.0219%" height="15" fill="rgb(247,18,42)" fg:x="14906053744" fg:w="103949884"/><text x="3.3861%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (4,621,215,202 samples, 0.97%)</title><rect x="3.1934%" y="325" width="0.9723%" height="15" fill="rgb(241,131,45)" fg:x="15178498884" fg:w="4621215202"/><text x="3.4434%" y="335.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (4,621,215,202 samples, 0.97%)</title><rect x="3.1934%" y="309" width="0.9723%" height="15" fill="rgb(249,31,29)" fg:x="15178498884" fg:w="4621215202"/><text x="3.4434%" y="319.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (337,987,429 samples, 0.07%)</title><rect x="4.1656%" y="325" width="0.0711%" height="15" fill="rgb(225,111,53)" fg:x="19799714086" fg:w="337987429"/><text x="4.4156%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5,131,831,242 samples, 1.08%)</title><rect x="3.1579%" y="357" width="1.0797%" height="15" fill="rgb(238,160,17)" fg:x="15010003628" fg:w="5131831242"/><text x="3.4079%" y="367.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (5,131,831,242 samples, 1.08%)</title><rect x="3.1579%" y="341" width="1.0797%" height="15" fill="rgb(214,148,48)" fg:x="15010003628" fg:w="5131831242"/><text x="3.4079%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18,392,770,571 samples, 3.87%)</title><rect x="0.3698%" y="373" width="3.8696%" height="15" fill="rgb(232,36,49)" fg:x="1757540737" fg:w="18392770571"/><text x="0.6198%" y="383.50">core..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19,845,363,764 samples, 4.18%)</title><rect x="0.0649%" y="389" width="4.1752%" height="15" fill="rgb(209,103,24)" fg:x="308315053" fg:w="19845363764"/><text x="0.3149%" y="399.50">&lt;core..</text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (81,847,863 samples, 0.02%)</title><rect x="4.2549%" y="293" width="0.0172%" height="15" fill="rgb(229,88,8)" fg:x="20224192650" fg:w="81847863"/><text x="4.5049%" y="303.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (81,847,863 samples, 0.02%)</title><rect x="4.2549%" y="277" width="0.0172%" height="15" fill="rgb(213,181,19)" fg:x="20224192650" fg:w="81847863"/><text x="4.5049%" y="287.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field (121,117,608 samples, 0.03%)</title><rect x="4.2498%" y="341" width="0.0255%" height="15" fill="rgb(254,191,54)" fg:x="20199934239" fg:w="121117608"/><text x="4.4998%" y="351.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (121,117,608 samples, 0.03%)</title><rect x="4.2498%" y="325" width="0.0255%" height="15" fill="rgb(241,83,37)" fg:x="20199934239" fg:w="121117608"/><text x="4.4998%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (105,748,992 samples, 0.02%)</title><rect x="4.2531%" y="309" width="0.0222%" height="15" fill="rgb(233,36,39)" fg:x="20215302855" fg:w="105748992"/><text x="4.5031%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (226,040,901 samples, 0.05%)</title><rect x="4.2401%" y="389" width="0.0476%" height="15" fill="rgb(226,3,54)" fg:x="20153678817" fg:w="226040901"/><text x="4.4901%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f64&gt;::deserialize (179,785,479 samples, 0.04%)</title><rect x="4.2498%" y="373" width="0.0378%" height="15" fill="rgb(245,192,40)" fg:x="20199934239" fg:w="179785479"/><text x="4.4998%" y="383.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f64 (179,785,479 samples, 0.04%)</title><rect x="4.2498%" y="357" width="0.0378%" height="15" fill="rgb(238,167,29)" fg:x="20199934239" fg:w="179785479"/><text x="4.4998%" y="367.50"></text></g><g><title>__GI___libc_malloc (61,661,300 samples, 0.01%)</title><rect x="4.3001%" y="245" width="0.0130%" height="15" fill="rgb(232,182,51)" fg:x="20439058555" fg:w="61661300"/><text x="4.5501%" y="255.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_in (71,675,025 samples, 0.02%)</title><rect x="4.2984%" y="357" width="0.0151%" height="15" fill="rgb(231,60,39)" fg:x="20430942426" fg:w="71675025"/><text x="4.5484%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (71,675,025 samples, 0.02%)</title><rect x="4.2984%" y="341" width="0.0151%" height="15" fill="rgb(208,69,12)" fg:x="20430942426" fg:w="71675025"/><text x="4.5484%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (68,973,025 samples, 0.01%)</title><rect x="4.2990%" y="325" width="0.0145%" height="15" fill="rgb(235,93,37)" fg:x="20433644426" fg:w="68973025"/><text x="4.5490%" y="335.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::allocate (68,973,025 samples, 0.01%)</title><rect x="4.2990%" y="309" width="0.0145%" height="15" fill="rgb(213,116,39)" fg:x="20433644426" fg:w="68973025"/><text x="4.5490%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (68,973,025 samples, 0.01%)</title><rect x="4.2990%" y="293" width="0.0145%" height="15" fill="rgb(222,207,29)" fg:x="20433644426" fg:w="68973025"/><text x="4.5490%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68,973,025 samples, 0.01%)</title><rect x="4.2990%" y="277" width="0.0145%" height="15" fill="rgb(206,96,30)" fg:x="20433644426" fg:w="68973025"/><text x="4.5490%" y="287.50"></text></g><g><title>alloc::alloc::alloc (68,973,025 samples, 0.01%)</title><rect x="4.2990%" y="261" width="0.0145%" height="15" fill="rgb(218,138,4)" fg:x="20433644426" fg:w="68973025"/><text x="4.5490%" y="271.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back (78,727,213 samples, 0.02%)</title><rect x="4.2984%" y="373" width="0.0166%" height="15" fill="rgb(250,191,14)" fg:x="20430942426" fg:w="78727213"/><text x="4.5484%" y="383.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (93,976,060 samples, 0.02%)</title><rect x="4.2958%" y="389" width="0.0198%" height="15" fill="rgb(239,60,40)" fg:x="20418224725" fg:w="93976060"/><text x="4.5458%" y="399.50"></text></g><g><title>&lt;rayon_core::latch::SpinLatch as rayon_core::latch::Latch&gt;::set (334,721,013 samples, 0.07%)</title><rect x="4.3265%" y="373" width="0.0704%" height="15" fill="rgb(206,27,48)" fg:x="20564244917" fg:w="334721013"/><text x="4.5765%" y="383.50"></text></g><g><title>rayon_core::latch::CoreLatch::set (150,311,235 samples, 0.03%)</title><rect x="4.3653%" y="357" width="0.0316%" height="15" fill="rgb(225,35,8)" fg:x="20748654695" fg:w="150311235"/><text x="4.6153%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (147,701,003 samples, 0.03%)</title><rect x="4.3658%" y="341" width="0.0311%" height="15" fill="rgb(250,213,24)" fg:x="20751264927" fg:w="147701003"/><text x="4.6158%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (147,701,003 samples, 0.03%)</title><rect x="4.3658%" y="325" width="0.0311%" height="15" fill="rgb(247,123,22)" fg:x="20751264927" fg:w="147701003"/><text x="4.6158%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (128,137,646 samples, 0.03%)</title><rect x="4.3969%" y="373" width="0.0270%" height="15" fill="rgb(231,138,38)" fg:x="20898965930" fg:w="128137646"/><text x="4.6469%" y="383.50"></text></g><g><title>core::mem::replace (128,137,646 samples, 0.03%)</title><rect x="4.3969%" y="357" width="0.0270%" height="15" fill="rgb(231,145,46)" fg:x="20898965930" fg:w="128137646"/><text x="4.6469%" y="367.50"></text></g><g><title>core::ptr::read (128,137,646 samples, 0.03%)</title><rect x="4.3969%" y="341" width="0.0270%" height="15" fill="rgb(251,118,11)" fg:x="20898965930" fg:w="128137646"/><text x="4.6469%" y="351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (141,567,836 samples, 0.03%)</title><rect x="4.4457%" y="261" width="0.0298%" height="15" fill="rgb(217,147,25)" fg:x="21130928341" fg:w="141567836"/><text x="4.6957%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (141,567,836 samples, 0.03%)</title><rect x="4.4457%" y="245" width="0.0298%" height="15" fill="rgb(247,81,37)" fg:x="21130928341" fg:w="141567836"/><text x="4.6957%" y="255.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (161,206,882 samples, 0.03%)</title><rect x="4.4421%" y="373" width="0.0339%" height="15" fill="rgb(209,12,38)" fg:x="21113755006" fg:w="161206882"/><text x="4.6921%" y="383.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (154,364,755 samples, 0.03%)</title><rect x="4.4435%" y="357" width="0.0325%" height="15" fill="rgb(227,1,9)" fg:x="21120597133" fg:w="154364755"/><text x="4.6935%" y="367.50"></text></g><g><title>std::panic::catch_unwind (154,364,755 samples, 0.03%)</title><rect x="4.4435%" y="341" width="0.0325%" height="15" fill="rgb(248,47,43)" fg:x="21120597133" fg:w="154364755"/><text x="4.6935%" y="351.50"></text></g><g><title>std::panicking::try (154,364,755 samples, 0.03%)</title><rect x="4.4435%" y="325" width="0.0325%" height="15" fill="rgb(221,10,30)" fg:x="21120597133" fg:w="154364755"/><text x="4.6935%" y="335.50"></text></g><g><title>std::panicking::try::do_call (154,364,755 samples, 0.03%)</title><rect x="4.4435%" y="309" width="0.0325%" height="15" fill="rgb(210,229,1)" fg:x="21120597133" fg:w="154364755"/><text x="4.6935%" y="319.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (144,033,547 samples, 0.03%)</title><rect x="4.4457%" y="293" width="0.0303%" height="15" fill="rgb(222,148,37)" fg:x="21130928341" fg:w="144033547"/><text x="4.6957%" y="303.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (144,033,547 samples, 0.03%)</title><rect x="4.4457%" y="277" width="0.0303%" height="15" fill="rgb(234,67,33)" fg:x="21130928341" fg:w="144033547"/><text x="4.6957%" y="287.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (745,598,315 samples, 0.16%)</title><rect x="4.3240%" y="389" width="0.1569%" height="15" fill="rgb(247,98,35)" fg:x="20552226409" fg:w="745598315"/><text x="4.5740%" y="399.50"></text></g><g><title>select_task_rq_fair (102,387,905 samples, 0.02%)</title><rect x="4.5143%" y="229" width="0.0215%" height="15" fill="rgb(247,138,52)" fg:x="21457059047" fg:w="102387905"/><text x="4.7643%" y="239.50"></text></g><g><title>select_idle_sibling (77,748,498 samples, 0.02%)</title><rect x="4.5195%" y="213" width="0.0164%" height="15" fill="rgb(213,79,30)" fg:x="21481698454" fg:w="77748498"/><text x="4.7695%" y="223.50"></text></g><g><title>select_idle_sibling.part.0 (56,053,249 samples, 0.01%)</title><rect x="4.5241%" y="197" width="0.0118%" height="15" fill="rgb(246,177,23)" fg:x="21503393703" fg:w="56053249"/><text x="4.7741%" y="207.50"></text></g><g><title>enqueue_task_fair (60,847,460 samples, 0.01%)</title><rect x="4.5395%" y="197" width="0.0128%" height="15" fill="rgb(230,62,27)" fg:x="21576524398" fg:w="60847460"/><text x="4.7895%" y="207.50"></text></g><g><title>activate_task (98,172,351 samples, 0.02%)</title><rect x="4.5395%" y="213" width="0.0207%" height="15" fill="rgb(216,154,8)" fg:x="21576524398" fg:w="98172351"/><text x="4.7895%" y="223.50"></text></g><g><title>ttwu_do_activate (113,112,578 samples, 0.02%)</title><rect x="4.5395%" y="229" width="0.0238%" height="15" fill="rgb(244,35,45)" fg:x="21576524398" fg:w="113112578"/><text x="4.7895%" y="239.50"></text></g><g><title>__x64_sys_futex (333,022,887 samples, 0.07%)</title><rect x="4.4950%" y="309" width="0.0701%" height="15" fill="rgb(251,115,12)" fg:x="21365368651" fg:w="333022887"/><text x="4.7450%" y="319.50"></text></g><g><title>do_futex (329,790,484 samples, 0.07%)</title><rect x="4.4957%" y="293" width="0.0694%" height="15" fill="rgb(240,54,50)" fg:x="21368601054" fg:w="329790484"/><text x="4.7457%" y="303.50"></text></g><g><title>futex_wake (326,988,209 samples, 0.07%)</title><rect x="4.4963%" y="277" width="0.0688%" height="15" fill="rgb(233,84,52)" fg:x="21371403329" fg:w="326988209"/><text x="4.7463%" y="287.50"></text></g><g><title>wake_up_q (285,667,064 samples, 0.06%)</title><rect x="4.5050%" y="261" width="0.0601%" height="15" fill="rgb(207,117,47)" fg:x="21412724474" fg:w="285667064"/><text x="4.7550%" y="271.50"></text></g><g><title>try_to_wake_up (269,718,430 samples, 0.06%)</title><rect x="4.5083%" y="245" width="0.0567%" height="15" fill="rgb(249,43,39)" fg:x="21428673108" fg:w="269718430"/><text x="4.7583%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (389,759,708 samples, 0.08%)</title><rect x="4.4847%" y="341" width="0.0820%" height="15" fill="rgb(209,38,44)" fg:x="21316394081" fg:w="389759708"/><text x="4.7347%" y="351.50"></text></g><g><title>do_syscall_64 (383,839,053 samples, 0.08%)</title><rect x="4.4860%" y="325" width="0.0808%" height="15" fill="rgb(236,212,23)" fg:x="21322314736" fg:w="383839053"/><text x="4.7360%" y="335.50"></text></g><g><title>&lt;rayon_core::latch::LatchRef&lt;L&gt; as rayon_core::latch::Latch&gt;::set (423,718,636 samples, 0.09%)</title><rect x="4.4808%" y="389" width="0.0891%" height="15" fill="rgb(242,79,21)" fg:x="21297824724" fg:w="423718636"/><text x="4.7308%" y="399.50"></text></g><g><title>&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (423,718,636 samples, 0.09%)</title><rect x="4.4808%" y="373" width="0.0891%" height="15" fill="rgb(211,96,35)" fg:x="21297824724" fg:w="423718636"/><text x="4.7308%" y="383.50"></text></g><g><title>syscall (418,999,257 samples, 0.09%)</title><rect x="4.4818%" y="357" width="0.0882%" height="15" fill="rgb(253,215,40)" fg:x="21302544103" fg:w="418999257"/><text x="4.7318%" y="367.50"></text></g><g><title>copy_page_to_iter (76,868,289 samples, 0.02%)</title><rect x="4.5814%" y="149" width="0.0162%" height="15" fill="rgb(211,81,21)" fg:x="21775954136" fg:w="76868289"/><text x="4.8314%" y="159.50"></text></g><g><title>copy_user_enhanced_fast_string (76,868,289 samples, 0.02%)</title><rect x="4.5814%" y="133" width="0.0162%" height="15" fill="rgb(208,190,38)" fg:x="21775954136" fg:w="76868289"/><text x="4.8314%" y="143.50"></text></g><g><title>__vfs_read (127,876,637 samples, 0.03%)</title><rect x="4.5808%" y="229" width="0.0269%" height="15" fill="rgb(235,213,38)" fg:x="21773046528" fg:w="127876637"/><text x="4.8308%" y="239.50"></text></g><g><title>new_sync_read (127,876,637 samples, 0.03%)</title><rect x="4.5808%" y="213" width="0.0269%" height="15" fill="rgb(237,122,38)" fg:x="21773046528" fg:w="127876637"/><text x="4.8308%" y="223.50"></text></g><g><title>ext4_file_read_iter (127,876,637 samples, 0.03%)</title><rect x="4.5808%" y="197" width="0.0269%" height="15" fill="rgb(244,218,35)" fg:x="21773046528" fg:w="127876637"/><text x="4.8308%" y="207.50"></text></g><g><title>generic_file_read_iter (127,876,637 samples, 0.03%)</title><rect x="4.5808%" y="181" width="0.0269%" height="15" fill="rgb(240,68,47)" fg:x="21773046528" fg:w="127876637"/><text x="4.8308%" y="191.50"></text></g><g><title>generic_file_buffered_read (127,876,637 samples, 0.03%)</title><rect x="4.5808%" y="165" width="0.0269%" height="15" fill="rgb(210,16,53)" fg:x="21773046528" fg:w="127876637"/><text x="4.8308%" y="175.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (184,069,675 samples, 0.04%)</title><rect x="4.5708%" y="309" width="0.0387%" height="15" fill="rgb(235,124,12)" fg:x="21725695509" fg:w="184069675"/><text x="4.8208%" y="319.50"></text></g><g><title>do_syscall_64 (181,204,960 samples, 0.04%)</title><rect x="4.5714%" y="293" width="0.0381%" height="15" fill="rgb(224,169,11)" fg:x="21728560224" fg:w="181204960"/><text x="4.8214%" y="303.50"></text></g><g><title>__x64_sys_read (154,968,680 samples, 0.03%)</title><rect x="4.5770%" y="277" width="0.0326%" height="15" fill="rgb(250,166,2)" fg:x="21754796504" fg:w="154968680"/><text x="4.8270%" y="287.50"></text></g><g><title>ksys_read (152,094,058 samples, 0.03%)</title><rect x="4.5776%" y="261" width="0.0320%" height="15" fill="rgb(242,216,29)" fg:x="21757671126" fg:w="152094058"/><text x="4.8276%" y="271.50"></text></g><g><title>vfs_read (145,924,962 samples, 0.03%)</title><rect x="4.5789%" y="245" width="0.0307%" height="15" fill="rgb(230,116,27)" fg:x="21763840222" fg:w="145924962"/><text x="4.8289%" y="255.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (196,099,538 samples, 0.04%)</title><rect x="4.5702%" y="389" width="0.0413%" height="15" fill="rgb(228,99,48)" fg:x="21722542408" fg:w="196099538"/><text x="4.8202%" y="399.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (192,946,437 samples, 0.04%)</title><rect x="4.5708%" y="373" width="0.0406%" height="15" fill="rgb(253,11,6)" fg:x="21725695509" fg:w="192946437"/><text x="4.8208%" y="383.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (192,946,437 samples, 0.04%)</title><rect x="4.5708%" y="357" width="0.0406%" height="15" fill="rgb(247,143,39)" fg:x="21725695509" fg:w="192946437"/><text x="4.8208%" y="367.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (192,946,437 samples, 0.04%)</title><rect x="4.5708%" y="341" width="0.0406%" height="15" fill="rgb(236,97,10)" fg:x="21725695509" fg:w="192946437"/><text x="4.8208%" y="351.50"></text></g><g><title>__libc_read (192,946,437 samples, 0.04%)</title><rect x="4.5708%" y="325" width="0.0406%" height="15" fill="rgb(233,208,19)" fg:x="21725695509" fg:w="192946437"/><text x="4.8208%" y="335.50"></text></g><g><title>QUEUE_TEST::collisionhandling::compute_acc (70,442,800 samples, 0.01%)</title><rect x="4.6210%" y="357" width="0.0148%" height="15" fill="rgb(216,164,2)" fg:x="21964231613" fg:w="70442800"/><text x="4.8710%" y="367.50"></text></g><g><title>QUEUE_TEST::collisionhandling::process_pair_get_dv (168,008,986 samples, 0.04%)</title><rect x="4.6194%" y="373" width="0.0353%" height="15" fill="rgb(220,129,5)" fg:x="21956366966" fg:w="168008986"/><text x="4.8694%" y="383.50"></text></g><g><title>QUEUE_TEST::collisionhandling::get_next_time (89,701,539 samples, 0.02%)</title><rect x="4.6358%" y="357" width="0.0189%" height="15" fill="rgb(242,17,10)" fg:x="22034674413" fg:w="89701539"/><text x="4.8858%" y="367.50"></text></g><g><title>QUEUE_TEST::collisionhandling::process_collision (233,646,526 samples, 0.05%)</title><rect x="4.6114%" y="389" width="0.0492%" height="15" fill="rgb(242,107,0)" fg:x="21918641946" fg:w="233646526"/><text x="4.8614%" y="399.50"></text></g><g><title>page_fault (77,057,489 samples, 0.02%)</title><rect x="4.6691%" y="325" width="0.0162%" height="15" fill="rgb(251,28,31)" fg:x="22192767577" fg:w="77057489"/><text x="4.9191%" y="335.50"></text></g><g><title>do_page_fault (77,057,489 samples, 0.02%)</title><rect x="4.6691%" y="309" width="0.0162%" height="15" fill="rgb(233,223,10)" fg:x="22192767577" fg:w="77057489"/><text x="4.9191%" y="319.50"></text></g><g><title>__do_page_fault (77,057,489 samples, 0.02%)</title><rect x="4.6691%" y="293" width="0.0162%" height="15" fill="rgb(215,21,27)" fg:x="22192767577" fg:w="77057489"/><text x="4.9191%" y="303.50"></text></g><g><title>do_user_addr_fault (77,057,489 samples, 0.02%)</title><rect x="4.6691%" y="277" width="0.0162%" height="15" fill="rgb(232,23,21)" fg:x="22192767577" fg:w="77057489"/><text x="4.9191%" y="287.50"></text></g><g><title>handle_mm_fault (74,237,582 samples, 0.02%)</title><rect x="4.6697%" y="261" width="0.0156%" height="15" fill="rgb(244,5,23)" fg:x="22195587484" fg:w="74237582"/><text x="4.9197%" y="271.50"></text></g><g><title>__handle_mm_fault (71,296,877 samples, 0.02%)</title><rect x="4.6703%" y="245" width="0.0150%" height="15" fill="rgb(226,81,46)" fg:x="22198528189" fg:w="71296877"/><text x="4.9203%" y="255.50"></text></g><g><title>do_anonymous_page (68,424,130 samples, 0.01%)</title><rect x="4.6709%" y="229" width="0.0144%" height="15" fill="rgb(247,70,30)" fg:x="22201400936" fg:w="68424130"/><text x="4.9209%" y="239.50"></text></g><g><title>QUEUE_TEST::csvreader::csvcon (135,256,383 samples, 0.03%)</title><rect x="4.6606%" y="389" width="0.0285%" height="15" fill="rgb(212,68,19)" fg:x="22152288472" fg:w="135256383"/><text x="4.9106%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (135,256,383 samples, 0.03%)</title><rect x="4.6606%" y="373" width="0.0285%" height="15" fill="rgb(240,187,13)" fg:x="22152288472" fg:w="135256383"/><text x="4.9106%" y="383.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (135,256,383 samples, 0.03%)</title><rect x="4.6606%" y="357" width="0.0285%" height="15" fill="rgb(223,113,26)" fg:x="22152288472" fg:w="135256383"/><text x="4.9106%" y="367.50"></text></g><g><title>core::ptr::write (135,256,383 samples, 0.03%)</title><rect x="4.6606%" y="341" width="0.0285%" height="15" fill="rgb(206,192,2)" fg:x="22152288472" fg:w="135256383"/><text x="4.9106%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (114,156,327 samples, 0.02%)</title><rect x="4.7132%" y="261" width="0.0240%" height="15" fill="rgb(241,108,4)" fg:x="22402536434" fg:w="114156327"/><text x="4.9632%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (92,887,528 samples, 0.02%)</title><rect x="4.7177%" y="245" width="0.0195%" height="15" fill="rgb(247,173,49)" fg:x="22423805233" fg:w="92887528"/><text x="4.9677%" y="255.50"></text></g><g><title>core::cmp::PartialOrd::le (92,887,528 samples, 0.02%)</title><rect x="4.7177%" y="229" width="0.0195%" height="15" fill="rgb(224,114,35)" fg:x="22423805233" fg:w="92887528"/><text x="4.9677%" y="239.50"></text></g><g><title>&lt;QUEUE_TEST::KeyVal as core::cmp::PartialOrd&gt;::partial_cmp (78,048,201 samples, 0.02%)</title><rect x="4.7208%" y="213" width="0.0164%" height="15" fill="rgb(245,159,27)" fg:x="22438644560" fg:w="78048201"/><text x="4.9708%" y="223.50"></text></g><g><title>&lt;QUEUE_TEST::KeyVal as core::cmp::Ord&gt;::cmp (78,048,201 samples, 0.02%)</title><rect x="4.7208%" y="197" width="0.0164%" height="15" fill="rgb(245,172,44)" fg:x="22438644560" fg:w="78048201"/><text x="4.9708%" y="207.50"></text></g><g><title>&lt;ordered_float::OrderedFloat&lt;T&gt; as core::cmp::Ord&gt;::cmp (78,048,201 samples, 0.02%)</title><rect x="4.7208%" y="181" width="0.0164%" height="15" fill="rgb(236,23,11)" fg:x="22438644560" fg:w="78048201"/><text x="4.9708%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (67,643,322 samples, 0.01%)</title><rect x="4.7230%" y="165" width="0.0142%" height="15" fill="rgb(205,117,38)" fg:x="22449049439" fg:w="67643322"/><text x="4.9730%" y="175.50"></text></g><g><title>&lt;ordered_float::OrderedFloat&lt;T&gt; as core::cmp::PartialOrd&gt;::lt (67,643,322 samples, 0.01%)</title><rect x="4.7230%" y="149" width="0.0142%" height="15" fill="rgb(237,72,25)" fg:x="22449049439" fg:w="67643322"/><text x="4.9730%" y="159.50"></text></g><g><title>&lt;ordered_float::OrderedFloat&lt;T&gt; as core::cmp::PartialOrd&gt;::ge (67,643,322 samples, 0.01%)</title><rect x="4.7230%" y="133" width="0.0142%" height="15" fill="rgb(244,70,9)" fg:x="22449049439" fg:w="67643322"/><text x="4.9730%" y="143.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (191,694,983 samples, 0.04%)</title><rect x="4.6980%" y="277" width="0.0403%" height="15" fill="rgb(217,125,39)" fg:x="22329950160" fg:w="191694983"/><text x="4.9480%" y="287.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (202,193,751 samples, 0.04%)</title><rect x="4.6976%" y="325" width="0.0425%" height="15" fill="rgb(235,36,10)" fg:x="22328102072" fg:w="202193751"/><text x="4.9476%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (200,345,663 samples, 0.04%)</title><rect x="4.6980%" y="309" width="0.0422%" height="15" fill="rgb(251,123,47)" fg:x="22329950160" fg:w="200345663"/><text x="4.9480%" y="319.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::{{closure}} (200,345,663 samples, 0.04%)</title><rect x="4.6980%" y="293" width="0.0422%" height="15" fill="rgb(221,13,13)" fg:x="22329950160" fg:w="200345663"/><text x="4.9480%" y="303.50"></text></g><g><title>&lt;QUEUE_TEST::LockingBinaryHeap&lt;E&gt; as QUEUE_TEST::ParallelPriorityQueue&lt;E&gt;&gt;::bulk_pop (225,968,921 samples, 0.05%)</title><rect x="4.6951%" y="341" width="0.0475%" height="15" fill="rgb(238,131,9)" fg:x="22316235023" fg:w="225968921"/><text x="4.9451%" y="351.50"></text></g><g><title>&lt;QUEUE_TEST::LockingBinaryHeap&lt;E&gt; as QUEUE_TEST::ParallelPriorityQueue&lt;E&gt;&gt;::bulk_process (238,525,737 samples, 0.05%)</title><rect x="4.6951%" y="357" width="0.0502%" height="15" fill="rgb(211,50,8)" fg:x="22316235023" fg:w="238525737"/><text x="4.9451%" y="367.50"></text></g><g><title>remove_migration_ptes (250,327,582 samples, 0.05%)</title><rect x="4.7868%" y="101" width="0.0527%" height="15" fill="rgb(245,182,24)" fg:x="22752117608" fg:w="250327582"/><text x="5.0368%" y="111.50"></text></g><g><title>rmap_walk (250,327,582 samples, 0.05%)</title><rect x="4.7868%" y="85" width="0.0527%" height="15" fill="rgb(242,14,37)" fg:x="22752117608" fg:w="250327582"/><text x="5.0368%" y="95.50"></text></g><g><title>rmap_walk_anon (213,360,351 samples, 0.04%)</title><rect x="4.7946%" y="69" width="0.0449%" height="15" fill="rgb(246,228,12)" fg:x="22789084839" fg:w="213360351"/><text x="5.0446%" y="79.50"></text></g><g><title>remove_migration_pte (157,889,944 samples, 0.03%)</title><rect x="4.8062%" y="53" width="0.0332%" height="15" fill="rgb(213,55,15)" fg:x="22844555246" fg:w="157889944"/><text x="5.0562%" y="63.50"></text></g><g><title>page_vma_mapped_walk (94,919,114 samples, 0.02%)</title><rect x="4.8195%" y="37" width="0.0200%" height="15" fill="rgb(209,9,3)" fg:x="22907526076" fg:w="94919114"/><text x="5.0695%" y="47.50"></text></g><g><title>page_vma_mapped_walk (133,437,511 samples, 0.03%)</title><rect x="4.8939%" y="37" width="0.0281%" height="15" fill="rgb(230,59,30)" fg:x="23261211867" fg:w="133437511"/><text x="5.1439%" y="47.50"></text></g><g><title>rmap_walk_anon (362,894,269 samples, 0.08%)</title><rect x="4.8530%" y="69" width="0.0763%" height="15" fill="rgb(209,121,21)" fg:x="23066836480" fg:w="362894269"/><text x="5.1030%" y="79.50"></text></g><g><title>try_to_unmap_one (315,254,012 samples, 0.07%)</title><rect x="4.8630%" y="53" width="0.0663%" height="15" fill="rgb(220,109,13)" fg:x="23114476737" fg:w="315254012"/><text x="5.1130%" y="63.50"></text></g><g><title>migrate_pages (782,921,690 samples, 0.16%)</title><rect x="4.7662%" y="117" width="0.1647%" height="15" fill="rgb(232,18,1)" fg:x="22654186356" fg:w="782921690"/><text x="5.0162%" y="127.50"></text></g><g><title>try_to_unmap (434,662,856 samples, 0.09%)</title><rect x="4.8395%" y="101" width="0.0914%" height="15" fill="rgb(215,41,42)" fg:x="23002445190" fg:w="434662856"/><text x="5.0895%" y="111.50"></text></g><g><title>rmap_walk (434,662,856 samples, 0.09%)</title><rect x="4.8395%" y="85" width="0.0914%" height="15" fill="rgb(224,123,36)" fg:x="23002445190" fg:w="434662856"/><text x="5.0895%" y="95.50"></text></g><g><title>migrate_misplaced_page (788,813,877 samples, 0.17%)</title><rect x="4.7662%" y="133" width="0.1660%" height="15" fill="rgb(240,125,3)" fg:x="22654186356" fg:w="788813877"/><text x="5.0162%" y="143.50"></text></g><g><title>page_fault (798,848,765 samples, 0.17%)</title><rect x="4.7646%" y="245" width="0.1681%" height="15" fill="rgb(205,98,50)" fg:x="22646596764" fg:w="798848765"/><text x="5.0146%" y="255.50"></text></g><g><title>do_page_fault (798,848,765 samples, 0.17%)</title><rect x="4.7646%" y="229" width="0.1681%" height="15" fill="rgb(205,185,37)" fg:x="22646596764" fg:w="798848765"/><text x="5.0146%" y="239.50"></text></g><g><title>__do_page_fault (798,848,765 samples, 0.17%)</title><rect x="4.7646%" y="213" width="0.1681%" height="15" fill="rgb(238,207,15)" fg:x="22646596764" fg:w="798848765"/><text x="5.0146%" y="223.50"></text></g><g><title>do_user_addr_fault (798,848,765 samples, 0.17%)</title><rect x="4.7646%" y="197" width="0.1681%" height="15" fill="rgb(213,199,42)" fg:x="22646596764" fg:w="798848765"/><text x="5.0146%" y="207.50"></text></g><g><title>handle_mm_fault (798,848,765 samples, 0.17%)</title><rect x="4.7646%" y="181" width="0.1681%" height="15" fill="rgb(235,201,11)" fg:x="22646596764" fg:w="798848765"/><text x="5.0146%" y="191.50"></text></g><g><title>__handle_mm_fault (798,848,765 samples, 0.17%)</title><rect x="4.7646%" y="165" width="0.1681%" height="15" fill="rgb(207,46,11)" fg:x="22646596764" fg:w="798848765"/><text x="5.0146%" y="175.50"></text></g><g><title>do_numa_page (793,782,414 samples, 0.17%)</title><rect x="4.7657%" y="149" width="0.1670%" height="15" fill="rgb(241,35,35)" fg:x="22651663115" fg:w="793782414"/><text x="5.0157%" y="159.50"></text></g><g><title>hashbrown::map::make_hash (895,832,142 samples, 0.19%)</title><rect x="4.7500%" y="293" width="0.1885%" height="15" fill="rgb(243,32,47)" fg:x="22577445183" fg:w="895832142"/><text x="5.0000%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (895,832,142 samples, 0.19%)</title><rect x="4.7500%" y="277" width="0.1885%" height="15" fill="rgb(247,202,23)" fg:x="22577445183" fg:w="895832142"/><text x="5.0000%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (863,538,172 samples, 0.18%)</title><rect x="4.7568%" y="261" width="0.1817%" height="15" fill="rgb(219,102,11)" fg:x="22609739153" fg:w="863538172"/><text x="5.0068%" y="271.50"></text></g><g><title>QUEUE_TEST::time_parallel (1,169,650,706 samples, 0.25%)</title><rect x="4.6951%" y="373" width="0.2461%" height="15" fill="rgb(243,110,44)" fg:x="22316235023" fg:w="1169650706"/><text x="4.9451%" y="383.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (908,440,546 samples, 0.19%)</title><rect x="4.7500%" y="357" width="0.1911%" height="15" fill="rgb(222,74,54)" fg:x="22577445183" fg:w="908440546"/><text x="5.0000%" y="367.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (908,440,546 samples, 0.19%)</title><rect x="4.7500%" y="341" width="0.1911%" height="15" fill="rgb(216,99,12)" fg:x="22577445183" fg:w="908440546"/><text x="5.0000%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (908,440,546 samples, 0.19%)</title><rect x="4.7500%" y="325" width="0.1911%" height="15" fill="rgb(226,22,26)" fg:x="22577445183" fg:w="908440546"/><text x="5.0000%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (908,440,546 samples, 0.19%)</title><rect x="4.7500%" y="309" width="0.1911%" height="15" fill="rgb(217,163,10)" fg:x="22577445183" fg:w="908440546"/><text x="5.0000%" y="319.50"></text></g><g><title>page_fault (68,238,985 samples, 0.01%)</title><rect x="4.9490%" y="341" width="0.0144%" height="15" fill="rgb(213,25,53)" fg:x="23523242429" fg:w="68238985"/><text x="5.1990%" y="351.50"></text></g><g><title>do_page_fault (68,238,985 samples, 0.01%)</title><rect x="4.9490%" y="325" width="0.0144%" height="15" fill="rgb(252,105,26)" fg:x="23523242429" fg:w="68238985"/><text x="5.1990%" y="335.50"></text></g><g><title>__do_page_fault (68,238,985 samples, 0.01%)</title><rect x="4.9490%" y="309" width="0.0144%" height="15" fill="rgb(220,39,43)" fg:x="23523242429" fg:w="68238985"/><text x="5.1990%" y="319.50"></text></g><g><title>do_user_addr_fault (68,238,985 samples, 0.01%)</title><rect x="4.9490%" y="293" width="0.0144%" height="15" fill="rgb(229,68,48)" fg:x="23523242429" fg:w="68238985"/><text x="5.1990%" y="303.50"></text></g><g><title>handle_mm_fault (65,228,770 samples, 0.01%)</title><rect x="4.9497%" y="277" width="0.0137%" height="15" fill="rgb(252,8,32)" fg:x="23526252644" fg:w="65228770"/><text x="5.1997%" y="287.50"></text></g><g><title>__handle_mm_fault (65,228,770 samples, 0.01%)</title><rect x="4.9497%" y="261" width="0.0137%" height="15" fill="rgb(223,20,43)" fg:x="23526252644" fg:w="65228770"/><text x="5.1997%" y="271.50"></text></g><g><title>do_anonymous_page (62,101,787 samples, 0.01%)</title><rect x="4.9503%" y="245" width="0.0131%" height="15" fill="rgb(229,81,49)" fg:x="23529379627" fg:w="62101787"/><text x="5.2003%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (102,479,278 samples, 0.02%)</title><rect x="4.9438%" y="373" width="0.0216%" height="15" fill="rgb(236,28,36)" fg:x="23498460898" fg:w="102479278"/><text x="5.1938%" y="383.50"></text></g><g><title>core::ptr::write (102,479,278 samples, 0.02%)</title><rect x="4.9438%" y="357" width="0.0216%" height="15" fill="rgb(249,185,26)" fg:x="23498460898" fg:w="102479278"/><text x="5.1938%" y="367.50"></text></g><g><title>QUEUE_TEST::main (1,376,568,043 samples, 0.29%)</title><rect x="4.6890%" y="389" width="0.2896%" height="15" fill="rgb(249,174,33)" fg:x="22287544855" fg:w="1376568043"/><text x="4.9390%" y="399.50"></text></g><g><title>__GI___sched_yield (457,958,288 samples, 0.10%)</title><rect x="4.9787%" y="373" width="0.0963%" height="15" fill="rgb(233,201,37)" fg:x="23664112898" fg:w="457958288"/><text x="5.2287%" y="383.50"></text></g><g><title>[[heap]] (480,447,861 samples, 0.10%)</title><rect x="4.9787%" y="389" width="0.1011%" height="15" fill="rgb(221,78,26)" fg:x="23664112898" fg:w="480447861"/><text x="5.2287%" y="399.50"></text></g><g><title>[anon] (289,779,059 samples, 0.06%)</title><rect x="5.0834%" y="389" width="0.0610%" height="15" fill="rgb(250,127,30)" fg:x="24162178970" fg:w="289779059"/><text x="5.3334%" y="399.50"></text></g><g><title>syscall (272,883,496 samples, 0.06%)</title><rect x="5.0870%" y="373" width="0.0574%" height="15" fill="rgb(230,49,44)" fg:x="24179074533" fg:w="272883496"/><text x="5.3370%" y="383.50"></text></g><g><title>entry_SYSCALL_64 (266,841,832 samples, 0.06%)</title><rect x="5.0883%" y="357" width="0.0561%" height="15" fill="rgb(229,67,23)" fg:x="24185116197" fg:w="266841832"/><text x="5.3383%" y="367.50"></text></g><g><title>[unknown] (207,493,838 samples, 0.04%)</title><rect x="5.1444%" y="389" width="0.0437%" height="15" fill="rgb(249,83,47)" fg:x="24451958029" fg:w="207493838"/><text x="5.3944%" y="399.50"></text></g><g><title>syscall (139,955,992 samples, 0.03%)</title><rect x="5.1586%" y="373" width="0.0294%" height="15" fill="rgb(215,43,3)" fg:x="24519495875" fg:w="139955992"/><text x="5.4086%" y="383.50"></text></g><g><title>__GI___libc_malloc (497,723,103 samples, 0.10%)</title><rect x="5.2216%" y="373" width="0.1047%" height="15" fill="rgb(238,154,13)" fg:x="24818797381" fg:w="497723103"/><text x="5.4716%" y="383.50"></text></g><g><title>_int_malloc (252,308,602 samples, 0.05%)</title><rect x="5.2732%" y="357" width="0.0531%" height="15" fill="rgb(219,56,2)" fg:x="25064211882" fg:w="252308602"/><text x="5.5232%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (599,257,580 samples, 0.13%)</title><rect x="5.2007%" y="389" width="0.1261%" height="15" fill="rgb(233,0,4)" fg:x="24719507125" fg:w="599257580"/><text x="5.4507%" y="399.50"></text></g><g><title>core::num::dec2flt::number::Number::try_fast_path (68,681,476 samples, 0.01%)</title><rect x="5.3709%" y="357" width="0.0144%" height="15" fill="rgb(235,30,7)" fg:x="25528333604" fg:w="68681476"/><text x="5.6209%" y="367.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (261,718,782 samples, 0.06%)</title><rect x="5.3309%" y="389" width="0.0551%" height="15" fill="rgb(250,79,13)" fg:x="25338226026" fg:w="261718782"/><text x="5.5809%" y="399.50"></text></g><g><title>core::num::dec2flt::dec2flt (192,026,348 samples, 0.04%)</title><rect x="5.3455%" y="373" width="0.0404%" height="15" fill="rgb(211,146,34)" fg:x="25407918460" fg:w="192026348"/><text x="5.5955%" y="383.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (173,737,393 samples, 0.04%)</title><rect x="5.3859%" y="389" width="0.0366%" height="15" fill="rgb(228,22,38)" fg:x="25599944808" fg:w="173737393"/><text x="5.6359%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::saturating_sub (114,768,622 samples, 0.02%)</title><rect x="5.5025%" y="357" width="0.0241%" height="15" fill="rgb(235,168,5)" fg:x="26154159447" fg:w="114768622"/><text x="5.7525%" y="367.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::parse_digits (252,261,614 samples, 0.05%)</title><rect x="5.5466%" y="341" width="0.0531%" height="15" fill="rgb(221,155,16)" fg:x="26363395589" fg:w="252261614"/><text x="5.7966%" y="351.50"></text></g><g><title>core::num::dec2flt::common::is_8digits (56,612,887 samples, 0.01%)</title><rect x="5.6100%" y="341" width="0.0119%" height="15" fill="rgb(215,215,53)" fg:x="26665124564" fg:w="56612887"/><text x="5.8600%" y="351.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (523,386,353 samples, 0.11%)</title><rect x="5.5267%" y="357" width="0.1101%" height="15" fill="rgb(223,4,10)" fg:x="26268928069" fg:w="523386353"/><text x="5.7767%" y="367.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (70,576,971 samples, 0.01%)</title><rect x="5.6219%" y="341" width="0.0148%" height="15" fill="rgb(234,103,6)" fg:x="26721737451" fg:w="70576971"/><text x="5.8719%" y="351.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (1,057,994,011 samples, 0.22%)</title><rect x="5.4225%" y="389" width="0.2226%" height="15" fill="rgb(227,97,0)" fg:x="25773682201" fg:w="1057994011"/><text x="5.6725%" y="399.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (925,241,850 samples, 0.19%)</title><rect x="5.4504%" y="373" width="0.1947%" height="15" fill="rgb(234,150,53)" fg:x="25906434362" fg:w="925241850"/><text x="5.7004%" y="383.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (144,927,739 samples, 0.03%)</title><rect x="5.6582%" y="341" width="0.0305%" height="15" fill="rgb(228,201,54)" fg:x="26894124712" fg:w="144927739"/><text x="5.9082%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (112,633,858 samples, 0.02%)</title><rect x="5.6650%" y="325" width="0.0237%" height="15" fill="rgb(222,22,37)" fg:x="26926418593" fg:w="112633858"/><text x="5.9150%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (68,733,427 samples, 0.01%)</title><rect x="5.6742%" y="309" width="0.0145%" height="15" fill="rgb(237,53,32)" fg:x="26970319024" fg:w="68733427"/><text x="5.9242%" y="319.50"></text></g><g><title>core::cmp::PartialOrd::le (68,733,427 samples, 0.01%)</title><rect x="5.6742%" y="293" width="0.0145%" height="15" fill="rgb(233,25,53)" fg:x="26970319024" fg:w="68733427"/><text x="5.9242%" y="303.50"></text></g><g><title>&lt;QUEUE_TEST::KeyVal as core::cmp::PartialOrd&gt;::partial_cmp (68,733,427 samples, 0.01%)</title><rect x="5.6742%" y="277" width="0.0145%" height="15" fill="rgb(210,40,34)" fg:x="26970319024" fg:w="68733427"/><text x="5.9242%" y="287.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (181,829,271 samples, 0.04%)</title><rect x="5.6553%" y="357" width="0.0383%" height="15" fill="rgb(241,220,44)" fg:x="26880031252" fg:w="181829271"/><text x="5.9053%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt;&gt; (179,279,947 samples, 0.04%)</title><rect x="5.6935%" y="357" width="0.0377%" height="15" fill="rgb(235,28,35)" fg:x="27061860523" fg:w="179279947"/><text x="5.9435%" y="367.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (179,279,947 samples, 0.04%)</title><rect x="5.6935%" y="341" width="0.0377%" height="15" fill="rgb(210,56,17)" fg:x="27061860523" fg:w="179279947"/><text x="5.9435%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (179,279,947 samples, 0.04%)</title><rect x="5.6935%" y="325" width="0.0377%" height="15" fill="rgb(224,130,29)" fg:x="27061860523" fg:w="179279947"/><text x="5.9435%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (170,726,163 samples, 0.04%)</title><rect x="5.6953%" y="309" width="0.0359%" height="15" fill="rgb(235,212,8)" fg:x="27070414307" fg:w="170726163"/><text x="5.9453%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_swap (170,726,163 samples, 0.04%)</title><rect x="5.6953%" y="293" width="0.0359%" height="15" fill="rgb(223,33,50)" fg:x="27070414307" fg:w="170726163"/><text x="5.9453%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (839,868,823 samples, 0.18%)</title><rect x="5.6451%" y="389" width="0.1767%" height="15" fill="rgb(219,149,13)" fg:x="26831676212" fg:w="839868823"/><text x="5.8951%" y="399.50"></text></g><g><title>&lt;QUEUE_TEST::LockingBinaryHeap&lt;E&gt; as QUEUE_TEST::ParallelPriorityQueue&lt;E&gt;&gt;::bulk_push::{{closure}} (791,513,783 samples, 0.17%)</title><rect x="5.6553%" y="373" width="0.1665%" height="15" fill="rgb(250,156,29)" fg:x="26880031252" fg:w="791513783"/><text x="5.9053%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (430,404,565 samples, 0.09%)</title><rect x="5.7312%" y="357" width="0.0906%" height="15" fill="rgb(216,193,19)" fg:x="27241140470" fg:w="430404565"/><text x="5.9812%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (406,279,649 samples, 0.09%)</title><rect x="5.7363%" y="341" width="0.0855%" height="15" fill="rgb(216,135,14)" fg:x="27265265386" fg:w="406279649"/><text x="5.9863%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (395,494,165 samples, 0.08%)</title><rect x="5.7386%" y="325" width="0.0832%" height="15" fill="rgb(241,47,5)" fg:x="27276050870" fg:w="395494165"/><text x="5.9886%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (395,494,165 samples, 0.08%)</title><rect x="5.7386%" y="309" width="0.0832%" height="15" fill="rgb(233,42,35)" fg:x="27276050870" fg:w="395494165"/><text x="5.9886%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (68,581,736 samples, 0.01%)</title><rect x="5.8467%" y="325" width="0.0144%" height="15" fill="rgb(231,13,6)" fg:x="27789916583" fg:w="68581736"/><text x="6.0967%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (55,559,953 samples, 0.01%)</title><rect x="5.8494%" y="309" width="0.0117%" height="15" fill="rgb(207,181,40)" fg:x="27802938366" fg:w="55559953"/><text x="6.0994%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (55,559,953 samples, 0.01%)</title><rect x="5.8494%" y="293" width="0.0117%" height="15" fill="rgb(254,173,49)" fg:x="27802938366" fg:w="55559953"/><text x="6.0994%" y="303.50"></text></g><g><title>handle_mm_fault (47,734,655 samples, 0.01%)</title><rect x="6.4136%" y="213" width="0.0100%" height="15" fill="rgb(221,1,38)" fg:x="30484615133" fg:w="47734655"/><text x="6.6636%" y="223.50"></text></g><g><title>__handle_mm_fault (47,734,655 samples, 0.01%)</title><rect x="6.4136%" y="197" width="0.0100%" height="15" fill="rgb(206,124,46)" fg:x="30484615133" fg:w="47734655"/><text x="6.6636%" y="207.50"></text></g><g><title>page_fault (50,128,794 samples, 0.01%)</title><rect x="6.4136%" y="277" width="0.0105%" height="15" fill="rgb(249,21,11)" fg:x="30484615133" fg:w="50128794"/><text x="6.6636%" y="287.50"></text></g><g><title>do_page_fault (50,128,794 samples, 0.01%)</title><rect x="6.4136%" y="261" width="0.0105%" height="15" fill="rgb(222,201,40)" fg:x="30484615133" fg:w="50128794"/><text x="6.6636%" y="271.50"></text></g><g><title>__do_page_fault (50,128,794 samples, 0.01%)</title><rect x="6.4136%" y="245" width="0.0105%" height="15" fill="rgb(235,61,29)" fg:x="30484615133" fg:w="50128794"/><text x="6.6636%" y="255.50"></text></g><g><title>do_user_addr_fault (50,128,794 samples, 0.01%)</title><rect x="6.4136%" y="229" width="0.0105%" height="15" fill="rgb(219,207,3)" fg:x="30484615133" fg:w="50128794"/><text x="6.6636%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,747,595,666 samples, 0.58%)</title><rect x="5.8467%" y="341" width="0.5781%" height="15" fill="rgb(222,56,46)" fg:x="27789916583" fg:w="2747595666"/><text x="6.0967%" y="351.50"></text></g><g><title>QUEUE_TEST::time_parallel::{{closure}}::{{closure}} (2,679,013,930 samples, 0.56%)</title><rect x="5.8611%" y="325" width="0.5636%" height="15" fill="rgb(239,76,54)" fg:x="27858498319" fg:w="2679013930"/><text x="6.1111%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2,679,013,930 samples, 0.56%)</title><rect x="5.8611%" y="309" width="0.5636%" height="15" fill="rgb(231,124,27)" fg:x="27858498319" fg:w="2679013930"/><text x="6.1111%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (64,316,112 samples, 0.01%)</title><rect x="6.4112%" y="293" width="0.0135%" height="15" fill="rgb(249,195,6)" fg:x="30473196137" fg:w="64316112"/><text x="6.6612%" y="303.50"></text></g><g><title>QUEUE_TEST::csvreader::Rec::p1 (59,030,266 samples, 0.01%)</title><rect x="6.4247%" y="341" width="0.0124%" height="15" fill="rgb(237,174,47)" fg:x="30537512249" fg:w="59030266"/><text x="6.6747%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,937,582,278 samples, 0.62%)</title><rect x="5.8218%" y="389" width="0.6180%" height="15" fill="rgb(206,201,31)" fg:x="27671545035" fg:w="2937582278"/><text x="6.0718%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,918,540,674 samples, 0.61%)</title><rect x="5.8258%" y="373" width="0.6140%" height="15" fill="rgb(231,57,52)" fg:x="27690586639" fg:w="2918540674"/><text x="6.0758%" y="383.50"></text></g><g><title>QUEUE_TEST::time_parallel::{{closure}} (2,910,569,190 samples, 0.61%)</title><rect x="5.8275%" y="357" width="0.6124%" height="15" fill="rgb(248,177,22)" fg:x="27698558123" fg:w="2910569190"/><text x="6.0775%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (58,405,095 samples, 0.01%)</title><rect x="6.6801%" y="373" width="0.0123%" height="15" fill="rgb(215,211,37)" fg:x="31751110243" fg:w="58405095"/><text x="6.9301%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (58,405,095 samples, 0.01%)</title><rect x="6.6801%" y="357" width="0.0123%" height="15" fill="rgb(241,128,51)" fg:x="31751110243" fg:w="58405095"/><text x="6.9301%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (53,427,859 samples, 0.01%)</title><rect x="6.6924%" y="373" width="0.0112%" height="15" fill="rgb(227,165,31)" fg:x="31809515338" fg:w="53427859"/><text x="6.9424%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (53,427,859 samples, 0.01%)</title><rect x="6.6924%" y="357" width="0.0112%" height="15" fill="rgb(228,167,24)" fg:x="31809515338" fg:w="53427859"/><text x="6.9424%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (553,128,249 samples, 0.12%)</title><rect x="6.7046%" y="373" width="0.1164%" height="15" fill="rgb(228,143,12)" fg:x="31867815081" fg:w="553128249"/><text x="6.9546%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (553,128,249 samples, 0.12%)</title><rect x="6.7046%" y="357" width="0.1164%" height="15" fill="rgb(249,149,8)" fg:x="31867815081" fg:w="553128249"/><text x="6.9546%" y="367.50"></text></g><g><title>core::sync::atomic::fence (865,235,648 samples, 0.18%)</title><rect x="6.8210%" y="373" width="0.1820%" height="15" fill="rgb(243,35,44)" fg:x="32420943330" fg:w="865235648"/><text x="7.0710%" y="383.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (2,656,129,647 samples, 0.56%)</title><rect x="6.4466%" y="389" width="0.5588%" height="15" fill="rgb(246,89,9)" fg:x="30641506860" fg:w="2656129647"/><text x="6.6966%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14,413,615,348 samples, 3.03%)</title><rect x="10.4529%" y="373" width="3.0325%" height="15" fill="rgb(233,213,13)" fg:x="49683770098" fg:w="14413615348"/><text x="10.7029%" y="383.50">&lt;al..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (14,413,615,348 samples, 3.03%)</title><rect x="10.4529%" y="357" width="3.0325%" height="15" fill="rgb(233,141,41)" fg:x="49683770098" fg:w="14413615348"/><text x="10.7029%" y="367.50">all..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (14,413,615,348 samples, 3.03%)</title><rect x="10.4529%" y="341" width="3.0325%" height="15" fill="rgb(239,167,4)" fg:x="49683770098" fg:w="14413615348"/><text x="10.7029%" y="351.50">cor..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (448,802,106 samples, 0.09%)</title><rect x="15.5421%" y="325" width="0.0944%" height="15" fill="rgb(209,217,16)" fg:x="73873104512" fg:w="448802106"/><text x="15.7921%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (254,185,122 samples, 0.05%)</title><rect x="15.6365%" y="325" width="0.0535%" height="15" fill="rgb(219,88,35)" fg:x="74321906618" fg:w="254185122"/><text x="15.8865%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (254,185,122 samples, 0.05%)</title><rect x="15.6365%" y="309" width="0.0535%" height="15" fill="rgb(220,193,23)" fg:x="74321906618" fg:w="254185122"/><text x="15.8865%" y="319.50"></text></g><g><title>core::mem::replace (254,185,122 samples, 0.05%)</title><rect x="15.6365%" y="293" width="0.0535%" height="15" fill="rgb(230,90,52)" fg:x="74321906618" fg:w="254185122"/><text x="15.8865%" y="303.50"></text></g><g><title>core::ptr::write (254,185,122 samples, 0.05%)</title><rect x="15.6365%" y="277" width="0.0535%" height="15" fill="rgb(252,106,19)" fg:x="74321906618" fg:w="254185122"/><text x="15.8865%" y="287.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (394,209,141 samples, 0.08%)</title><rect x="15.6900%" y="325" width="0.0829%" height="15" fill="rgb(206,74,20)" fg:x="74576091740" fg:w="394209141"/><text x="15.9400%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (394,209,141 samples, 0.08%)</title><rect x="15.6900%" y="309" width="0.0829%" height="15" fill="rgb(230,138,44)" fg:x="74576091740" fg:w="394209141"/><text x="15.9400%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_store (394,209,141 samples, 0.08%)</title><rect x="15.6900%" y="293" width="0.0829%" height="15" fill="rgb(235,182,43)" fg:x="74576091740" fg:w="394209141"/><text x="15.9400%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (10,836,695,098 samples, 2.28%)</title><rect x="13.4940%" y="373" width="2.2799%" height="15" fill="rgb(242,16,51)" fg:x="64138615955" fg:w="10836695098"/><text x="13.7440%" y="383.50">c..</text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (10,836,695,098 samples, 2.28%)</title><rect x="13.4940%" y="357" width="2.2799%" height="15" fill="rgb(248,9,4)" fg:x="64138615955" fg:w="10836695098"/><text x="13.7440%" y="367.50">&lt;..</text></g><g><title>crossbeam_epoch::internal::Local::unpin (10,821,996,618 samples, 2.28%)</title><rect x="13.4971%" y="341" width="2.2768%" height="15" fill="rgb(210,31,22)" fg:x="64153314435" fg:w="10821996618"/><text x="13.7471%" y="351.50">c..</text></g><g><title>core::sync::atomic::AtomicIsize::compare_exchange (1,644,506,776 samples, 0.35%)</title><rect x="15.7788%" y="373" width="0.3460%" height="15" fill="rgb(239,54,39)" fg:x="74998550933" fg:w="1644506776"/><text x="16.0288%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,644,506,776 samples, 0.35%)</title><rect x="15.7788%" y="357" width="0.3460%" height="15" fill="rgb(230,99,41)" fg:x="74998550933" fg:w="1644506776"/><text x="16.0288%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (5,514,762,229 samples, 1.16%)</title><rect x="16.1248%" y="373" width="1.1602%" height="15" fill="rgb(253,106,12)" fg:x="76643057709" fg:w="5514762229"/><text x="16.3748%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (5,514,762,229 samples, 1.16%)</title><rect x="16.1248%" y="357" width="1.1602%" height="15" fill="rgb(213,46,41)" fg:x="76643057709" fg:w="5514762229"/><text x="16.3748%" y="367.50"></text></g><g><title>core::ptr::read_volatile (225,571,820 samples, 0.05%)</title><rect x="17.2851%" y="357" width="0.0475%" height="15" fill="rgb(215,133,35)" fg:x="82157819938" fg:w="225571820"/><text x="17.5351%" y="367.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (307,470,372 samples, 0.06%)</title><rect x="17.2851%" y="373" width="0.0647%" height="15" fill="rgb(213,28,5)" fg:x="82157819938" fg:w="307470372"/><text x="17.5351%" y="383.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (81,898,552 samples, 0.02%)</title><rect x="17.3325%" y="357" width="0.0172%" height="15" fill="rgb(215,77,49)" fg:x="82383391758" fg:w="81898552"/><text x="17.5825%" y="367.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (48,028,933 samples, 0.01%)</title><rect x="17.3498%" y="373" width="0.0101%" height="15" fill="rgb(248,100,22)" fg:x="82465290310" fg:w="48028933"/><text x="17.5998%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48,028,933 samples, 0.01%)</title><rect x="17.3498%" y="357" width="0.0101%" height="15" fill="rgb(208,67,9)" fg:x="82465290310" fg:w="48028933"/><text x="17.5998%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (48,028,933 samples, 0.01%)</title><rect x="17.3498%" y="341" width="0.0101%" height="15" fill="rgb(219,133,21)" fg:x="82465290310" fg:w="48028933"/><text x="17.5998%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,887,988,779 samples, 2.29%)</title><rect x="17.3747%" y="341" width="2.2907%" height="15" fill="rgb(246,46,29)" fg:x="82583785301" fg:w="10887988779"/><text x="17.6247%" y="351.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (5,229,887,833 samples, 1.10%)</title><rect x="18.5651%" y="325" width="1.1003%" height="15" fill="rgb(246,185,52)" fg:x="88241886247" fg:w="5229887833"/><text x="18.8151%" y="335.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (5,229,887,833 samples, 1.10%)</title><rect x="18.5651%" y="309" width="1.1003%" height="15" fill="rgb(252,136,11)" fg:x="88241886247" fg:w="5229887833"/><text x="18.8151%" y="319.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (5,229,887,833 samples, 1.10%)</title><rect x="18.5651%" y="293" width="1.1003%" height="15" fill="rgb(219,138,53)" fg:x="88241886247" fg:w="5229887833"/><text x="18.8151%" y="303.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (10,958,752,189 samples, 2.31%)</title><rect x="17.3599%" y="373" width="2.3056%" height="15" fill="rgb(211,51,23)" fg:x="82513319243" fg:w="10958752189"/><text x="17.6099%" y="383.50">c..</text></g><g><title>crossbeam_epoch::default::with_handle (10,958,752,189 samples, 2.31%)</title><rect x="17.3599%" y="357" width="2.3056%" height="15" fill="rgb(247,221,28)" fg:x="82513319243" fg:w="10958752189"/><text x="17.6099%" y="367.50">c..</text></g><g><title>crossbeam_epoch::default::pin (9,305,443,335 samples, 1.96%)</title><rect x="19.6655%" y="373" width="1.9578%" height="15" fill="rgb(251,222,45)" fg:x="93472071432" fg:w="9305443335"/><text x="19.9155%" y="383.50">c..</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (69,517,657,575 samples, 14.63%)</title><rect x="7.0054%" y="389" width="14.6257%" height="15" fill="rgb(217,162,53)" fg:x="33297636507" fg:w="69517657575"/><text x="7.2554%" y="399.50">crossbeam_deque::deque..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (228,803,744 samples, 0.05%)</title><rect x="21.6576%" y="373" width="0.0481%" height="15" fill="rgb(229,93,14)" fg:x="102940801795" fg:w="228803744"/><text x="21.9076%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (228,803,744 samples, 0.05%)</title><rect x="21.6576%" y="357" width="0.0481%" height="15" fill="rgb(209,67,49)" fg:x="102940801795" fg:w="228803744"/><text x="21.9076%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (228,803,744 samples, 0.05%)</title><rect x="21.6576%" y="341" width="0.0481%" height="15" fill="rgb(213,87,29)" fg:x="102940801795" fg:w="228803744"/><text x="21.9076%" y="351.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (110,206,010 samples, 0.02%)</title><rect x="21.7057%" y="373" width="0.0232%" height="15" fill="rgb(205,151,52)" fg:x="103169605539" fg:w="110206010"/><text x="21.9557%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicIsize::compare_exchange (50,667,615 samples, 0.01%)</title><rect x="21.7289%" y="373" width="0.0107%" height="15" fill="rgb(253,215,39)" fg:x="103279811549" fg:w="50667615"/><text x="21.9789%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50,667,615 samples, 0.01%)</title><rect x="21.7289%" y="357" width="0.0107%" height="15" fill="rgb(221,220,41)" fg:x="103279811549" fg:w="50667615"/><text x="21.9789%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (540,659,256 samples, 0.11%)</title><rect x="21.7396%" y="373" width="0.1137%" height="15" fill="rgb(218,133,21)" fg:x="103330479164" fg:w="540659256"/><text x="21.9896%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (540,659,256 samples, 0.11%)</title><rect x="21.7396%" y="357" width="0.1137%" height="15" fill="rgb(221,193,43)" fg:x="103330479164" fg:w="540659256"/><text x="21.9896%" y="367.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (1,090,633,078 samples, 0.23%)</title><rect x="21.6312%" y="389" width="0.2295%" height="15" fill="rgb(240,128,52)" fg:x="102815294082" fg:w="1090633078"/><text x="21.8812%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,427,248,667 samples, 0.93%)</title><rect x="23.6476%" y="357" width="0.9314%" height="15" fill="rgb(253,114,12)" fg:x="112399500618" fg:w="4427248667"/><text x="23.8976%" y="367.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (4,427,248,667 samples, 0.93%)</title><rect x="23.6476%" y="341" width="0.9314%" height="15" fill="rgb(215,223,47)" fg:x="112399500618" fg:w="4427248667"/><text x="23.8976%" y="351.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (4,427,248,667 samples, 0.93%)</title><rect x="23.6476%" y="325" width="0.9314%" height="15" fill="rgb(248,225,23)" fg:x="112399500618" fg:w="4427248667"/><text x="23.8976%" y="335.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;usize&gt; as core::ops::arith::Add&gt;::add (543,592,993 samples, 0.11%)</title><rect x="25.2860%" y="293" width="0.1144%" height="15" fill="rgb(250,108,0)" fg:x="120187190265" fg:w="543592993"/><text x="25.5360%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (543,592,993 samples, 0.11%)</title><rect x="25.2860%" y="277" width="0.1144%" height="15" fill="rgb(228,208,7)" fg:x="120187190265" fg:w="543592993"/><text x="25.5360%" y="287.50"></text></g><g><title>__hrtimer_run_queues (69,829,342 samples, 0.01%)</title><rect x="27.3067%" y="229" width="0.0147%" height="15" fill="rgb(244,45,10)" fg:x="129791607635" fg:w="69829342"/><text x="27.5567%" y="239.50"></text></g><g><title>hrtimer_interrupt (76,856,464 samples, 0.02%)</title><rect x="27.3061%" y="245" width="0.0162%" height="15" fill="rgb(207,125,25)" fg:x="129789020637" fg:w="76856464"/><text x="27.5561%" y="255.50"></text></g><g><title>apic_timer_interrupt (117,734,139 samples, 0.02%)</title><rect x="27.3061%" y="277" width="0.0248%" height="15" fill="rgb(210,195,18)" fg:x="129789020637" fg:w="117734139"/><text x="27.5561%" y="287.50"></text></g><g><title>smp_apic_timer_interrupt (117,734,139 samples, 0.02%)</title><rect x="27.3061%" y="261" width="0.0248%" height="15" fill="rgb(249,80,12)" fg:x="129789020637" fg:w="117734139"/><text x="27.5561%" y="271.50"></text></g><g><title>enqueue_task_fair (64,567,280 samples, 0.01%)</title><rect x="27.3387%" y="181" width="0.0136%" height="15" fill="rgb(221,65,9)" fg:x="129943754970" fg:w="64567280"/><text x="27.5887%" y="191.50"></text></g><g><title>activate_task (93,246,388 samples, 0.02%)</title><rect x="27.3387%" y="197" width="0.0196%" height="15" fill="rgb(235,49,36)" fg:x="129943754970" fg:w="93246388"/><text x="27.5887%" y="207.50"></text></g><g><title>ttwu_do_activate (106,493,189 samples, 0.02%)</title><rect x="27.3387%" y="213" width="0.0224%" height="15" fill="rgb(225,32,20)" fg:x="129943754970" fg:w="106493189"/><text x="27.5887%" y="223.50"></text></g><g><title>reschedule_interrupt (142,731,128 samples, 0.03%)</title><rect x="27.3329%" y="277" width="0.0300%" height="15" fill="rgb(215,141,46)" fg:x="129916213537" fg:w="142731128"/><text x="27.5829%" y="287.50"></text></g><g><title>smp_reschedule_interrupt (138,525,465 samples, 0.03%)</title><rect x="27.3338%" y="261" width="0.0291%" height="15" fill="rgb(250,160,47)" fg:x="129920419200" fg:w="138525465"/><text x="27.5838%" y="271.50"></text></g><g><title>scheduler_ipi (138,525,465 samples, 0.03%)</title><rect x="27.3338%" y="245" width="0.0291%" height="15" fill="rgb(216,222,40)" fg:x="129920419200" fg:w="138525465"/><text x="27.5838%" y="255.50"></text></g><g><title>sched_ttwu_pending (129,439,338 samples, 0.03%)</title><rect x="27.3357%" y="229" width="0.0272%" height="15" fill="rgb(234,217,39)" fg:x="129929505327" fg:w="129439338"/><text x="27.5857%" y="239.50"></text></g><g><title>prepare_exit_to_usermode (51,601,168 samples, 0.01%)</title><rect x="27.3650%" y="261" width="0.0109%" height="15" fill="rgb(207,178,40)" fg:x="130069065219" fg:w="51601168"/><text x="27.6150%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (9,392,217,329 samples, 1.98%)</title><rect x="25.4004%" y="293" width="1.9760%" height="15" fill="rgb(221,136,13)" fg:x="120730783258" fg:w="9392217329"/><text x="25.6504%" y="303.50">c..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (61,496,457 samples, 0.01%)</title><rect x="27.3635%" y="277" width="0.0129%" height="15" fill="rgb(249,199,10)" fg:x="130061504130" fg:w="61496457"/><text x="27.6135%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (893,584,067 samples, 0.19%)</title><rect x="27.3764%" y="293" width="0.1880%" height="15" fill="rgb(249,222,13)" fg:x="130123000587" fg:w="893584067"/><text x="27.6264%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (893,584,067 samples, 0.19%)</title><rect x="27.3764%" y="277" width="0.1880%" height="15" fill="rgb(244,185,38)" fg:x="130123000587" fg:w="893584067"/><text x="27.6264%" y="287.50"></text></g><g><title>core::mem::replace (893,584,067 samples, 0.19%)</title><rect x="27.3764%" y="261" width="0.1880%" height="15" fill="rgb(236,202,9)" fg:x="130123000587" fg:w="893584067"/><text x="27.6264%" y="271.50"></text></g><g><title>core::ptr::write (893,584,067 samples, 0.19%)</title><rect x="27.3764%" y="245" width="0.1880%" height="15" fill="rgb(250,229,37)" fg:x="130123000587" fg:w="893584067"/><text x="27.6264%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (298,854,307 samples, 0.06%)</title><rect x="27.5644%" y="293" width="0.0629%" height="15" fill="rgb(206,174,23)" fg:x="131016584654" fg:w="298854307"/><text x="27.8144%" y="303.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (69,103,763,248 samples, 14.54%)</title><rect x="27.6273%" y="293" width="14.5386%" height="15" fill="rgb(211,33,43)" fg:x="131315438961" fg:w="69103763248"/><text x="27.8773%" y="303.50">crossbeam_epoch::epoch..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (69,103,763,248 samples, 14.54%)</title><rect x="27.6273%" y="277" width="14.5386%" height="15" fill="rgb(245,58,50)" fg:x="131315438961" fg:w="69103763248"/><text x="27.8773%" y="287.50">core::sync::atomic::At..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (69,103,763,248 samples, 14.54%)</title><rect x="27.6273%" y="261" width="14.5386%" height="15" fill="rgb(244,68,36)" fg:x="131315438961" fg:w="69103763248"/><text x="27.8773%" y="271.50">core::sync::atomic::at..</text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (23,280,144,041 samples, 4.90%)</title><rect x="42.1659%" y="293" width="4.8979%" height="15" fill="rgb(232,229,15)" fg:x="200419202209" fg:w="23280144041"/><text x="42.4159%" y="303.50">crossb..</text></g><g><title>core::sync::atomic::AtomicUsize::load (23,280,144,041 samples, 4.90%)</title><rect x="42.1659%" y="277" width="4.8979%" height="15" fill="rgb(254,30,23)" fg:x="200419202209" fg:w="23280144041"/><text x="42.4159%" y="287.50">core::..</text></g><g><title>core::sync::atomic::atomic_load (23,280,144,041 samples, 4.90%)</title><rect x="42.1659%" y="261" width="4.8979%" height="15" fill="rgb(235,160,14)" fg:x="200419202209" fg:w="23280144041"/><text x="42.4159%" y="271.50">core::..</text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (1,755,334,958 samples, 0.37%)</title><rect x="47.0638%" y="293" width="0.3693%" height="15" fill="rgb(212,155,44)" fg:x="223699346250" fg:w="1755334958"/><text x="47.3138%" y="303.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (285,448,035 samples, 0.06%)</title><rect x="47.4331%" y="293" width="0.0601%" height="15" fill="rgb(226,2,50)" fg:x="225454681208" fg:w="285448035"/><text x="47.6831%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (285,448,035 samples, 0.06%)</title><rect x="47.4331%" y="277" width="0.0601%" height="15" fill="rgb(234,177,6)" fg:x="225454681208" fg:w="285448035"/><text x="47.6831%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (285,448,035 samples, 0.06%)</title><rect x="47.4331%" y="261" width="0.0601%" height="15" fill="rgb(217,24,9)" fg:x="225454681208" fg:w="285448035"/><text x="47.6831%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (285,448,035 samples, 0.06%)</title><rect x="47.4331%" y="245" width="0.0601%" height="15" fill="rgb(220,13,46)" fg:x="225454681208" fg:w="285448035"/><text x="47.6831%" y="255.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (108,922,526,063 samples, 22.92%)</title><rect x="24.5790%" y="357" width="22.9161%" height="15" fill="rgb(239,221,27)" fg:x="116826749285" fg:w="108922526063"/><text x="24.8290%" y="367.50">crossbeam_epoch::default::with_handl..</text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (108,922,526,063 samples, 22.92%)</title><rect x="24.5790%" y="341" width="22.9161%" height="15" fill="rgb(222,198,25)" fg:x="116826749285" fg:w="108922526063"/><text x="24.8290%" y="351.50">crossbeam_epoch::default::pin::{{clo..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (108,922,526,063 samples, 22.92%)</title><rect x="24.5790%" y="325" width="22.9161%" height="15" fill="rgb(211,99,13)" fg:x="116826749285" fg:w="108922526063"/><text x="24.8290%" y="335.50">crossbeam_epoch::collector::LocalHan..</text></g><g><title>crossbeam_epoch::internal::Local::pin (108,922,526,063 samples, 22.92%)</title><rect x="24.5790%" y="309" width="22.9161%" height="15" fill="rgb(232,111,31)" fg:x="116826749285" fg:w="108922526063"/><text x="24.8290%" y="319.50">crossbeam_epoch::internal::Local::pin</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (113,575,110,081 samples, 23.89%)</title><rect x="23.6007%" y="373" width="23.8949%" height="15" fill="rgb(245,82,37)" fg:x="112176749052" fg:w="113575110081"/><text x="23.8507%" y="383.50">std::thread::local::LocalKey&lt;T&gt;::try_w..</text></g><g><title>crossbeam_epoch::default::with_handle (121,848,072,677 samples, 25.64%)</title><rect x="21.8606%" y="389" width="25.6354%" height="15" fill="rgb(227,149,46)" fg:x="103905927160" fg:w="121848072677"/><text x="22.1106%" y="399.50">crossbeam_epoch::default::with_handle</text></g><g><title>crossbeam_epoch::internal::Global::collect (472,522,231 samples, 0.10%)</title><rect x="47.4961%" y="389" width="0.0994%" height="15" fill="rgb(218,36,50)" fg:x="225753999837" fg:w="472522231"/><text x="47.7461%" y="399.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (16,700,613,330 samples, 3.51%)</title><rect x="48.4779%" y="357" width="3.5136%" height="15" fill="rgb(226,80,48)" fg:x="230420635600" fg:w="16700613330"/><text x="48.7279%" y="367.50">cro..</text></g><g><title>core::sync::atomic::AtomicUsize::load (16,700,613,330 samples, 3.51%)</title><rect x="48.4779%" y="341" width="3.5136%" height="15" fill="rgb(238,224,15)" fg:x="230420635600" fg:w="16700613330"/><text x="48.7279%" y="351.50">cor..</text></g><g><title>core::sync::atomic::atomic_load (16,700,613,330 samples, 3.51%)</title><rect x="48.4779%" y="325" width="3.5136%" height="15" fill="rgb(241,136,10)" fg:x="230420635600" fg:w="16700613330"/><text x="48.7279%" y="335.50">cor..</text></g><g><title>activate_task (56,978,934 samples, 0.01%)</title><rect x="52.2229%" y="245" width="0.0120%" height="15" fill="rgb(208,32,45)" fg:x="248221425818" fg:w="56978934"/><text x="52.4729%" y="255.50"></text></g><g><title>ttwu_do_activate (60,859,548 samples, 0.01%)</title><rect x="52.2229%" y="261" width="0.0128%" height="15" fill="rgb(207,135,9)" fg:x="248221425818" fg:w="60859548"/><text x="52.4729%" y="271.50"></text></g><g><title>reschedule_interrupt (69,963,311 samples, 0.01%)</title><rect x="52.2214%" y="325" width="0.0147%" height="15" fill="rgb(206,86,44)" fg:x="248214149813" fg:w="69963311"/><text x="52.4714%" y="335.50"></text></g><g><title>smp_reschedule_interrupt (69,963,311 samples, 0.01%)</title><rect x="52.2214%" y="309" width="0.0147%" height="15" fill="rgb(245,177,15)" fg:x="248214149813" fg:w="69963311"/><text x="52.4714%" y="319.50"></text></g><g><title>scheduler_ipi (69,963,311 samples, 0.01%)</title><rect x="52.2214%" y="293" width="0.0147%" height="15" fill="rgb(206,64,50)" fg:x="248214149813" fg:w="69963311"/><text x="52.4714%" y="303.50"></text></g><g><title>sched_ttwu_pending (69,963,311 samples, 0.01%)</title><rect x="52.2214%" y="277" width="0.0147%" height="15" fill="rgb(234,36,40)" fg:x="248214149813" fg:w="69963311"/><text x="52.4714%" y="287.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,471,234,274 samples, 4.10%)</title><rect x="48.1432%" y="373" width="4.0965%" height="15" fill="rgb(213,64,8)" fg:x="228829901613" fg:w="19471234274"/><text x="48.3932%" y="383.50">&lt;cro..</text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (1,179,886,957 samples, 0.25%)</title><rect x="51.9915%" y="357" width="0.2482%" height="15" fill="rgb(210,75,36)" fg:x="247121248930" fg:w="1179886957"/><text x="52.2415%" y="367.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (1,179,886,957 samples, 0.25%)</title><rect x="51.9915%" y="341" width="0.2482%" height="15" fill="rgb(229,88,21)" fg:x="247121248930" fg:w="1179886957"/><text x="52.2415%" y="351.50"></text></g><g><title>core::sync::atomic::fence (460,416,671 samples, 0.10%)</title><rect x="52.2421%" y="373" width="0.0969%" height="15" fill="rgb(252,204,47)" fg:x="248312659306" fg:w="460416671"/><text x="52.4921%" y="383.50"></text></g><g><title>apic_timer_interrupt (69,548,279 samples, 0.01%)</title><rect x="60.8765%" y="325" width="0.0146%" height="15" fill="rgb(208,77,27)" fg:x="289352926762" fg:w="69548279"/><text x="61.1265%" y="335.50"></text></g><g><title>smp_apic_timer_interrupt (66,948,866 samples, 0.01%)</title><rect x="60.8771%" y="309" width="0.0141%" height="15" fill="rgb(221,76,26)" fg:x="289355526175" fg:w="66948866"/><text x="61.1271%" y="319.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (40,730,671,832 samples, 8.57%)</title><rect x="52.3390%" y="373" width="8.5693%" height="15" fill="rgb(225,139,18)" fg:x="248773075977" fg:w="40730671832"/><text x="52.5890%" y="383.50">crossbeam_ep..</text></g><g><title>core::sync::atomic::AtomicUsize::load (40,730,671,832 samples, 8.57%)</title><rect x="52.3390%" y="357" width="8.5693%" height="15" fill="rgb(230,137,11)" fg:x="248773075977" fg:w="40730671832"/><text x="52.5890%" y="367.50">core::sync::..</text></g><g><title>core::sync::atomic::atomic_load (40,730,671,832 samples, 8.57%)</title><rect x="52.3390%" y="341" width="8.5693%" height="15" fill="rgb(212,28,1)" fg:x="248773075977" fg:w="40730671832"/><text x="52.5890%" y="351.50">core::sync::..</text></g><g><title>crossbeam_epoch::sync::list::List&lt;T,C&gt;::iter (133,699,499 samples, 0.03%)</title><rect x="60.9199%" y="373" width="0.0281%" height="15" fill="rgb(248,164,17)" fg:x="289559209621" fg:w="133699499"/><text x="61.1699%" y="383.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (133,699,499 samples, 0.03%)</title><rect x="60.9199%" y="357" width="0.0281%" height="15" fill="rgb(222,171,42)" fg:x="289559209621" fg:w="133699499"/><text x="61.1699%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (133,699,499 samples, 0.03%)</title><rect x="60.9199%" y="341" width="0.0281%" height="15" fill="rgb(243,84,45)" fg:x="289559209621" fg:w="133699499"/><text x="61.1699%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (133,699,499 samples, 0.03%)</title><rect x="60.9199%" y="325" width="0.0281%" height="15" fill="rgb(252,49,23)" fg:x="289559209621" fg:w="133699499"/><text x="61.1699%" y="335.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (63,483,239,391 samples, 13.36%)</title><rect x="47.5955%" y="389" width="13.3561%" height="15" fill="rgb(215,19,7)" fg:x="226226522068" fg:w="63483239391"/><text x="47.8455%" y="399.50">crossbeam_epoch::int..</text></g><g><title>__memmove_avx_unaligned_erms (6,364,283,915 samples, 1.34%)</title><rect x="61.0211%" y="373" width="1.3390%" height="15" fill="rgb(238,81,41)" fg:x="290039862110" fg:w="6364283915"/><text x="61.2711%" y="383.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (400,762,725 samples, 0.08%)</title><rect x="62.3700%" y="357" width="0.0843%" height="15" fill="rgb(210,199,37)" fg:x="296451555662" fg:w="400762725"/><text x="62.6200%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (400,762,725 samples, 0.08%)</title><rect x="62.3700%" y="341" width="0.0843%" height="15" fill="rgb(244,192,49)" fg:x="296451555662" fg:w="400762725"/><text x="62.6200%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (400,762,725 samples, 0.08%)</title><rect x="62.3700%" y="325" width="0.0843%" height="15" fill="rgb(226,211,11)" fg:x="296451555662" fg:w="400762725"/><text x="62.6200%" y="335.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::pop_if_internal (467,580,666 samples, 0.10%)</title><rect x="62.3600%" y="373" width="0.0984%" height="15" fill="rgb(236,162,54)" fg:x="296404146025" fg:w="467580666"/><text x="62.6100%" y="383.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (7,169,548,667 samples, 1.51%)</title><rect x="60.9516%" y="389" width="1.5084%" height="15" fill="rgb(220,229,9)" fg:x="289709761459" fg:w="7169548667"/><text x="61.2016%" y="399.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (75,218,778 samples, 0.02%)</title><rect x="62.4606%" y="373" width="0.0158%" height="15" fill="rgb(250,87,22)" fg:x="296882194121" fg:w="75218778"/><text x="62.7106%" y="383.50"></text></g><g><title>core::slice::ascii::is_ascii (75,218,778 samples, 0.02%)</title><rect x="62.4606%" y="357" width="0.0158%" height="15" fill="rgb(239,43,17)" fg:x="296882194121" fg:w="75218778"/><text x="62.7106%" y="367.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (81,094,437 samples, 0.02%)</title><rect x="62.4600%" y="389" width="0.0171%" height="15" fill="rgb(231,177,25)" fg:x="296879310126" fg:w="81094437"/><text x="62.7100%" y="399.50"></text></g><g><title>csv_core::reader::Dfa::get_output (114,791,642 samples, 0.02%)</title><rect x="62.5366%" y="357" width="0.0242%" height="15" fill="rgb(219,179,1)" fg:x="297243410259" fg:w="114791642"/><text x="62.7866%" y="367.50"></text></g><g><title>csv_core::reader::Reader::read_record (1,071,408,597 samples, 0.23%)</title><rect x="62.4840%" y="389" width="0.2254%" height="15" fill="rgb(238,219,53)" fg:x="296993300781" fg:w="1071408597"/><text x="62.7340%" y="399.50"></text></g><g><title>csv_core::reader::Reader::read_record_dfa (1,062,461,983 samples, 0.22%)</title><rect x="62.4859%" y="373" width="0.2235%" height="15" fill="rgb(232,167,36)" fg:x="297002247395" fg:w="1062461983"/><text x="62.7359%" y="383.50"></text></g><g><title>csv_core::reader::DfaClasses::scan_and_copy (694,799,260 samples, 0.15%)</title><rect x="62.5632%" y="357" width="0.1462%" height="15" fill="rgb(244,19,51)" fg:x="297369910118" fg:w="694799260"/><text x="62.8132%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (2,768,536,711 samples, 0.58%)</title><rect x="62.7094%" y="389" width="0.5825%" height="15" fill="rgb(224,6,22)" fg:x="298064709378" fg:w="2768536711"/><text x="62.9594%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (603,963,141 samples, 0.13%)</title><rect x="63.2919%" y="389" width="0.1271%" height="15" fill="rgb(224,145,5)" fg:x="300833246089" fg:w="603963141"/><text x="63.5419%" y="399.50"></text></g><g><title>page_fault (52,427,004 samples, 0.01%)</title><rect x="63.4220%" y="389" width="0.0110%" height="15" fill="rgb(234,130,49)" fg:x="301451699128" fg:w="52427004"/><text x="63.6720%" y="399.50"></text></g><g><title>&lt;alloc::collections::linked_list::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (108,535,889 samples, 0.02%)</title><rect x="63.4330%" y="373" width="0.0228%" height="15" fill="rgb(254,6,2)" fg:x="301504126132" fg:w="108535889"/><text x="63.6830%" y="383.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::pop_front (108,535,889 samples, 0.02%)</title><rect x="63.4330%" y="357" width="0.0228%" height="15" fill="rgb(208,96,46)" fg:x="301504126132" fg:w="108535889"/><text x="63.6830%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (97,076,757 samples, 0.02%)</title><rect x="63.4354%" y="341" width="0.0204%" height="15" fill="rgb(239,3,39)" fg:x="301515585264" fg:w="97076757"/><text x="63.6854%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (97,076,757 samples, 0.02%)</title><rect x="63.4354%" y="325" width="0.0204%" height="15" fill="rgb(233,210,1)" fg:x="301515585264" fg:w="97076757"/><text x="63.6854%" y="335.50"></text></g><g><title>alloc::collections::linked_list::Node&lt;T&gt;::into_element (97,076,757 samples, 0.02%)</title><rect x="63.4354%" y="309" width="0.0204%" height="15" fill="rgb(244,137,37)" fg:x="301515585264" fg:w="97076757"/><text x="63.6854%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (92,387,728 samples, 0.02%)</title><rect x="63.4364%" y="293" width="0.0194%" height="15" fill="rgb(240,136,2)" fg:x="301520274293" fg:w="92387728"/><text x="63.6864%" y="303.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (92,387,728 samples, 0.02%)</title><rect x="63.4364%" y="277" width="0.0194%" height="15" fill="rgb(239,18,37)" fg:x="301520274293" fg:w="92387728"/><text x="63.6864%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (92,387,728 samples, 0.02%)</title><rect x="63.4364%" y="261" width="0.0194%" height="15" fill="rgb(218,185,22)" fg:x="301520274293" fg:w="92387728"/><text x="63.6864%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (92,387,728 samples, 0.02%)</title><rect x="63.4364%" y="245" width="0.0194%" height="15" fill="rgb(225,218,4)" fg:x="301520274293" fg:w="92387728"/><text x="63.6864%" y="255.50"></text></g><g><title>_int_free (53,217,828 samples, 0.01%)</title><rect x="63.4447%" y="229" width="0.0112%" height="15" fill="rgb(230,182,32)" fg:x="301559444193" fg:w="53217828"/><text x="63.6947%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (100,734,094 samples, 0.02%)</title><rect x="63.4645%" y="373" width="0.0212%" height="15" fill="rgb(242,56,43)" fg:x="301653885558" fg:w="100734094"/><text x="63.7145%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (100,734,094 samples, 0.02%)</title><rect x="63.4645%" y="357" width="0.0212%" height="15" fill="rgb(233,99,24)" fg:x="301653885558" fg:w="100734094"/><text x="63.7145%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,734,094 samples, 0.02%)</title><rect x="63.4645%" y="341" width="0.0212%" height="15" fill="rgb(234,209,42)" fg:x="301653885558" fg:w="100734094"/><text x="63.7145%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (100,734,094 samples, 0.02%)</title><rect x="63.4645%" y="325" width="0.0212%" height="15" fill="rgb(227,7,12)" fg:x="301653885558" fg:w="100734094"/><text x="63.7145%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (93,304,786 samples, 0.02%)</title><rect x="63.4661%" y="309" width="0.0196%" height="15" fill="rgb(245,203,43)" fg:x="301661314866" fg:w="93304786"/><text x="63.7161%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (93,304,786 samples, 0.02%)</title><rect x="63.4661%" y="293" width="0.0196%" height="15" fill="rgb(238,205,33)" fg:x="301661314866" fg:w="93304786"/><text x="63.7161%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49,154,167 samples, 0.01%)</title><rect x="63.4857%" y="325" width="0.0103%" height="15" fill="rgb(231,56,7)" fg:x="301754619652" fg:w="49154167"/><text x="63.7357%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (49,154,167 samples, 0.01%)</title><rect x="63.4857%" y="309" width="0.0103%" height="15" fill="rgb(244,186,29)" fg:x="301754619652" fg:w="49154167"/><text x="63.7357%" y="319.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (305,637,998 samples, 0.06%)</title><rect x="63.4330%" y="389" width="0.0643%" height="15" fill="rgb(234,111,31)" fg:x="301504126132" fg:w="305637998"/><text x="63.6830%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt; (55,144,478 samples, 0.01%)</title><rect x="63.4857%" y="373" width="0.0116%" height="15" fill="rgb(241,149,10)" fg:x="301754619652" fg:w="55144478"/><text x="63.7357%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt; (55,144,478 samples, 0.01%)</title><rect x="63.4857%" y="357" width="0.0116%" height="15" fill="rgb(249,206,44)" fg:x="301754619652" fg:w="55144478"/><text x="63.7357%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55,144,478 samples, 0.01%)</title><rect x="63.4857%" y="341" width="0.0116%" height="15" fill="rgb(251,153,30)" fg:x="301754619652" fg:w="55144478"/><text x="63.7357%" y="351.50"></text></g><g><title>&lt;rayon::vec::SliceDrain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (69,867,754 samples, 0.01%)</title><rect x="63.5193%" y="357" width="0.0147%" height="15" fill="rgb(239,152,38)" fg:x="301914223861" fg:w="69867754"/><text x="63.7693%" y="367.50"></text></g><g><title>core::ptr::read (67,300,755 samples, 0.01%)</title><rect x="63.5198%" y="341" width="0.0142%" height="15" fill="rgb(249,139,47)" fg:x="301916790860" fg:w="67300755"/><text x="63.7698%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (71,935,784 samples, 0.02%)</title><rect x="63.5193%" y="373" width="0.0151%" height="15" fill="rgb(244,64,35)" fg:x="301914223861" fg:w="71935784"/><text x="63.7693%" y="383.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (185,137,986 samples, 0.04%)</title><rect x="63.4973%" y="389" width="0.0390%" height="15" fill="rgb(216,46,15)" fg:x="301809764130" fg:w="185137986"/><text x="63.7473%" y="399.50"></text></g><g><title>_raw_spin_lock (65,148,659 samples, 0.01%)</title><rect x="63.6370%" y="213" width="0.0137%" height="15" fill="rgb(250,74,19)" fg:x="302473833524" fg:w="65148659"/><text x="63.8870%" y="223.50"></text></g><g><title>_raw_spin_lock (7,592,671,741 samples, 1.60%)</title><rect x="63.6789%" y="197" width="1.5974%" height="15" fill="rgb(249,42,33)" fg:x="302672685496" fg:w="7592671741"/><text x="63.9289%" y="207.50"></text></g><g><title>native_queued_spin_lock_slowpath (7,592,671,741 samples, 1.60%)</title><rect x="63.6789%" y="181" width="1.5974%" height="15" fill="rgb(242,149,17)" fg:x="302672685496" fg:w="7592671741"/><text x="63.9289%" y="191.50"></text></g><g><title>mark_wake_futex (53,812,887 samples, 0.01%)</title><rect x="65.2808%" y="197" width="0.0113%" height="15" fill="rgb(244,29,21)" fg:x="310286705651" fg:w="53812887"/><text x="65.5308%" y="207.50"></text></g><g><title>select_task_rq_fair (103,836,203 samples, 0.02%)</title><rect x="65.3657%" y="165" width="0.0218%" height="15" fill="rgb(220,130,37)" fg:x="310690550333" fg:w="103836203"/><text x="65.6157%" y="175.50"></text></g><g><title>select_idle_sibling (58,220,307 samples, 0.01%)</title><rect x="65.3753%" y="149" width="0.0122%" height="15" fill="rgb(211,67,2)" fg:x="310736166229" fg:w="58220307"/><text x="65.6253%" y="159.50"></text></g><g><title>enqueue_task_fair (50,176,634 samples, 0.01%)</title><rect x="65.3893%" y="133" width="0.0106%" height="15" fill="rgb(235,68,52)" fg:x="310802393464" fg:w="50176634"/><text x="65.6393%" y="143.50"></text></g><g><title>psi_task_change (65,972,014 samples, 0.01%)</title><rect x="65.3998%" y="133" width="0.0139%" height="15" fill="rgb(246,142,3)" fg:x="310852570098" fg:w="65972014"/><text x="65.6498%" y="143.50"></text></g><g><title>activate_task (126,074,368 samples, 0.03%)</title><rect x="65.3885%" y="149" width="0.0265%" height="15" fill="rgb(241,25,7)" fg:x="310798795982" fg:w="126074368"/><text x="65.6385%" y="159.50"></text></g><g><title>ttwu_do_activate (136,007,482 samples, 0.03%)</title><rect x="65.3885%" y="165" width="0.0286%" height="15" fill="rgb(242,119,39)" fg:x="310798795982" fg:w="136007482"/><text x="65.6385%" y="175.50"></text></g><g><title>futex_wake (8,425,755,516 samples, 1.77%)</title><rect x="63.6511%" y="213" width="1.7727%" height="15" fill="rgb(241,98,45)" fg:x="302540904834" fg:w="8425755516"/><text x="63.9011%" y="223.50">f..</text></g><g><title>wake_up_q (619,994,036 samples, 0.13%)</title><rect x="65.2934%" y="197" width="0.1304%" height="15" fill="rgb(254,28,30)" fg:x="310346666314" fg:w="619994036"/><text x="65.5434%" y="207.50"></text></g><g><title>try_to_wake_up (601,546,722 samples, 0.13%)</title><rect x="65.2973%" y="181" width="0.1266%" height="15" fill="rgb(241,142,54)" fg:x="310365113628" fg:w="601546722"/><text x="65.5473%" y="191.50"></text></g><g><title>do_futex (8,530,282,924 samples, 1.79%)</title><rect x="63.6337%" y="229" width="1.7947%" height="15" fill="rgb(222,85,15)" fg:x="302457833178" fg:w="8530282924"/><text x="63.8837%" y="239.50">d..</text></g><g><title>__x64_sys_futex (8,537,753,318 samples, 1.80%)</title><rect x="63.6325%" y="245" width="1.7962%" height="15" fill="rgb(210,85,47)" fg:x="302452302743" fg:w="8537753318"/><text x="63.8825%" y="255.50">_..</text></g><g><title>do_syscall_64 (8,733,948,861 samples, 1.84%)</title><rect x="63.5924%" y="261" width="1.8375%" height="15" fill="rgb(224,206,25)" fg:x="302261503677" fg:w="8733948861"/><text x="63.8424%" y="271.50">d..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8,770,205,760 samples, 1.85%)</title><rect x="63.5861%" y="277" width="1.8452%" height="15" fill="rgb(243,201,19)" fg:x="302231559937" fg:w="8770205760"/><text x="63.8361%" y="287.50">e..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8,897,750,863 samples, 1.87%)</title><rect x="63.5721%" y="357" width="1.8720%" height="15" fill="rgb(236,59,4)" fg:x="302165286959" fg:w="8897750863"/><text x="63.8221%" y="367.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8,897,750,863 samples, 1.87%)</title><rect x="63.5721%" y="341" width="1.8720%" height="15" fill="rgb(254,179,45)" fg:x="302165286959" fg:w="8897750863"/><text x="63.8221%" y="351.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,897,750,863 samples, 1.87%)</title><rect x="63.5721%" y="325" width="1.8720%" height="15" fill="rgb(226,14,10)" fg:x="302165286959" fg:w="8897750863"/><text x="63.8221%" y="335.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8,873,384,004 samples, 1.87%)</title><rect x="63.5772%" y="309" width="1.8669%" height="15" fill="rgb(244,27,41)" fg:x="302189653818" fg:w="8873384004"/><text x="63.8272%" y="319.50">c..</text></g><g><title>syscall (8,866,617,120 samples, 1.87%)</title><rect x="63.5787%" y="293" width="1.8654%" height="15" fill="rgb(235,35,32)" fg:x="302196420702" fg:w="8866617120"/><text x="63.8287%" y="303.50">s..</text></g><g><title>syscall_return_via_sysret (61,272,125 samples, 0.01%)</title><rect x="65.4312%" y="277" width="0.0129%" height="15" fill="rgb(218,68,31)" fg:x="311001765697" fg:w="61272125"/><text x="65.6812%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8,945,808,074 samples, 1.88%)</title><rect x="63.5697%" y="373" width="1.8821%" height="15" fill="rgb(207,120,37)" fg:x="302153773208" fg:w="8945808074"/><text x="63.8197%" y="383.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9,192,612,865 samples, 1.93%)</title><rect x="63.5363%" y="389" width="1.9340%" height="15" fill="rgb(227,98,0)" fg:x="301994902116" fg:w="9192612865"/><text x="63.7863%" y="399.50">r..</text></g><g><title>rayon_core::join::join_context (87,933,699 samples, 0.02%)</title><rect x="65.4518%" y="373" width="0.0185%" height="15" fill="rgb(207,7,3)" fg:x="311099581282" fg:w="87933699"/><text x="65.7018%" y="383.50"></text></g><g><title>rayon_core::current_num_threads (49,986,935 samples, 0.01%)</title><rect x="65.4703%" y="389" width="0.0105%" height="15" fill="rgb(206,98,19)" fg:x="311187514981" fg:w="49986935"/><text x="65.7203%" y="399.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (1,317,071,165 samples, 0.28%)</title><rect x="65.5456%" y="309" width="0.2771%" height="15" fill="rgb(217,5,26)" fg:x="311545350899" fg:w="1317071165"/><text x="65.7956%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,317,071,165 samples, 0.28%)</title><rect x="65.5456%" y="293" width="0.2771%" height="15" fill="rgb(235,190,38)" fg:x="311545350899" fg:w="1317071165"/><text x="65.7956%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (1,317,071,165 samples, 0.28%)</title><rect x="65.5456%" y="277" width="0.2771%" height="15" fill="rgb(247,86,24)" fg:x="311545350899" fg:w="1317071165"/><text x="65.7956%" y="287.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (1,490,375,493 samples, 0.31%)</title><rect x="65.5268%" y="373" width="0.3136%" height="15" fill="rgb(205,101,16)" fg:x="311456150283" fg:w="1490375493"/><text x="65.7768%" y="383.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (1,424,421,448 samples, 0.30%)</title><rect x="65.5407%" y="357" width="0.2997%" height="15" fill="rgb(246,168,33)" fg:x="311522104328" fg:w="1424421448"/><text x="65.7907%" y="367.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (1,424,421,448 samples, 0.30%)</title><rect x="65.5407%" y="341" width="0.2997%" height="15" fill="rgb(231,114,1)" fg:x="311522104328" fg:w="1424421448"/><text x="65.7907%" y="351.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (1,418,415,431 samples, 0.30%)</title><rect x="65.5420%" y="325" width="0.2984%" height="15" fill="rgb(207,184,53)" fg:x="311528110345" fg:w="1418415431"/><text x="65.7920%" y="335.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::try_exchange (84,103,712 samples, 0.02%)</title><rect x="65.8227%" y="309" width="0.0177%" height="15" fill="rgb(224,95,51)" fg:x="312862422064" fg:w="84103712"/><text x="66.0727%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (81,833,831 samples, 0.02%)</title><rect x="65.8232%" y="293" width="0.0172%" height="15" fill="rgb(212,188,45)" fg:x="312864691945" fg:w="81833831"/><text x="66.0732%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (81,833,831 samples, 0.02%)</title><rect x="65.8232%" y="277" width="0.0172%" height="15" fill="rgb(223,154,38)" fg:x="312864691945" fg:w="81833831"/><text x="66.0732%" y="287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,746,605,271 samples, 0.37%)</title><rect x="65.4838%" y="389" width="0.3675%" height="15" fill="rgb(251,22,52)" fg:x="311251532158" fg:w="1746605271"/><text x="65.7338%" y="399.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (316,149,291 samples, 0.07%)</title><rect x="66.1162%" y="341" width="0.0665%" height="15" fill="rgb(229,209,22)" fg:x="314257416132" fg:w="316149291"/><text x="66.3662%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (193,205,499 samples, 0.04%)</title><rect x="66.2137%" y="325" width="0.0406%" height="15" fill="rgb(234,138,34)" fg:x="314720848037" fg:w="193205499"/><text x="66.4637%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (193,205,499 samples, 0.04%)</title><rect x="66.2137%" y="309" width="0.0406%" height="15" fill="rgb(212,95,11)" fg:x="314720848037" fg:w="193205499"/><text x="66.4637%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (300,247,580 samples, 0.06%)</title><rect x="66.2543%" y="325" width="0.0632%" height="15" fill="rgb(240,179,47)" fg:x="314914053536" fg:w="300247580"/><text x="66.5043%" y="335.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (300,247,580 samples, 0.06%)</title><rect x="66.2543%" y="309" width="0.0632%" height="15" fill="rgb(240,163,11)" fg:x="314914053536" fg:w="300247580"/><text x="66.5043%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (303,852,381 samples, 0.06%)</title><rect x="66.3175%" y="325" width="0.0639%" height="15" fill="rgb(236,37,12)" fg:x="315214301116" fg:w="303852381"/><text x="66.5675%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (303,852,381 samples, 0.06%)</title><rect x="66.3175%" y="309" width="0.0639%" height="15" fill="rgb(232,164,16)" fg:x="315214301116" fg:w="303852381"/><text x="66.5675%" y="319.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold (169,503,817 samples, 0.04%)</title><rect x="66.3457%" y="293" width="0.0357%" height="15" fill="rgb(244,205,15)" fg:x="315348649680" fg:w="169503817"/><text x="66.5957%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (114,025,184 samples, 0.02%)</title><rect x="66.3814%" y="325" width="0.0240%" height="15" fill="rgb(223,117,47)" fg:x="315518153497" fg:w="114025184"/><text x="66.6314%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (62,657,380 samples, 0.01%)</title><rect x="66.5732%" y="293" width="0.0132%" height="15" fill="rgb(244,107,35)" fg:x="316429955956" fg:w="62657380"/><text x="66.8232%" y="303.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (1,012,592,686 samples, 0.21%)</title><rect x="66.4054%" y="325" width="0.2130%" height="15" fill="rgb(205,140,8)" fg:x="315632178681" fg:w="1012592686"/><text x="66.6554%" y="335.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next (533,729,681 samples, 0.11%)</title><rect x="66.5061%" y="309" width="0.1123%" height="15" fill="rgb(228,84,46)" fg:x="316111041686" fg:w="533729681"/><text x="66.7561%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (136,194,430 samples, 0.03%)</title><rect x="66.5898%" y="293" width="0.0287%" height="15" fill="rgb(254,188,9)" fg:x="316508576937" fg:w="136194430"/><text x="66.8398%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2,480,172,765 samples, 0.52%)</title><rect x="66.0972%" y="373" width="0.5218%" height="15" fill="rgb(206,112,54)" fg:x="314167320219" fg:w="2480172765"/><text x="66.3472%" y="383.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (2,435,676,533 samples, 0.51%)</title><rect x="66.1066%" y="357" width="0.5124%" height="15" fill="rgb(216,84,49)" fg:x="314211816451" fg:w="2435676533"/><text x="66.3566%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (2,073,927,561 samples, 0.44%)</title><rect x="66.1827%" y="341" width="0.4363%" height="15" fill="rgb(214,194,35)" fg:x="314573565423" fg:w="2073927561"/><text x="66.4327%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (67,478,767 samples, 0.01%)</title><rect x="66.7288%" y="357" width="0.0142%" height="15" fill="rgb(249,28,3)" fg:x="317169132248" fg:w="67478767"/><text x="66.9788%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (590,879,520 samples, 0.12%)</title><rect x="66.6190%" y="373" width="0.1243%" height="15" fill="rgb(222,56,52)" fg:x="316647492984" fg:w="590879520"/><text x="66.8690%" y="383.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (4,200,534,096 samples, 0.88%)</title><rect x="65.8602%" y="389" width="0.8837%" height="15" fill="rgb(245,217,50)" fg:x="313040829945" fg:w="4200534096"/><text x="66.1102%" y="399.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (815,209,091 samples, 0.17%)</title><rect x="66.7868%" y="373" width="0.1715%" height="15" fill="rgb(213,201,24)" fg:x="317445214093" fg:w="815209091"/><text x="67.0368%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (768,691,030 samples, 0.16%)</title><rect x="66.7966%" y="357" width="0.1617%" height="15" fill="rgb(248,116,28)" fg:x="317491732154" fg:w="768691030"/><text x="67.0466%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (768,691,030 samples, 0.16%)</title><rect x="66.7966%" y="341" width="0.1617%" height="15" fill="rgb(219,72,43)" fg:x="317491732154" fg:w="768691030"/><text x="67.0466%" y="351.50"></text></g><g><title>__GI___sched_yield (53,077,310 samples, 0.01%)</title><rect x="66.9610%" y="341" width="0.0112%" height="15" fill="rgb(209,138,14)" fg:x="318273013477" fg:w="53077310"/><text x="67.2110%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (53,077,310 samples, 0.01%)</title><rect x="66.9610%" y="325" width="0.0112%" height="15" fill="rgb(222,18,33)" fg:x="318273013477" fg:w="53077310"/><text x="67.2110%" y="335.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (67,848,403 samples, 0.01%)</title><rect x="66.9584%" y="373" width="0.0143%" height="15" fill="rgb(213,199,7)" fg:x="318260423184" fg:w="67848403"/><text x="67.2084%" y="383.50"></text></g><g><title>rayon_core::job::JobRef::execute (67,848,403 samples, 0.01%)</title><rect x="66.9584%" y="357" width="0.0143%" height="15" fill="rgb(250,110,10)" fg:x="318260423184" fg:w="67848403"/><text x="67.2084%" y="367.50"></text></g><g><title>__switch_to (1,528,566,090 samples, 0.32%)</title><rect x="67.5002%" y="341" width="0.3216%" height="15" fill="rgb(248,123,6)" fg:x="320835923922" fg:w="1528566090"/><text x="67.7502%" y="351.50"></text></g><g><title>__switch_to_asm (1,316,745,100 samples, 0.28%)</title><rect x="67.8218%" y="341" width="0.2770%" height="15" fill="rgb(206,91,31)" fg:x="322364490012" fg:w="1316745100"/><text x="68.0718%" y="351.50"></text></g><g><title>apic_timer_interrupt (59,126,921 samples, 0.01%)</title><rect x="68.0988%" y="341" width="0.0124%" height="15" fill="rgb(211,154,13)" fg:x="323681235112" fg:w="59126921"/><text x="68.3488%" y="351.50"></text></g><g><title>smp_apic_timer_interrupt (59,126,921 samples, 0.01%)</title><rect x="68.0988%" y="325" width="0.0124%" height="15" fill="rgb(225,148,7)" fg:x="323681235112" fg:w="59126921"/><text x="68.3488%" y="335.50"></text></g><g><title>do_syscall_64 (260,101,896 samples, 0.05%)</title><rect x="68.1117%" y="341" width="0.0547%" height="15" fill="rgb(220,160,43)" fg:x="323742221623" fg:w="260101896"/><text x="68.3617%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (8,492,786,321 samples, 1.79%)</title><rect x="68.1664%" y="341" width="1.7868%" height="15" fill="rgb(213,52,39)" fg:x="324002323519" fg:w="8492786321"/><text x="68.4164%" y="351.50">e..</text></g><g><title>__x64_sys_sched_yield (836,713,193 samples, 0.18%)</title><rect x="70.3699%" y="325" width="0.1760%" height="15" fill="rgb(243,137,7)" fg:x="334475837572" fg:w="836713193"/><text x="70.6199%" y="335.50"></text></g><g><title>__x86_indirect_thunk_rax (47,853,107 samples, 0.01%)</title><rect x="70.5459%" y="325" width="0.0101%" height="15" fill="rgb(230,79,13)" fg:x="335312550765" fg:w="47853107"/><text x="70.7959%" y="335.50"></text></g><g><title>amd_clear_divider (1,220,933,287 samples, 0.26%)</title><rect x="70.5560%" y="325" width="0.2569%" height="15" fill="rgb(247,105,23)" fg:x="335360403872" fg:w="1220933287"/><text x="70.8060%" y="335.50"></text></g><g><title>__x86_indirect_thunk_rax (142,008,932 samples, 0.03%)</title><rect x="77.5441%" y="293" width="0.0299%" height="15" fill="rgb(223,179,41)" fg:x="368575420002" fg:w="142008932"/><text x="77.7941%" y="303.50"></text></g><g><title>_raw_spin_lock (1,764,825,800 samples, 0.37%)</title><rect x="77.5739%" y="293" width="0.3713%" height="15" fill="rgb(218,9,34)" fg:x="368717428934" fg:w="1764825800"/><text x="77.8239%" y="303.50"></text></g><g><title>__sched_text_start (145,959,171 samples, 0.03%)</title><rect x="78.2039%" y="277" width="0.0307%" height="15" fill="rgb(222,106,8)" fg:x="371711947231" fg:w="145959171"/><text x="78.4539%" y="287.50"></text></g><g><title>_raw_spin_lock (131,078,859 samples, 0.03%)</title><rect x="78.2347%" y="277" width="0.0276%" height="15" fill="rgb(211,220,0)" fg:x="371857906402" fg:w="131078859"/><text x="78.4847%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath (131,078,859 samples, 0.03%)</title><rect x="78.2347%" y="261" width="0.0276%" height="15" fill="rgb(229,52,16)" fg:x="371857906402" fg:w="131078859"/><text x="78.4847%" y="271.50"></text></g><g><title>clear_buddies (75,147,222 samples, 0.02%)</title><rect x="78.2638%" y="277" width="0.0158%" height="15" fill="rgb(212,155,18)" fg:x="371996283651" fg:w="75147222"/><text x="78.5138%" y="287.50"></text></g><g><title>reschedule_interrupt (53,208,849 samples, 0.01%)</title><rect x="78.2796%" y="277" width="0.0112%" height="15" fill="rgb(242,21,14)" fg:x="372071430873" fg:w="53208849"/><text x="78.5296%" y="287.50"></text></g><g><title>smp_reschedule_interrupt (53,208,849 samples, 0.01%)</title><rect x="78.2796%" y="261" width="0.0112%" height="15" fill="rgb(222,19,48)" fg:x="372071430873" fg:w="53208849"/><text x="78.5296%" y="271.50"></text></g><g><title>scheduler_ipi (50,885,951 samples, 0.01%)</title><rect x="78.2801%" y="245" width="0.0107%" height="15" fill="rgb(232,45,27)" fg:x="372073753771" fg:w="50885951"/><text x="78.5301%" y="255.50"></text></g><g><title>sched_ttwu_pending (50,885,951 samples, 0.01%)</title><rect x="78.2801%" y="229" width="0.0107%" height="15" fill="rgb(249,103,42)" fg:x="372073753771" fg:w="50885951"/><text x="78.5301%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (73,681,398 samples, 0.02%)</title><rect x="79.3875%" y="245" width="0.0155%" height="15" fill="rgb(246,81,33)" fg:x="377337662475" fg:w="73681398"/><text x="79.6375%" y="255.50"></text></g><g><title>__perf_event_task_sched_out (1,010,717,531 samples, 0.21%)</title><rect x="79.4030%" y="245" width="0.2126%" height="15" fill="rgb(252,33,42)" fg:x="377411343873" fg:w="1010717531"/><text x="79.6530%" y="255.50"></text></g><g><title>__switch_to (641,074,554 samples, 0.13%)</title><rect x="79.6157%" y="245" width="0.1349%" height="15" fill="rgb(209,212,41)" fg:x="378422061404" fg:w="641074554"/><text x="79.8657%" y="255.50"></text></g><g><title>_raw_spin_lock (622,075,342 samples, 0.13%)</title><rect x="79.7505%" y="245" width="0.1309%" height="15" fill="rgb(207,154,6)" fg:x="379063135958" fg:w="622075342"/><text x="80.0005%" y="255.50"></text></g><g><title>check_cfs_rq_runtime (240,551,995 samples, 0.05%)</title><rect x="79.8895%" y="245" width="0.0506%" height="15" fill="rgb(223,64,47)" fg:x="379723711603" fg:w="240551995"/><text x="80.1395%" y="255.50"></text></g><g><title>__perf_event_task_sched_in (398,537,020 samples, 0.08%)</title><rect x="80.0121%" y="229" width="0.0838%" height="15" fill="rgb(211,161,38)" fg:x="380306547521" fg:w="398537020"/><text x="80.2621%" y="239.50"></text></g><g><title>finish_task_switch (805,232,903 samples, 0.17%)</title><rect x="79.9401%" y="245" width="0.1694%" height="15" fill="rgb(219,138,40)" fg:x="379964263598" fg:w="805232903"/><text x="80.1901%" y="255.50"></text></g><g><title>pick_next_entity (290,894,990 samples, 0.06%)</title><rect x="80.1095%" y="245" width="0.0612%" height="15" fill="rgb(241,228,46)" fg:x="380769496501" fg:w="290894990"/><text x="80.3595%" y="255.50"></text></g><g><title>__calc_delta (313,021,214 samples, 0.07%)</title><rect x="80.8117%" y="229" width="0.0659%" height="15" fill="rgb(223,209,38)" fg:x="384106728603" fg:w="313021214"/><text x="81.0617%" y="239.50"></text></g><g><title>__cgroup_account_cputime (106,063,292 samples, 0.02%)</title><rect x="80.8775%" y="229" width="0.0223%" height="15" fill="rgb(236,164,45)" fg:x="384419749817" fg:w="106063292"/><text x="81.1275%" y="239.50"></text></g><g><title>clear_buddies (315,397,820 samples, 0.07%)</title><rect x="80.9120%" y="229" width="0.0664%" height="15" fill="rgb(231,15,5)" fg:x="384583590731" fg:w="315397820"/><text x="81.1620%" y="239.50"></text></g><g><title>cpuacct_charge (76,623,315 samples, 0.02%)</title><rect x="80.9783%" y="229" width="0.0161%" height="15" fill="rgb(252,35,15)" fg:x="384898988551" fg:w="76623315"/><text x="81.2283%" y="239.50"></text></g><g><title>clear_buddies (371,765,649 samples, 0.08%)</title><rect x="81.3748%" y="213" width="0.0782%" height="15" fill="rgb(248,181,18)" fg:x="386783233204" fg:w="371765649"/><text x="81.6248%" y="223.50"></text></g><g><title>pick_next_entity (2,275,564,981 samples, 0.48%)</title><rect x="80.9945%" y="229" width="0.4788%" height="15" fill="rgb(233,39,42)" fg:x="384975611866" fg:w="2275564981"/><text x="81.2445%" y="239.50"></text></g><g><title>wakeup_preempt_entity.isra.0 (96,177,994 samples, 0.02%)</title><rect x="81.4530%" y="213" width="0.0202%" height="15" fill="rgb(238,110,33)" fg:x="387154998853" fg:w="96177994"/><text x="81.7030%" y="223.50"></text></g><g><title>__enqueue_entity (213,971,810 samples, 0.05%)</title><rect x="81.5220%" y="213" width="0.0450%" height="15" fill="rgb(233,195,10)" fg:x="387483154970" fg:w="213971810"/><text x="81.7720%" y="223.50"></text></g><g><title>rb_insert_color (109,786,413 samples, 0.02%)</title><rect x="81.5821%" y="213" width="0.0231%" height="15" fill="rgb(254,105,3)" fg:x="387768847998" fg:w="109786413"/><text x="81.8321%" y="223.50"></text></g><g><title>update_curr (162,512,836 samples, 0.03%)</title><rect x="81.6052%" y="213" width="0.0342%" height="15" fill="rgb(221,225,9)" fg:x="387878634411" fg:w="162512836"/><text x="81.8552%" y="223.50"></text></g><g><title>__update_load_avg_cfs_rq (400,731,594 samples, 0.08%)</title><rect x="81.7079%" y="197" width="0.0843%" height="15" fill="rgb(224,227,45)" fg:x="388366422076" fg:w="400731594"/><text x="81.9579%" y="207.50"></text></g><g><title>put_prev_entity (1,816,563,032 samples, 0.38%)</title><rect x="81.4732%" y="229" width="0.3822%" height="15" fill="rgb(229,198,43)" fg:x="387251176847" fg:w="1816563032"/><text x="81.7232%" y="239.50"></text></g><g><title>update_load_avg (1,026,592,632 samples, 0.22%)</title><rect x="81.6394%" y="213" width="0.2160%" height="15" fill="rgb(206,209,35)" fg:x="388041147247" fg:w="1026592632"/><text x="81.8894%" y="223.50"></text></g><g><title>__update_load_avg_se (300,586,209 samples, 0.06%)</title><rect x="81.7922%" y="197" width="0.0632%" height="15" fill="rgb(245,195,53)" fg:x="388767153670" fg:w="300586209"/><text x="82.0422%" y="207.50"></text></g><g><title>rb_erase (156,963,377 samples, 0.03%)</title><rect x="81.8554%" y="229" width="0.0330%" height="15" fill="rgb(240,92,26)" fg:x="389067739879" fg:w="156963377"/><text x="82.1054%" y="239.50"></text></g><g><title>__update_load_avg_cfs_rq (49,875,445 samples, 0.01%)</title><rect x="81.9557%" y="213" width="0.0105%" height="15" fill="rgb(207,40,23)" fg:x="389544325792" fg:w="49875445"/><text x="82.2057%" y="223.50"></text></g><g><title>__update_load_avg_cfs_rq (154,148,107 samples, 0.03%)</title><rect x="82.0338%" y="197" width="0.0324%" height="15" fill="rgb(223,111,35)" fg:x="389915510700" fg:w="154148107"/><text x="82.2838%" y="207.50"></text></g><g><title>set_next_entity (1,151,328,452 samples, 0.24%)</title><rect x="81.8971%" y="229" width="0.2422%" height="15" fill="rgb(229,147,28)" fg:x="389265704131" fg:w="1151328452"/><text x="82.1471%" y="239.50"></text></g><g><title>update_load_avg (782,566,040 samples, 0.16%)</title><rect x="81.9746%" y="213" width="0.1646%" height="15" fill="rgb(211,29,28)" fg:x="389634466543" fg:w="782566040"/><text x="82.2246%" y="223.50"></text></g><g><title>__update_load_avg_se (347,373,776 samples, 0.07%)</title><rect x="82.0662%" y="197" width="0.0731%" height="15" fill="rgb(228,72,33)" fg:x="390069658807" fg:w="347373776"/><text x="82.3162%" y="207.50"></text></g><g><title>__calc_delta (1,367,132,460 samples, 0.29%)</title><rect x="82.7983%" y="213" width="0.2876%" height="15" fill="rgb(205,214,31)" fg:x="393549470136" fg:w="1367132460"/><text x="83.0483%" y="223.50"></text></g><g><title>__cgroup_account_cputime (632,192,377 samples, 0.13%)</title><rect x="83.0859%" y="213" width="0.1330%" height="15" fill="rgb(224,111,15)" fg:x="394916602596" fg:w="632192377"/><text x="83.3359%" y="223.50"></text></g><g><title>cgroup_rstat_updated (373,837,634 samples, 0.08%)</title><rect x="83.1403%" y="197" width="0.0787%" height="15" fill="rgb(253,21,26)" fg:x="395174957339" fg:w="373837634"/><text x="83.3903%" y="207.50"></text></g><g><title>cgroup_rstat_updated (83,757,664 samples, 0.02%)</title><rect x="83.2189%" y="213" width="0.0176%" height="15" fill="rgb(245,139,43)" fg:x="395548794973" fg:w="83757664"/><text x="83.4689%" y="223.50"></text></g><g><title>cpuacct_charge (928,868,211 samples, 0.20%)</title><rect x="83.2366%" y="213" width="0.1954%" height="15" fill="rgb(252,170,7)" fg:x="395632552637" fg:w="928868211"/><text x="83.4866%" y="223.50"></text></g><g><title>update_curr (6,824,038,214 samples, 1.44%)</title><rect x="82.1393%" y="229" width="1.4357%" height="15" fill="rgb(231,118,14)" fg:x="390417032583" fg:w="6824038214"/><text x="82.3893%" y="239.50"></text></g><g><title>update_min_vruntime (679,649,949 samples, 0.14%)</title><rect x="83.4320%" y="213" width="0.1430%" height="15" fill="rgb(238,83,0)" fg:x="396561420848" fg:w="679649949"/><text x="83.6820%" y="223.50"></text></g><g><title>update_load_avg (81,401,795 samples, 0.02%)</title><rect x="83.5750%" y="229" width="0.0171%" height="15" fill="rgb(221,39,39)" fg:x="397241070797" fg:w="81401795"/><text x="83.8250%" y="239.50"></text></g><g><title>update_min_vruntime (270,575,525 samples, 0.06%)</title><rect x="83.5921%" y="229" width="0.0569%" height="15" fill="rgb(222,119,46)" fg:x="397322472592" fg:w="270575525"/><text x="83.8421%" y="239.50"></text></g><g><title>pick_next_task_fair (16,581,651,243 samples, 3.49%)</title><rect x="80.1707%" y="245" width="3.4886%" height="15" fill="rgb(222,165,49)" fg:x="381060391491" fg:w="16581651243"/><text x="80.4207%" y="255.50">pic..</text></g><g><title>wakeup_preempt_entity.isra.0 (48,994,617 samples, 0.01%)</title><rect x="83.6490%" y="229" width="0.0103%" height="15" fill="rgb(219,113,52)" fg:x="397593048117" fg:w="48994617"/><text x="83.8990%" y="239.50"></text></g><g><title>rcu_note_context_switch (590,918,165 samples, 0.12%)</title><rect x="83.6680%" y="245" width="0.1243%" height="15" fill="rgb(214,7,15)" fg:x="397683363015" fg:w="590918165"/><text x="83.9180%" y="255.50"></text></g><g><title>rcu_qs (96,418,748 samples, 0.02%)</title><rect x="83.7924%" y="245" width="0.0203%" height="15" fill="rgb(235,32,4)" fg:x="398274281180" fg:w="96418748"/><text x="84.0424%" y="255.50"></text></g><g><title>activate_task (55,999,969 samples, 0.01%)</title><rect x="83.8192%" y="165" width="0.0118%" height="15" fill="rgb(238,90,54)" fg:x="398401743226" fg:w="55999969"/><text x="84.0692%" y="175.50"></text></g><g><title>reschedule_interrupt (89,292,505 samples, 0.02%)</title><rect x="83.8126%" y="245" width="0.0188%" height="15" fill="rgb(213,208,19)" fg:x="398370699928" fg:w="89292505"/><text x="84.0626%" y="255.50"></text></g><g><title>smp_reschedule_interrupt (73,135,957 samples, 0.02%)</title><rect x="83.8160%" y="229" width="0.0154%" height="15" fill="rgb(233,156,4)" fg:x="398386856476" fg:w="73135957"/><text x="84.0660%" y="239.50"></text></g><g><title>scheduler_ipi (73,135,957 samples, 0.02%)</title><rect x="83.8160%" y="213" width="0.0154%" height="15" fill="rgb(207,194,5)" fg:x="398386856476" fg:w="73135957"/><text x="84.0660%" y="223.50"></text></g><g><title>sched_ttwu_pending (64,765,473 samples, 0.01%)</title><rect x="83.8178%" y="197" width="0.0136%" height="15" fill="rgb(206,111,30)" fg:x="398395226960" fg:w="64765473"/><text x="84.0678%" y="207.50"></text></g><g><title>ttwu_do_activate (58,249,207 samples, 0.01%)</title><rect x="83.8192%" y="181" width="0.0123%" height="15" fill="rgb(243,70,54)" fg:x="398401743226" fg:w="58249207"/><text x="84.0692%" y="191.50"></text></g><g><title>switch_mm_irqs_off (352,556,701 samples, 0.07%)</title><rect x="83.8375%" y="245" width="0.0742%" height="15" fill="rgb(242,28,8)" fg:x="398488924941" fg:w="352556701"/><text x="84.0875%" y="255.50"></text></g><g><title>update_curr (121,835,080 samples, 0.03%)</title><rect x="83.9117%" y="245" width="0.0256%" height="15" fill="rgb(219,106,18)" fg:x="398841481642" fg:w="121835080"/><text x="84.1617%" y="255.50"></text></g><g><title>native_sched_clock (558,493,775 samples, 0.12%)</title><rect x="84.1334%" y="213" width="0.1175%" height="15" fill="rgb(244,222,10)" fg:x="399895193863" fg:w="558493775"/><text x="84.3834%" y="223.50"></text></g><g><title>__sched_text_start (27,870,396,003 samples, 5.86%)</title><rect x="78.4022%" y="261" width="5.8636%" height="15" fill="rgb(236,179,52)" fg:x="372654493128" fg:w="27870396003"/><text x="78.6522%" y="271.50">__sched..</text></g><g><title>update_rq_clock (1,561,572,409 samples, 0.33%)</title><rect x="83.9373%" y="245" width="0.3285%" height="15" fill="rgb(213,23,39)" fg:x="398963316722" fg:w="1561572409"/><text x="84.1873%" y="255.50"></text></g><g><title>sched_clock_cpu (976,139,704 samples, 0.21%)</title><rect x="84.0605%" y="229" width="0.2054%" height="15" fill="rgb(238,48,10)" fg:x="399548749427" fg:w="976139704"/><text x="84.3105%" y="239.50"></text></g><g><title>sched_clock (71,201,493 samples, 0.01%)</title><rect x="84.2509%" y="213" width="0.0150%" height="15" fill="rgb(251,196,23)" fg:x="400453687638" fg:w="71201493"/><text x="84.5009%" y="223.50"></text></g><g><title>__switch_to_asm (78,913,291 samples, 0.02%)</title><rect x="84.2748%" y="261" width="0.0166%" height="15" fill="rgb(250,152,24)" fg:x="400567224998" fg:w="78913291"/><text x="84.5248%" y="271.50"></text></g><g><title>__x86_indirect_thunk_rax (228,706,159 samples, 0.05%)</title><rect x="84.2914%" y="261" width="0.0481%" height="15" fill="rgb(209,150,17)" fg:x="400646138289" fg:w="228706159"/><text x="84.5414%" y="271.50"></text></g><g><title>_raw_spin_lock (988,378,696 samples, 0.21%)</title><rect x="84.3395%" y="261" width="0.2079%" height="15" fill="rgb(234,202,34)" fg:x="400874844448" fg:w="988378696"/><text x="84.5895%" y="271.50"></text></g><g><title>finish_task_switch (130,470,437 samples, 0.03%)</title><rect x="84.5485%" y="261" width="0.0274%" height="15" fill="rgb(253,148,53)" fg:x="401868448112" fg:w="130470437"/><text x="84.7985%" y="271.50"></text></g><g><title>pick_next_task_fair (249,813,781 samples, 0.05%)</title><rect x="84.5764%" y="261" width="0.0526%" height="15" fill="rgb(218,129,16)" fg:x="402001089134" fg:w="249813781"/><text x="84.8264%" y="271.50"></text></g><g><title>schedule (30,434,131,394 samples, 6.40%)</title><rect x="78.2908%" y="277" width="6.4030%" height="15" fill="rgb(216,85,19)" fg:x="372124639722" fg:w="30434131394"/><text x="78.5408%" y="287.50">schedule</text></g><g><title>update_rq_clock (250,058,851 samples, 0.05%)</title><rect x="84.6412%" y="261" width="0.0526%" height="15" fill="rgb(235,228,7)" fg:x="402308712265" fg:w="250058851"/><text x="84.8912%" y="271.50"></text></g><g><title>update_rq_clock (106,371,876 samples, 0.02%)</title><rect x="84.6989%" y="277" width="0.0224%" height="15" fill="rgb(245,175,0)" fg:x="402583208495" fg:w="106371876"/><text x="84.9489%" y="287.50"></text></g><g><title>clear_buddies (204,853,438 samples, 0.04%)</title><rect x="84.9885%" y="261" width="0.0431%" height="15" fill="rgb(208,168,36)" fg:x="403959602732" fg:w="204853438"/><text x="85.2385%" y="271.50"></text></g><g><title>__cgroup_account_cputime (359,529,970 samples, 0.08%)</title><rect x="85.1885%" y="245" width="0.0756%" height="15" fill="rgb(246,171,24)" fg:x="404910452054" fg:w="359529970"/><text x="85.4385%" y="255.50"></text></g><g><title>cgroup_rstat_updated (221,287,628 samples, 0.05%)</title><rect x="85.2176%" y="229" width="0.0466%" height="15" fill="rgb(215,142,24)" fg:x="405048694396" fg:w="221287628"/><text x="85.4676%" y="239.50"></text></g><g><title>cpuacct_charge (474,505,934 samples, 0.10%)</title><rect x="85.2723%" y="245" width="0.0998%" height="15" fill="rgb(250,187,7)" fg:x="405308668696" fg:w="474505934"/><text x="85.5223%" y="255.50"></text></g><g><title>update_curr (1,747,959,967 samples, 0.37%)</title><rect x="85.0419%" y="261" width="0.3678%" height="15" fill="rgb(228,66,33)" fg:x="404213550561" fg:w="1747959967"/><text x="85.2919%" y="271.50"></text></g><g><title>update_min_vruntime (178,335,898 samples, 0.04%)</title><rect x="85.3721%" y="245" width="0.0375%" height="15" fill="rgb(234,215,21)" fg:x="405783174630" fg:w="178335898"/><text x="85.6221%" y="255.50"></text></g><g><title>update_min_vruntime (60,971,327 samples, 0.01%)</title><rect x="85.4097%" y="261" width="0.0128%" height="15" fill="rgb(222,191,20)" fg:x="405961510528" fg:w="60971327"/><text x="85.6597%" y="271.50"></text></g><g><title>native_sched_clock (380,808,240 samples, 0.08%)</title><rect x="85.5275%" y="229" width="0.0801%" height="15" fill="rgb(245,79,54)" fg:x="406521523374" fg:w="380808240"/><text x="85.7775%" y="239.50"></text></g><g><title>do_sched_yield (36,450,930,459 samples, 7.67%)</title><rect x="77.9462%" y="293" width="7.6689%" height="15" fill="rgb(240,10,37)" fg:x="370487082313" fg:w="36450930459"/><text x="78.1962%" y="303.50">do_sched_y..</text></g><g><title>yield_task_fair (4,248,432,401 samples, 0.89%)</title><rect x="84.7213%" y="277" width="0.8938%" height="15" fill="rgb(214,192,32)" fg:x="402689580371" fg:w="4248432401"/><text x="84.9713%" y="287.50"></text></g><g><title>update_rq_clock (915,530,917 samples, 0.19%)</title><rect x="85.4225%" y="261" width="0.1926%" height="15" fill="rgb(209,36,54)" fg:x="406022481855" fg:w="915530917"/><text x="85.6725%" y="271.50"></text></g><g><title>sched_clock_cpu (554,831,929 samples, 0.12%)</title><rect x="85.4984%" y="245" width="0.1167%" height="15" fill="rgb(220,10,11)" fg:x="406383180843" fg:w="554831929"/><text x="85.7484%" y="255.50"></text></g><g><title>schedule (105,849,508 samples, 0.02%)</title><rect x="85.6178%" y="293" width="0.0223%" height="15" fill="rgb(221,106,17)" fg:x="406950709064" fg:w="105849508"/><text x="85.8678%" y="303.50"></text></g><g><title>__x64_sys_sched_yield (39,316,066,203 samples, 8.27%)</title><rect x="77.5011%" y="309" width="8.2717%" height="15" fill="rgb(251,142,44)" fg:x="368371327355" fg:w="39316066203"/><text x="77.7511%" y="319.50">__x64_sys_sc..</text></g><g><title>yield_task_fair (630,834,986 samples, 0.13%)</title><rect x="85.6400%" y="293" width="0.1327%" height="15" fill="rgb(238,13,15)" fg:x="407056558572" fg:w="630834986"/><text x="85.8900%" y="303.50"></text></g><g><title>do_sched_yield (305,872,313 samples, 0.06%)</title><rect x="85.7770%" y="309" width="0.0644%" height="15" fill="rgb(208,107,27)" fg:x="407707629014" fg:w="305872313"/><text x="86.0270%" y="319.50"></text></g><g><title>fpregs_assert_state_consistent (323,447,623 samples, 0.07%)</title><rect x="85.8450%" y="309" width="0.0680%" height="15" fill="rgb(205,136,37)" fg:x="408030685999" fg:w="323447623"/><text x="86.0950%" y="319.50"></text></g><g><title>do_syscall_64 (72,975,707,173 samples, 15.35%)</title><rect x="70.8129%" y="325" width="15.3533%" height="15" fill="rgb(250,205,27)" fg:x="336581337159" fg:w="72975707173"/><text x="71.0629%" y="335.50">do_syscall_64</text></g><g><title>switch_fpu_return (1,182,340,802 samples, 0.25%)</title><rect x="85.9174%" y="309" width="0.2488%" height="15" fill="rgb(210,80,43)" fg:x="408374703530" fg:w="1182340802"/><text x="86.1674%" y="319.50"></text></g><g><title>fpregs_assert_state_consistent (355,586,140 samples, 0.07%)</title><rect x="86.1661%" y="325" width="0.0748%" height="15" fill="rgb(247,160,36)" fg:x="409557044332" fg:w="355586140"/><text x="86.4161%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (77,434,095,341 samples, 16.29%)</title><rect x="69.9532%" y="341" width="16.2912%" height="15" fill="rgb(234,13,49)" fg:x="332495109840" fg:w="77434095341"/><text x="70.2032%" y="351.50">entry_SYSCALL_64_after_hw..</text></g><g><title>native_load_tls (176,347,488 samples, 0.04%)</title><rect x="86.2444%" y="341" width="0.0371%" height="15" fill="rgb(234,122,0)" fg:x="409929205181" fg:w="176347488"/><text x="86.4944%" y="351.50"></text></g><g><title>native_write_msr (1,037,938,878 samples, 0.22%)</title><rect x="86.2815%" y="341" width="0.2184%" height="15" fill="rgb(207,146,38)" fg:x="410105552669" fg:w="1037938878"/><text x="86.5315%" y="351.50"></text></g><g><title>reschedule_interrupt (64,715,220 samples, 0.01%)</title><rect x="86.5008%" y="341" width="0.0136%" height="15" fill="rgb(207,177,25)" fg:x="411147919820" fg:w="64715220"/><text x="86.7508%" y="351.50"></text></g><g><title>smp_reschedule_interrupt (62,202,071 samples, 0.01%)</title><rect x="86.5013%" y="325" width="0.0131%" height="15" fill="rgb(211,178,42)" fg:x="411150432969" fg:w="62202071"/><text x="86.7513%" y="335.50"></text></g><g><title>scheduler_ipi (62,202,071 samples, 0.01%)</title><rect x="86.5013%" y="309" width="0.0131%" height="15" fill="rgb(230,69,54)" fg:x="411150432969" fg:w="62202071"/><text x="86.7513%" y="319.50"></text></g><g><title>sched_ttwu_pending (55,292,817 samples, 0.01%)</title><rect x="86.5028%" y="293" width="0.0116%" height="15" fill="rgb(214,135,41)" fg:x="411157342223" fg:w="55292817"/><text x="86.7528%" y="303.50"></text></g><g><title>__GI___sched_yield (101,513,737,009 samples, 21.36%)</title><rect x="67.1489%" y="357" width="21.3573%" height="15" fill="rgb(237,67,25)" fg:x="319166181638" fg:w="101513737009"/><text x="67.3989%" y="367.50">__GI___sched_yield</text></g><g><title>syscall_return_via_sysret (9,445,429,557 samples, 1.99%)</title><rect x="86.5190%" y="341" width="1.9872%" height="15" fill="rgb(222,189,50)" fg:x="411234489090" fg:w="9445429557"/><text x="86.7690%" y="351.50">s..</text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (223,281,951 samples, 0.05%)</title><rect x="88.5108%" y="325" width="0.0470%" height="15" fill="rgb(245,148,34)" fg:x="420701527012" fg:w="223281951"/><text x="88.7608%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (223,281,951 samples, 0.05%)</title><rect x="88.5108%" y="309" width="0.0470%" height="15" fill="rgb(222,29,6)" fg:x="420701527012" fg:w="223281951"/><text x="88.7608%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (223,281,951 samples, 0.05%)</title><rect x="88.5108%" y="293" width="0.0470%" height="15" fill="rgb(221,189,43)" fg:x="420701527012" fg:w="223281951"/><text x="88.7608%" y="303.50"></text></g><g><title>rayon_core::sleep::Sleep::announce_sleepy (286,213,455 samples, 0.06%)</title><rect x="88.5062%" y="357" width="0.0602%" height="15" fill="rgb(207,36,27)" fg:x="420679918647" fg:w="286213455"/><text x="88.7562%" y="367.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (283,996,899 samples, 0.06%)</title><rect x="88.5067%" y="341" width="0.0597%" height="15" fill="rgb(217,90,24)" fg:x="420682135203" fg:w="283996899"/><text x="88.7567%" y="351.50"></text></g><g><title>futex_wake (53,866,100 samples, 0.01%)</title><rect x="88.5757%" y="277" width="0.0113%" height="15" fill="rgb(224,66,35)" fg:x="421010240966" fg:w="53866100"/><text x="88.8257%" y="287.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (102,731,726,825 samples, 21.61%)</title><rect x="66.9749%" y="373" width="21.6136%" height="15" fill="rgb(221,13,50)" fg:x="318339179455" fg:w="102731726825"/><text x="67.2249%" y="383.50">rayon_core::sleep::Sleep::no_work_..</text></g><g><title>syscall (104,774,178 samples, 0.02%)</title><rect x="88.5665%" y="357" width="0.0220%" height="15" fill="rgb(236,68,49)" fg:x="420966132102" fg:w="104774178"/><text x="88.8165%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (96,990,645 samples, 0.02%)</title><rect x="88.5681%" y="341" width="0.0204%" height="15" fill="rgb(229,146,28)" fg:x="420973915635" fg:w="96990645"/><text x="88.8181%" y="351.50"></text></g><g><title>do_syscall_64 (96,990,645 samples, 0.02%)</title><rect x="88.5681%" y="325" width="0.0204%" height="15" fill="rgb(225,31,38)" fg:x="420973915635" fg:w="96990645"/><text x="88.8181%" y="335.50"></text></g><g><title>__x64_sys_futex (68,095,715 samples, 0.01%)</title><rect x="88.5742%" y="309" width="0.0143%" height="15" fill="rgb(250,208,3)" fg:x="421002810565" fg:w="68095715"/><text x="88.8242%" y="319.50"></text></g><g><title>do_futex (68,095,715 samples, 0.01%)</title><rect x="88.5742%" y="293" width="0.0143%" height="15" fill="rgb(246,54,23)" fg:x="421002810565" fg:w="68095715"/><text x="88.8242%" y="303.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::add_inactive_thread (1,226,052,149 samples, 0.26%)</title><rect x="88.5892%" y="357" width="0.2579%" height="15" fill="rgb(243,76,11)" fg:x="421074106266" fg:w="1226052149"/><text x="88.8392%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,226,052,149 samples, 0.26%)</title><rect x="88.5892%" y="341" width="0.2579%" height="15" fill="rgb(245,21,50)" fg:x="421074106266" fg:w="1226052149"/><text x="88.8392%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_add (1,226,052,149 samples, 0.26%)</title><rect x="88.5892%" y="325" width="0.2579%" height="15" fill="rgb(228,9,43)" fg:x="421074106266" fg:w="1226052149"/><text x="88.8392%" y="335.50"></text></g><g><title>rayon_core::sleep::Sleep::start_looking (1,237,034,984 samples, 0.26%)</title><rect x="88.5885%" y="373" width="0.2603%" height="15" fill="rgb(208,100,47)" fg:x="421070906280" fg:w="1237034984"/><text x="88.8385%" y="383.50"></text></g><g><title>__GI___sched_yield (119,970,043 samples, 0.03%)</title><rect x="88.8488%" y="357" width="0.0252%" height="15" fill="rgb(232,26,8)" fg:x="422307941264" fg:w="119970043"/><text x="89.0988%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (119,970,043 samples, 0.03%)</title><rect x="88.8488%" y="341" width="0.0252%" height="15" fill="rgb(216,166,38)" fg:x="422307941264" fg:w="119970043"/><text x="89.0988%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,922,012,658 samples, 0.40%)</title><rect x="88.8740%" y="341" width="0.4044%" height="15" fill="rgb(251,202,51)" fg:x="422427911307" fg:w="1922012658"/><text x="89.1240%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,922,012,658 samples, 0.40%)</title><rect x="88.8740%" y="325" width="0.4044%" height="15" fill="rgb(254,216,34)" fg:x="422427911307" fg:w="1922012658"/><text x="89.1240%" y="335.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_inactive_thread (1,950,059,415 samples, 0.41%)</title><rect x="88.8740%" y="357" width="0.4103%" height="15" fill="rgb(251,32,27)" fg:x="422427911307" fg:w="1950059415"/><text x="89.1240%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (107,138,400,828 samples, 22.54%)</title><rect x="66.7440%" y="389" width="22.5407%" height="15" fill="rgb(208,127,28)" fg:x="317241364041" fg:w="107138400828"/><text x="66.9940%" y="399.50">rayon_core::registry::WorkerThread::..</text></g><g><title>rayon_core::sleep::Sleep::work_found (2,071,823,605 samples, 0.44%)</title><rect x="88.8488%" y="373" width="0.4359%" height="15" fill="rgb(224,137,22)" fg:x="422307941264" fg:w="2071823605"/><text x="89.0988%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (60,287,736 samples, 0.01%)</title><rect x="89.2852%" y="389" width="0.0127%" height="15" fill="rgb(254,70,32)" fg:x="424382530187" fg:w="60287736"/><text x="89.5352%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (53,777,135 samples, 0.01%)</title><rect x="89.3070%" y="357" width="0.0113%" height="15" fill="rgb(229,75,37)" fg:x="424485843494" fg:w="53777135"/><text x="89.5570%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (65,182,782 samples, 0.01%)</title><rect x="89.3070%" y="373" width="0.0137%" height="15" fill="rgb(252,64,23)" fg:x="424485843494" fg:w="65182782"/><text x="89.5570%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (120,003,485 samples, 0.03%)</title><rect x="89.3216%" y="373" width="0.0252%" height="15" fill="rgb(232,162,48)" fg:x="424555592356" fg:w="120003485"/><text x="89.5716%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (120,003,485 samples, 0.03%)</title><rect x="89.3216%" y="357" width="0.0252%" height="15" fill="rgb(246,160,12)" fg:x="424555592356" fg:w="120003485"/><text x="89.5716%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (102,317,540 samples, 0.02%)</title><rect x="89.3254%" y="341" width="0.0215%" height="15" fill="rgb(247,166,0)" fg:x="424573278301" fg:w="102317540"/><text x="89.5754%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (99,542,645 samples, 0.02%)</title><rect x="89.3259%" y="325" width="0.0209%" height="15" fill="rgb(249,219,21)" fg:x="424576053196" fg:w="99542645"/><text x="89.5759%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (99,542,645 samples, 0.02%)</title><rect x="89.3259%" y="309" width="0.0209%" height="15" fill="rgb(205,209,3)" fg:x="424576053196" fg:w="99542645"/><text x="89.5759%" y="319.50"></text></g><g><title>rayon_core::latch::CoreLatch::fall_asleep (216,967,052 samples, 0.05%)</title><rect x="89.3561%" y="373" width="0.0456%" height="15" fill="rgb(243,44,1)" fg:x="424719300977" fg:w="216967052"/><text x="89.6061%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (214,769,539 samples, 0.05%)</title><rect x="89.3565%" y="357" width="0.0452%" height="15" fill="rgb(206,159,16)" fg:x="424721498490" fg:w="214769539"/><text x="89.6065%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (214,769,539 samples, 0.05%)</title><rect x="89.3565%" y="341" width="0.0452%" height="15" fill="rgb(244,77,30)" fg:x="424721498490" fg:w="214769539"/><text x="89.6065%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (54,744,579 samples, 0.01%)</title><rect x="89.4017%" y="357" width="0.0115%" height="15" fill="rgb(218,69,12)" fg:x="424936268029" fg:w="54744579"/><text x="89.6517%" y="367.50"></text></g><g><title>rayon_core::latch::CoreLatch::get_sleepy (579,515,267 samples, 0.12%)</title><rect x="89.4017%" y="373" width="0.1219%" height="15" fill="rgb(212,87,7)" fg:x="424936268029" fg:w="579515267"/><text x="89.6517%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (524,770,688 samples, 0.11%)</title><rect x="89.4132%" y="357" width="0.1104%" height="15" fill="rgb(245,114,25)" fg:x="424991012608" fg:w="524770688"/><text x="89.6632%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (524,770,688 samples, 0.11%)</title><rect x="89.4132%" y="341" width="0.1104%" height="15" fill="rgb(210,61,42)" fg:x="424991012608" fg:w="524770688"/><text x="89.6632%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (290,251,360 samples, 0.06%)</title><rect x="89.5237%" y="357" width="0.0611%" height="15" fill="rgb(211,52,33)" fg:x="425515783296" fg:w="290251360"/><text x="89.7737%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (290,251,360 samples, 0.06%)</title><rect x="89.5237%" y="341" width="0.0611%" height="15" fill="rgb(234,58,33)" fg:x="425515783296" fg:w="290251360"/><text x="89.7737%" y="351.50"></text></g><g><title>rayon_core::latch::CoreLatch::wake_up (362,374,622 samples, 0.08%)</title><rect x="89.5237%" y="373" width="0.0762%" height="15" fill="rgb(220,115,36)" fg:x="425515783296" fg:w="362374622"/><text x="89.7737%" y="383.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (72,123,262 samples, 0.02%)</title><rect x="89.5847%" y="357" width="0.0152%" height="15" fill="rgb(243,153,54)" fg:x="425806034656" fg:w="72123262"/><text x="89.8347%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (63,951,087 samples, 0.01%)</title><rect x="89.5864%" y="341" width="0.0135%" height="15" fill="rgb(251,47,18)" fg:x="425814206831" fg:w="63951087"/><text x="89.8364%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (63,951,087 samples, 0.01%)</title><rect x="89.5864%" y="325" width="0.0135%" height="15" fill="rgb(242,102,42)" fg:x="425814206831" fg:w="63951087"/><text x="89.8364%" y="335.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::is_empty (86,851,623 samples, 0.02%)</title><rect x="89.6003%" y="341" width="0.0183%" height="15" fill="rgb(234,31,38)" fg:x="425880227398" fg:w="86851623"/><text x="89.8503%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (95,053,842 samples, 0.02%)</title><rect x="89.5999%" y="373" width="0.0200%" height="15" fill="rgb(221,117,51)" fg:x="425878157918" fg:w="95053842"/><text x="89.8499%" y="383.50"></text></g><g><title>rayon_core::registry::WorkerThread::has_injected_job (95,053,842 samples, 0.02%)</title><rect x="89.5999%" y="357" width="0.0200%" height="15" fill="rgb(212,20,18)" fg:x="425878157918" fg:w="95053842"/><text x="89.8499%" y="367.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::try_add_sleeping_thread (60,006,378 samples, 0.01%)</title><rect x="89.6307%" y="373" width="0.0126%" height="15" fill="rgb(245,133,36)" fg:x="426024664993" fg:w="60006378"/><text x="89.8807%" y="383.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::try_exchange (60,006,378 samples, 0.01%)</title><rect x="89.6307%" y="357" width="0.0126%" height="15" fill="rgb(212,6,19)" fg:x="426024664993" fg:w="60006378"/><text x="89.8807%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (55,745,477 samples, 0.01%)</title><rect x="89.6316%" y="341" width="0.0117%" height="15" fill="rgb(218,1,36)" fg:x="426028925894" fg:w="55745477"/><text x="89.8816%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55,745,477 samples, 0.01%)</title><rect x="89.6316%" y="325" width="0.0117%" height="15" fill="rgb(246,84,54)" fg:x="426028925894" fg:w="55745477"/><text x="89.8816%" y="335.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (1,795,658,169 samples, 0.38%)</title><rect x="89.2979%" y="389" width="0.3778%" height="15" fill="rgb(242,110,6)" fg:x="424442817923" fg:w="1795658169"/><text x="89.5479%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (121,178,349 samples, 0.03%)</title><rect x="89.6502%" y="373" width="0.0255%" height="15" fill="rgb(214,47,5)" fg:x="426117297743" fg:w="121178349"/><text x="89.9002%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (117,359,166 samples, 0.02%)</title><rect x="89.6510%" y="357" width="0.0247%" height="15" fill="rgb(218,159,25)" fg:x="426121116926" fg:w="117359166"/><text x="89.9010%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (112,083,185 samples, 0.02%)</title><rect x="89.6521%" y="341" width="0.0236%" height="15" fill="rgb(215,211,28)" fg:x="426126392907" fg:w="112083185"/><text x="89.9021%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (112,083,185 samples, 0.02%)</title><rect x="89.6521%" y="325" width="0.0236%" height="15" fill="rgb(238,59,32)" fg:x="426126392907" fg:w="112083185"/><text x="89.9021%" y="335.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (156,504,808 samples, 0.03%)</title><rect x="89.6757%" y="389" width="0.0329%" height="15" fill="rgb(226,82,3)" fg:x="426238476092" fg:w="156504808"/><text x="89.9257%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,382,682,345 samples, 0.29%)</title><rect x="89.7461%" y="357" width="0.2909%" height="15" fill="rgb(240,164,32)" fg:x="426572872920" fg:w="1382682345"/><text x="89.9961%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (56,904,045 samples, 0.01%)</title><rect x="90.0250%" y="341" width="0.0120%" height="15" fill="rgb(232,46,7)" fg:x="427898651220" fg:w="56904045"/><text x="90.2750%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (56,904,045 samples, 0.01%)</title><rect x="90.0250%" y="325" width="0.0120%" height="15" fill="rgb(229,129,53)" fg:x="427898651220" fg:w="56904045"/><text x="90.2750%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,521,968,908 samples, 0.32%)</title><rect x="89.7367%" y="373" width="0.3202%" height="15" fill="rgb(234,188,29)" fg:x="426528339140" fg:w="1521968908"/><text x="89.9867%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (94,752,783 samples, 0.02%)</title><rect x="90.0370%" y="357" width="0.0199%" height="15" fill="rgb(246,141,4)" fg:x="427955555265" fg:w="94752783"/><text x="90.2870%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (94,752,783 samples, 0.02%)</title><rect x="90.0370%" y="341" width="0.0199%" height="15" fill="rgb(229,23,39)" fg:x="427955555265" fg:w="94752783"/><text x="90.2870%" y="351.50"></text></g><g><title>std::sync::poison::Flag::done (67,894,279 samples, 0.01%)</title><rect x="90.0569%" y="341" width="0.0143%" height="15" fill="rgb(206,12,3)" fg:x="428050308048" fg:w="67894279"/><text x="90.3069%" y="351.50"></text></g><g><title>std::thread::panicking (51,986,275 samples, 0.01%)</title><rect x="90.0602%" y="325" width="0.0109%" height="15" fill="rgb(252,226,20)" fg:x="428066216052" fg:w="51986275"/><text x="90.3102%" y="335.50"></text></g><g><title>std::panicking::panicking (51,986,275 samples, 0.01%)</title><rect x="90.0602%" y="309" width="0.0109%" height="15" fill="rgb(216,123,35)" fg:x="428066216052" fg:w="51986275"/><text x="90.3102%" y="319.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (51,986,275 samples, 0.01%)</title><rect x="90.0602%" y="293" width="0.0109%" height="15" fill="rgb(212,68,40)" fg:x="428066216052" fg:w="51986275"/><text x="90.3102%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1,198,855,990 samples, 0.25%)</title><rect x="90.0862%" y="325" width="0.2522%" height="15" fill="rgb(254,125,32)" fg:x="428189788644" fg:w="1198855990"/><text x="90.3362%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (1,198,855,990 samples, 0.25%)</title><rect x="90.0862%" y="309" width="0.2522%" height="15" fill="rgb(253,97,22)" fg:x="428189788644" fg:w="1198855990"/><text x="90.3362%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (113,612,235 samples, 0.02%)</title><rect x="90.3494%" y="309" width="0.0239%" height="15" fill="rgb(241,101,14)" fg:x="429440819025" fg:w="113612235"/><text x="90.5994%" y="319.50"></text></g><g><title>_raw_spin_lock (101,416,521 samples, 0.02%)</title><rect x="90.6204%" y="245" width="0.0213%" height="15" fill="rgb(238,103,29)" fg:x="430728808033" fg:w="101416521"/><text x="90.8704%" y="255.50"></text></g><g><title>_raw_spin_lock (762,727,036 samples, 0.16%)</title><rect x="90.7208%" y="229" width="0.1605%" height="15" fill="rgb(233,195,47)" fg:x="431206183403" fg:w="762727036"/><text x="90.9708%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath (762,727,036 samples, 0.16%)</title><rect x="90.7208%" y="213" width="0.1605%" height="15" fill="rgb(246,218,30)" fg:x="431206183403" fg:w="762727036"/><text x="90.9708%" y="223.50"></text></g><g><title>get_futex_key (179,333,296 samples, 0.04%)</title><rect x="90.8813%" y="229" width="0.0377%" height="15" fill="rgb(219,145,47)" fg:x="431968910439" fg:w="179333296"/><text x="91.1313%" y="239.50"></text></g><g><title>get_futex_key_refs.isra.0 (135,463,082 samples, 0.03%)</title><rect x="90.8905%" y="213" width="0.0285%" height="15" fill="rgb(243,12,26)" fg:x="432012780653" fg:w="135463082"/><text x="91.1405%" y="223.50"></text></g><g><title>__unqueue_futex (141,021,288 samples, 0.03%)</title><rect x="90.9445%" y="213" width="0.0297%" height="15" fill="rgb(214,87,16)" fg:x="432269016433" fg:w="141021288"/><text x="91.1945%" y="223.50"></text></g><g><title>mark_wake_futex (262,400,389 samples, 0.06%)</title><rect x="90.9208%" y="229" width="0.0552%" height="15" fill="rgb(208,99,42)" fg:x="432156596069" fg:w="262400389"/><text x="91.1708%" y="239.50"></text></g><g><title>llist_add_batch (48,757,361 samples, 0.01%)</title><rect x="91.0014%" y="213" width="0.0103%" height="15" fill="rgb(253,99,2)" fg:x="432539698014" fg:w="48757361"/><text x="91.2514%" y="223.50"></text></g><g><title>_raw_spin_lock (63,784,423 samples, 0.01%)</title><rect x="91.1857%" y="197" width="0.0134%" height="15" fill="rgb(220,168,23)" fg:x="433415443327" fg:w="63784423"/><text x="91.4357%" y="207.50"></text></g><g><title>native_queued_spin_lock_slowpath (63,784,423 samples, 0.01%)</title><rect x="91.1857%" y="181" width="0.0134%" height="15" fill="rgb(242,38,24)" fg:x="433415443327" fg:w="63784423"/><text x="91.4357%" y="191.50"></text></g><g><title>available_idle_cpu (68,509,746 samples, 0.01%)</title><rect x="91.2538%" y="181" width="0.0144%" height="15" fill="rgb(225,182,9)" fg:x="433739398937" fg:w="68509746"/><text x="91.5038%" y="191.50"></text></g><g><title>available_idle_cpu (169,010,315 samples, 0.04%)</title><rect x="91.2745%" y="165" width="0.0356%" height="15" fill="rgb(243,178,37)" fg:x="433837640365" fg:w="169010315"/><text x="91.5245%" y="175.50"></text></g><g><title>cpumask_next_wrap (78,725,374 samples, 0.02%)</title><rect x="91.3526%" y="149" width="0.0166%" height="15" fill="rgb(232,139,19)" fg:x="434208931913" fg:w="78725374"/><text x="91.6026%" y="159.50"></text></g><g><title>find_next_bit (76,844,813 samples, 0.02%)</title><rect x="91.3700%" y="149" width="0.0162%" height="15" fill="rgb(225,201,24)" fg:x="434291588439" fg:w="76844813"/><text x="91.6200%" y="159.50"></text></g><g><title>select_idle_sibling (570,860,522 samples, 0.12%)</title><rect x="91.2682%" y="181" width="0.1201%" height="15" fill="rgb(221,47,46)" fg:x="433807908683" fg:w="570860522"/><text x="91.5182%" y="191.50"></text></g><g><title>select_idle_sibling.part.0 (349,834,061 samples, 0.07%)</title><rect x="91.3147%" y="165" width="0.0736%" height="15" fill="rgb(249,23,13)" fg:x="434028935144" fg:w="349834061"/><text x="91.5647%" y="175.50"></text></g><g><title>select_task_rq_fair (831,199,144 samples, 0.17%)</title><rect x="91.2140%" y="197" width="0.1749%" height="15" fill="rgb(219,9,5)" fg:x="433550181769" fg:w="831199144"/><text x="91.4640%" y="207.50"></text></g><g><title>set_task_cpu (53,057,476 samples, 0.01%)</title><rect x="91.3889%" y="197" width="0.0112%" height="15" fill="rgb(254,171,16)" fg:x="434381380913" fg:w="53057476"/><text x="91.6389%" y="207.50"></text></g><g><title>update_cfs_group (48,561,009 samples, 0.01%)</title><rect x="91.4380%" y="133" width="0.0102%" height="15" fill="rgb(230,171,20)" fg:x="434614825809" fg:w="48561009"/><text x="91.6880%" y="143.50"></text></g><g><title>update_curr (55,533,887 samples, 0.01%)</title><rect x="91.4482%" y="133" width="0.0117%" height="15" fill="rgb(210,71,41)" fg:x="434663386818" fg:w="55533887"/><text x="91.6982%" y="143.50"></text></g><g><title>enqueue_entity (313,679,038 samples, 0.07%)</title><rect x="91.4154%" y="149" width="0.0660%" height="15" fill="rgb(206,173,20)" fg:x="434507519888" fg:w="313679038"/><text x="91.6654%" y="159.50"></text></g><g><title>update_load_avg (102,278,221 samples, 0.02%)</title><rect x="91.4599%" y="133" width="0.0215%" height="15" fill="rgb(233,88,34)" fg:x="434718920705" fg:w="102278221"/><text x="91.7099%" y="143.50"></text></g><g><title>update_cfs_group (75,773,770 samples, 0.02%)</title><rect x="91.4815%" y="149" width="0.0159%" height="15" fill="rgb(223,209,46)" fg:x="434821492646" fg:w="75773770"/><text x="91.7315%" y="159.50"></text></g><g><title>enqueue_task_fair (476,195,206 samples, 0.10%)</title><rect x="91.4056%" y="165" width="0.1002%" height="15" fill="rgb(250,43,18)" fg:x="434460910547" fg:w="476195206"/><text x="91.6556%" y="175.50"></text></g><g><title>record_times (94,765,546 samples, 0.02%)</title><rect x="91.5702%" y="149" width="0.0199%" height="15" fill="rgb(208,13,10)" fg:x="435243389503" fg:w="94765546"/><text x="91.8202%" y="159.50"></text></g><g><title>sched_clock_cpu (48,029,330 samples, 0.01%)</title><rect x="91.5801%" y="133" width="0.0101%" height="15" fill="rgb(212,200,36)" fg:x="435290125719" fg:w="48029330"/><text x="91.8301%" y="143.50"></text></g><g><title>psi_task_change (403,900,046 samples, 0.08%)</title><rect x="91.5058%" y="165" width="0.0850%" height="15" fill="rgb(225,90,30)" fg:x="434937105753" fg:w="403900046"/><text x="91.7558%" y="175.50"></text></g><g><title>activate_task (909,890,217 samples, 0.19%)</title><rect x="91.4021%" y="181" width="0.1914%" height="15" fill="rgb(236,182,39)" fg:x="434444157190" fg:w="909890217"/><text x="91.6521%" y="191.50"></text></g><g><title>check_preempt_curr (61,857,699 samples, 0.01%)</title><rect x="91.5981%" y="165" width="0.0130%" height="15" fill="rgb(212,144,35)" fg:x="435375969680" fg:w="61857699"/><text x="91.8481%" y="175.50"></text></g><g><title>ttwu_do_activate (1,012,497,937 samples, 0.21%)</title><rect x="91.4000%" y="197" width="0.2130%" height="15" fill="rgb(228,63,44)" fg:x="434434438389" fg:w="1012497937"/><text x="91.6500%" y="207.50"></text></g><g><title>ttwu_do_wakeup (78,671,395 samples, 0.02%)</title><rect x="91.5965%" y="181" width="0.0166%" height="15" fill="rgb(228,109,6)" fg:x="435368264931" fg:w="78671395"/><text x="91.8465%" y="191.50"></text></g><g><title>update_cfs_rq_h_load (156,870,379 samples, 0.03%)</title><rect x="91.6135%" y="197" width="0.0330%" height="15" fill="rgb(238,117,24)" fg:x="435448971559" fg:w="156870379"/><text x="91.8635%" y="207.50"></text></g><g><title>try_to_wake_up (3,057,112,233 samples, 0.64%)</title><rect x="91.0150%" y="213" width="0.6432%" height="15" fill="rgb(242,26,26)" fg:x="432604354781" fg:w="3057112233"/><text x="91.2650%" y="223.50"></text></g><g><title>update_rq_clock (55,625,076 samples, 0.01%)</title><rect x="91.6465%" y="197" width="0.0117%" height="15" fill="rgb(221,92,48)" fg:x="435605841938" fg:w="55625076"/><text x="91.8965%" y="207.50"></text></g><g><title>futex_wake (4,825,386,724 samples, 1.02%)</title><rect x="90.6443%" y="245" width="1.0152%" height="15" fill="rgb(209,209,32)" fg:x="430842280213" fg:w="4825386724"/><text x="90.8943%" y="255.50"></text></g><g><title>wake_up_q (3,208,762,813 samples, 0.68%)</title><rect x="90.9844%" y="229" width="0.6751%" height="15" fill="rgb(221,70,22)" fg:x="432458904124" fg:w="3208762813"/><text x="91.2344%" y="239.50"></text></g><g><title>hash_futex (56,933,313 samples, 0.01%)</title><rect x="91.6611%" y="245" width="0.0120%" height="15" fill="rgb(248,145,5)" fg:x="435675121196" fg:w="56933313"/><text x="91.9111%" y="255.50"></text></g><g><title>do_futex (5,070,247,654 samples, 1.07%)</title><rect x="90.6098%" y="261" width="1.0667%" height="15" fill="rgb(226,116,26)" fg:x="430678166580" fg:w="5070247654"/><text x="90.8598%" y="271.50"></text></g><g><title>__x64_sys_futex (5,115,990,074 samples, 1.08%)</title><rect x="90.6010%" y="277" width="1.0763%" height="15" fill="rgb(244,5,17)" fg:x="430636583513" fg:w="5115990074"/><text x="90.8510%" y="287.50"></text></g><g><title>do_syscall_64 (6,123,051,752 samples, 1.29%)</title><rect x="90.4001%" y="293" width="1.2882%" height="15" fill="rgb(252,159,33)" fg:x="429681516304" fg:w="6123051752"/><text x="90.6501%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6,254,497,516 samples, 1.32%)</title><rect x="90.3733%" y="309" width="1.3159%" height="15" fill="rgb(206,71,0)" fg:x="429554431260" fg:w="6254497516"/><text x="90.6233%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (8,006,023,394 samples, 1.68%)</title><rect x="90.0569%" y="373" width="1.6844%" height="15" fill="rgb(233,118,54)" fg:x="428050308048" fg:w="8006023394"/><text x="90.3069%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,006,023,394 samples, 1.68%)</title><rect x="90.0569%" y="357" width="1.6844%" height="15" fill="rgb(234,83,48)" fg:x="428050308048" fg:w="8006023394"/><text x="90.3069%" y="367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (7,938,129,115 samples, 1.67%)</title><rect x="90.0712%" y="341" width="1.6701%" height="15" fill="rgb(228,3,54)" fg:x="428118202327" fg:w="7938129115"/><text x="90.3212%" y="351.50"></text></g><g><title>syscall (6,657,926,048 samples, 1.40%)</title><rect x="90.3405%" y="325" width="1.4008%" height="15" fill="rgb(226,155,13)" fg:x="429398405394" fg:w="6657926048"/><text x="90.5905%" y="335.50"></text></g><g><title>syscall_return_via_sysret (239,844,007 samples, 0.05%)</title><rect x="91.6908%" y="309" width="0.0505%" height="15" fill="rgb(241,28,37)" fg:x="435816487435" fg:w="239844007"/><text x="91.9408%" y="319.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_sleeping_thread (267,190,064 samples, 0.06%)</title><rect x="91.7413%" y="373" width="0.0562%" height="15" fill="rgb(233,93,10)" fg:x="436056331442" fg:w="267190064"/><text x="91.9913%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (267,190,064 samples, 0.06%)</title><rect x="91.7413%" y="357" width="0.0562%" height="15" fill="rgb(225,113,19)" fg:x="436056331442" fg:w="267190064"/><text x="91.9913%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (267,190,064 samples, 0.06%)</title><rect x="91.7413%" y="341" width="0.0562%" height="15" fill="rgb(241,2,18)" fg:x="436056331442" fg:w="267190064"/><text x="91.9913%" y="351.50"></text></g><g><title>std::sync::poison::Flag::get (144,310,934 samples, 0.03%)</title><rect x="91.8071%" y="325" width="0.0304%" height="15" fill="rgb(228,207,21)" fg:x="436369233555" fg:w="144310934"/><text x="92.0571%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (144,310,934 samples, 0.03%)</title><rect x="91.8071%" y="309" width="0.0304%" height="15" fill="rgb(213,211,35)" fg:x="436369233555" fg:w="144310934"/><text x="92.0571%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (144,310,934 samples, 0.03%)</title><rect x="91.8071%" y="293" width="0.0304%" height="15" fill="rgb(209,83,10)" fg:x="436369233555" fg:w="144310934"/><text x="92.0571%" y="303.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (245,565,752 samples, 0.05%)</title><rect x="91.7975%" y="357" width="0.0517%" height="15" fill="rgb(209,164,1)" fg:x="436323521506" fg:w="245565752"/><text x="92.0475%" y="367.50"></text></g><g><title>std::sync::poison::Flag::guard (245,565,752 samples, 0.05%)</title><rect x="91.7975%" y="341" width="0.0517%" height="15" fill="rgb(213,184,43)" fg:x="436323521506" fg:w="245565752"/><text x="92.0475%" y="351.50"></text></g><g><title>std::thread::panicking (55,542,769 samples, 0.01%)</title><rect x="91.8375%" y="325" width="0.0117%" height="15" fill="rgb(231,61,34)" fg:x="436513544489" fg:w="55542769"/><text x="92.0875%" y="335.50"></text></g><g><title>std::panicking::panicking (55,542,769 samples, 0.01%)</title><rect x="91.8375%" y="309" width="0.0117%" height="15" fill="rgb(235,75,3)" fg:x="436513544489" fg:w="55542769"/><text x="92.0875%" y="319.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (55,542,769 samples, 0.01%)</title><rect x="91.8375%" y="293" width="0.0117%" height="15" fill="rgb(220,106,47)" fg:x="436513544489" fg:w="55542769"/><text x="92.0875%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48,344,495 samples, 0.01%)</title><rect x="91.8390%" y="277" width="0.0102%" height="15" fill="rgb(210,196,33)" fg:x="436520742763" fg:w="48344495"/><text x="92.0890%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (48,344,495 samples, 0.01%)</title><rect x="91.8390%" y="261" width="0.0102%" height="15" fill="rgb(229,154,42)" fg:x="436520742763" fg:w="48344495"/><text x="92.0890%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (122,832,038 samples, 0.03%)</title><rect x="91.8553%" y="341" width="0.0258%" height="15" fill="rgb(228,114,26)" fg:x="436598211897" fg:w="122832038"/><text x="92.1053%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (122,832,038 samples, 0.03%)</title><rect x="91.8553%" y="325" width="0.0258%" height="15" fill="rgb(208,144,1)" fg:x="436598211897" fg:w="122832038"/><text x="92.1053%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2,449,386,922 samples, 0.52%)</title><rect x="91.8811%" y="341" width="0.5153%" height="15" fill="rgb(239,112,37)" fg:x="436721043935" fg:w="2449386922"/><text x="92.1311%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2,449,386,922 samples, 0.52%)</title><rect x="91.8811%" y="325" width="0.5153%" height="15" fill="rgb(210,96,50)" fg:x="436721043935" fg:w="2449386922"/><text x="92.1311%" y="335.50"></text></g><g><title>entry_SYSCALL_64 (102,796,330 samples, 0.02%)</title><rect x="92.3969%" y="325" width="0.0216%" height="15" fill="rgb(222,178,2)" fg:x="439172658007" fg:w="102796330"/><text x="92.6469%" y="335.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2,954,168,384 samples, 0.62%)</title><rect x="91.7975%" y="373" width="0.6215%" height="15" fill="rgb(226,74,18)" fg:x="436323521506" fg:w="2954168384"/><text x="92.0475%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (2,708,602,632 samples, 0.57%)</title><rect x="91.8491%" y="357" width="0.5699%" height="15" fill="rgb(225,67,54)" fg:x="436569087258" fg:w="2708602632"/><text x="92.0991%" y="367.50"></text></g><g><title>syscall (105,031,883 samples, 0.02%)</title><rect x="92.3969%" y="341" width="0.0221%" height="15" fill="rgb(251,92,32)" fg:x="439172658007" fg:w="105031883"/><text x="92.6469%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (163,304,088 samples, 0.03%)</title><rect x="92.4266%" y="357" width="0.0344%" height="15" fill="rgb(228,149,22)" fg:x="439313887580" fg:w="163304088"/><text x="92.6766%" y="367.50"></text></g><g><title>_raw_spin_lock (84,826,178 samples, 0.02%)</title><rect x="92.6574%" y="293" width="0.0178%" height="15" fill="rgb(243,54,13)" fg:x="440410711631" fg:w="84826178"/><text x="92.9074%" y="303.50"></text></g><g><title>get_futex_key (56,807,375 samples, 0.01%)</title><rect x="92.7683%" y="277" width="0.0120%" height="15" fill="rgb(243,180,28)" fg:x="440937764786" fg:w="56807375"/><text x="93.0183%" y="287.50"></text></g><g><title>__unqueue_futex (48,631,891 samples, 0.01%)</title><rect x="92.8391%" y="261" width="0.0102%" height="15" fill="rgb(208,167,24)" fg:x="441274546920" fg:w="48631891"/><text x="93.0891%" y="271.50"></text></g><g><title>mark_wake_futex (325,260,854 samples, 0.07%)</title><rect x="92.7821%" y="277" width="0.0684%" height="15" fill="rgb(245,73,45)" fg:x="441003592699" fg:w="325260854"/><text x="93.0321%" y="287.50"></text></g><g><title>_raw_spin_lock (75,303,073 samples, 0.02%)</title><rect x="92.8725%" y="261" width="0.0158%" height="15" fill="rgb(237,203,48)" fg:x="441433360728" fg:w="75303073"/><text x="93.1225%" y="271.50"></text></g><g><title>_raw_spin_lock (77,091,369 samples, 0.02%)</title><rect x="93.0438%" y="245" width="0.0162%" height="15" fill="rgb(211,197,16)" fg:x="442247303234" fg:w="77091369"/><text x="93.2938%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (77,091,369 samples, 0.02%)</title><rect x="93.0438%" y="229" width="0.0162%" height="15" fill="rgb(243,99,51)" fg:x="442247303234" fg:w="77091369"/><text x="93.2938%" y="239.50"></text></g><g><title>available_idle_cpu (86,422,447 samples, 0.02%)</title><rect x="93.1486%" y="229" width="0.0182%" height="15" fill="rgb(215,123,29)" fg:x="442745648851" fg:w="86422447"/><text x="93.3986%" y="239.50"></text></g><g><title>available_idle_cpu (231,339,825 samples, 0.05%)</title><rect x="93.1735%" y="213" width="0.0487%" height="15" fill="rgb(239,186,37)" fg:x="442863853215" fg:w="231339825"/><text x="93.4235%" y="223.50"></text></g><g><title>cpumask_next_wrap (135,251,405 samples, 0.03%)</title><rect x="93.2931%" y="197" width="0.0285%" height="15" fill="rgb(252,136,39)" fg:x="443432456363" fg:w="135251405"/><text x="93.5431%" y="207.50"></text></g><g><title>find_next_bit (112,805,283 samples, 0.02%)</title><rect x="93.3246%" y="197" width="0.0237%" height="15" fill="rgb(223,213,32)" fg:x="443582078976" fg:w="112805283"/><text x="93.5746%" y="207.50"></text></g><g><title>select_idle_sibling (873,707,344 samples, 0.18%)</title><rect x="93.1668%" y="229" width="0.1838%" height="15" fill="rgb(233,115,5)" fg:x="442832071298" fg:w="873707344"/><text x="93.4168%" y="239.50"></text></g><g><title>select_idle_sibling.part.0 (590,239,615 samples, 0.12%)</title><rect x="93.2264%" y="213" width="0.1242%" height="15" fill="rgb(207,226,44)" fg:x="443115539027" fg:w="590239615"/><text x="93.4764%" y="223.50"></text></g><g><title>select_task_rq_fair (1,337,935,444 samples, 0.28%)</title><rect x="93.0765%" y="245" width="0.2815%" height="15" fill="rgb(208,126,0)" fg:x="442402767657" fg:w="1337935444"/><text x="93.3265%" y="255.50"></text></g><g><title>set_task_cpu (75,986,051 samples, 0.02%)</title><rect x="93.3580%" y="245" width="0.0160%" height="15" fill="rgb(244,66,21)" fg:x="443740703101" fg:w="75986051"/><text x="93.6080%" y="255.50"></text></g><g><title>migrate_task_rq_fair (57,728,973 samples, 0.01%)</title><rect x="93.3618%" y="229" width="0.0121%" height="15" fill="rgb(222,97,12)" fg:x="443758960179" fg:w="57728973"/><text x="93.6118%" y="239.50"></text></g><g><title>update_cfs_group (90,413,529 samples, 0.02%)</title><rect x="93.4407%" y="181" width="0.0190%" height="15" fill="rgb(219,213,19)" fg:x="444133960348" fg:w="90413529"/><text x="93.6907%" y="191.50"></text></g><g><title>reweight_entity (51,984,158 samples, 0.01%)</title><rect x="93.4488%" y="165" width="0.0109%" height="15" fill="rgb(252,169,30)" fg:x="444172389719" fg:w="51984158"/><text x="93.6988%" y="175.50"></text></g><g><title>update_curr (76,356,061 samples, 0.02%)</title><rect x="93.4597%" y="181" width="0.0161%" height="15" fill="rgb(206,32,51)" fg:x="444224373877" fg:w="76356061"/><text x="93.7097%" y="191.50"></text></g><g><title>enqueue_entity (569,113,611 samples, 0.12%)</title><rect x="93.4070%" y="197" width="0.1197%" height="15" fill="rgb(250,172,42)" fg:x="443973682541" fg:w="569113611"/><text x="93.6570%" y="207.50"></text></g><g><title>update_load_avg (242,066,214 samples, 0.05%)</title><rect x="93.4758%" y="181" width="0.0509%" height="15" fill="rgb(209,34,43)" fg:x="444300729938" fg:w="242066214"/><text x="93.7258%" y="191.50"></text></g><g><title>update_cfs_group (75,092,163 samples, 0.02%)</title><rect x="93.5274%" y="197" width="0.0158%" height="15" fill="rgb(223,11,35)" fg:x="444545882101" fg:w="75092163"/><text x="93.7774%" y="207.50"></text></g><g><title>enqueue_task_fair (845,477,344 samples, 0.18%)</title><rect x="93.3777%" y="213" width="0.1779%" height="15" fill="rgb(251,219,26)" fg:x="443834699655" fg:w="845477344"/><text x="93.6277%" y="223.50"></text></g><g><title>update_load_avg (55,846,754 samples, 0.01%)</title><rect x="93.5439%" y="197" width="0.0117%" height="15" fill="rgb(231,119,3)" fg:x="444624330245" fg:w="55846754"/><text x="93.7939%" y="207.50"></text></g><g><title>psi_task_change (512,527,194 samples, 0.11%)</title><rect x="93.5563%" y="213" width="0.1078%" height="15" fill="rgb(216,97,11)" fg:x="444683249328" fg:w="512527194"/><text x="93.8063%" y="223.50"></text></g><g><title>record_times (118,506,994 samples, 0.02%)</title><rect x="93.6392%" y="197" width="0.0249%" height="15" fill="rgb(223,59,9)" fg:x="445077269528" fg:w="118506994"/><text x="93.8892%" y="207.50"></text></g><g><title>sched_clock_cpu (69,029,035 samples, 0.01%)</title><rect x="93.6496%" y="181" width="0.0145%" height="15" fill="rgb(233,93,31)" fg:x="445126747487" fg:w="69029035"/><text x="93.8996%" y="191.50"></text></g><g><title>native_sched_clock (54,974,672 samples, 0.01%)</title><rect x="93.6525%" y="165" width="0.0116%" height="15" fill="rgb(239,81,33)" fg:x="445140801850" fg:w="54974672"/><text x="93.9025%" y="175.50"></text></g><g><title>activate_task (1,372,854,394 samples, 0.29%)</title><rect x="93.3763%" y="229" width="0.2888%" height="15" fill="rgb(213,120,34)" fg:x="443827747142" fg:w="1372854394"/><text x="93.6263%" y="239.50"></text></g><g><title>resched_curr (49,897,041 samples, 0.01%)</title><rect x="93.6883%" y="197" width="0.0105%" height="15" fill="rgb(243,49,53)" fg:x="445310650742" fg:w="49897041"/><text x="93.9383%" y="207.50"></text></g><g><title>check_preempt_curr (133,001,828 samples, 0.03%)</title><rect x="93.6731%" y="213" width="0.0280%" height="15" fill="rgb(247,216,33)" fg:x="445238677161" fg:w="133001828"/><text x="93.9231%" y="223.50"></text></g><g><title>ttwu_do_activate (1,570,362,108 samples, 0.33%)</title><rect x="93.3740%" y="245" width="0.3304%" height="15" fill="rgb(226,26,14)" fg:x="443816689152" fg:w="1570362108"/><text x="93.6240%" y="255.50"></text></g><g><title>ttwu_do_wakeup (178,747,939 samples, 0.04%)</title><rect x="93.6667%" y="229" width="0.0376%" height="15" fill="rgb(215,49,53)" fg:x="445208303321" fg:w="178747939"/><text x="93.9167%" y="239.50"></text></g><g><title>update_cfs_rq_h_load (226,256,627 samples, 0.05%)</title><rect x="93.7043%" y="245" width="0.0476%" height="15" fill="rgb(245,162,40)" fg:x="445387051260" fg:w="226256627"/><text x="93.9543%" y="255.50"></text></g><g><title>try_to_wake_up (4,098,613,195 samples, 0.86%)</title><rect x="92.9014%" y="261" width="0.8623%" height="15" fill="rgb(229,68,17)" fg:x="441570783437" fg:w="4098613195"/><text x="93.1514%" y="271.50"></text></g><g><title>update_rq_clock (56,088,745 samples, 0.01%)</title><rect x="93.7519%" y="245" width="0.0118%" height="15" fill="rgb(213,182,10)" fg:x="445613307887" fg:w="56088745"/><text x="94.0019%" y="255.50"></text></g><g><title>futex_wake (5,174,778,397 samples, 1.09%)</title><rect x="92.6758%" y="293" width="1.0887%" height="15" fill="rgb(245,125,30)" fg:x="440498041994" fg:w="5174778397"/><text x="92.9258%" y="303.50"></text></g><g><title>wake_up_q (4,292,006,567 samples, 0.90%)</title><rect x="92.8615%" y="277" width="0.9030%" height="15" fill="rgb(232,202,2)" fg:x="441380813824" fg:w="4292006567"/><text x="93.1115%" y="287.50"></text></g><g><title>hash_futex (55,748,878 samples, 0.01%)</title><rect x="93.7657%" y="293" width="0.0117%" height="15" fill="rgb(237,140,51)" fg:x="445678740543" fg:w="55748878"/><text x="94.0157%" y="303.50"></text></g><g><title>do_futex (5,377,101,178 samples, 1.13%)</title><rect x="92.6487%" y="309" width="1.1313%" height="15" fill="rgb(236,157,25)" fg:x="440369545057" fg:w="5377101178"/><text x="92.8987%" y="319.50"></text></g><g><title>__x64_sys_futex (5,425,292,832 samples, 1.14%)</title><rect x="92.6390%" y="325" width="1.1414%" height="15" fill="rgb(219,209,0)" fg:x="440323534472" fg:w="5425292832"/><text x="92.8890%" y="335.50"></text></g><g><title>do_syscall_64 (6,213,250,349 samples, 1.31%)</title><rect x="92.4815%" y="341" width="1.3072%" height="15" fill="rgb(240,116,54)" fg:x="439574733193" fg:w="6213250349"/><text x="92.7315%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6,319,528,375 samples, 1.33%)</title><rect x="92.4610%" y="357" width="1.3296%" height="15" fill="rgb(216,10,36)" fg:x="439477191668" fg:w="6319528375"/><text x="92.7110%" y="367.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (19,648,808,471 samples, 4.13%)</title><rect x="89.7086%" y="389" width="4.1339%" height="15" fill="rgb(222,72,44)" fg:x="426394980900" fg:w="19648808471"/><text x="89.9586%" y="399.50">rayon..</text></g><g><title>syscall (6,766,099,481 samples, 1.42%)</title><rect x="92.4190%" y="373" width="1.4235%" height="15" fill="rgb(232,159,9)" fg:x="439277689890" fg:w="6766099481"/><text x="92.6690%" y="383.50"></text></g><g><title>syscall_return_via_sysret (237,229,590 samples, 0.05%)</title><rect x="93.7926%" y="357" width="0.0499%" height="15" fill="rgb(210,39,32)" fg:x="445806559781" fg:w="237229590"/><text x="94.0426%" y="367.50"></text></g><g><title>reschedule_interrupt (65,124,032 samples, 0.01%)</title><rect x="93.8425%" y="389" width="0.0137%" height="15" fill="rgb(216,194,45)" fg:x="446043789371" fg:w="65124032"/><text x="94.0925%" y="399.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (60,251,854 samples, 0.01%)</title><rect x="93.8569%" y="389" width="0.0127%" height="15" fill="rgb(218,18,35)" fg:x="446112045675" fg:w="60251854"/><text x="94.1069%" y="399.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (64,238,682 samples, 0.01%)</title><rect x="93.8797%" y="341" width="0.0135%" height="15" fill="rgb(207,83,51)" fg:x="446220658495" fg:w="64238682"/><text x="94.1297%" y="351.50"></text></g><g><title>perf_pmu_disable.part.0 (48,637,062 samples, 0.01%)</title><rect x="94.3347%" y="149" width="0.0102%" height="15" fill="rgb(225,63,43)" fg:x="448383187462" fg:w="48637062"/><text x="94.5847%" y="159.50"></text></g><g><title>ctx_sched_out (141,743,500 samples, 0.03%)</title><rect x="94.3277%" y="165" width="0.0298%" height="15" fill="rgb(207,57,36)" fg:x="448350149557" fg:w="141743500"/><text x="94.5777%" y="175.50"></text></g><g><title>__perf_event_task_sched_out (247,170,215 samples, 0.05%)</title><rect x="94.3074%" y="197" width="0.0520%" height="15" fill="rgb(216,99,33)" fg:x="448253442287" fg:w="247170215"/><text x="94.5574%" y="207.50"></text></g><g><title>task_ctx_sched_out (150,462,945 samples, 0.03%)</title><rect x="94.3277%" y="181" width="0.0317%" height="15" fill="rgb(225,42,16)" fg:x="448350149557" fg:w="150462945"/><text x="94.5777%" y="191.50"></text></g><g><title>_raw_spin_lock (165,555,894 samples, 0.03%)</title><rect x="94.3641%" y="197" width="0.0348%" height="15" fill="rgb(220,201,45)" fg:x="448523170952" fg:w="165555894"/><text x="94.6141%" y="207.50"></text></g><g><title>update_cfs_group (92,104,610 samples, 0.02%)</title><rect x="94.4724%" y="149" width="0.0194%" height="15" fill="rgb(225,33,4)" fg:x="449037514017" fg:w="92104610"/><text x="94.7224%" y="159.50"></text></g><g><title>update_curr (189,694,677 samples, 0.04%)</title><rect x="94.4917%" y="149" width="0.0399%" height="15" fill="rgb(224,33,50)" fg:x="449129618627" fg:w="189694677"/><text x="94.7417%" y="159.50"></text></g><g><title>__update_load_avg_cfs_rq (132,319,195 samples, 0.03%)</title><rect x="94.5688%" y="133" width="0.0278%" height="15" fill="rgb(246,198,51)" fg:x="449495792606" fg:w="132319195"/><text x="94.8188%" y="143.50"></text></g><g><title>__update_load_avg_se (88,772,045 samples, 0.02%)</title><rect x="94.5966%" y="133" width="0.0187%" height="15" fill="rgb(205,22,4)" fg:x="449628111801" fg:w="88772045"/><text x="94.8466%" y="143.50"></text></g><g><title>update_load_avg (434,918,577 samples, 0.09%)</title><rect x="94.5316%" y="149" width="0.0915%" height="15" fill="rgb(206,3,8)" fg:x="449319313304" fg:w="434918577"/><text x="94.7816%" y="159.50"></text></g><g><title>dequeue_entity (886,349,409 samples, 0.19%)</title><rect x="94.4408%" y="165" width="0.1865%" height="15" fill="rgb(251,23,15)" fg:x="448887627905" fg:w="886349409"/><text x="94.6908%" y="175.50"></text></g><g><title>reweight_entity (79,756,802 samples, 0.02%)</title><rect x="94.6443%" y="149" width="0.0168%" height="15" fill="rgb(252,88,28)" fg:x="449855013514" fg:w="79756802"/><text x="94.8943%" y="159.50"></text></g><g><title>update_cfs_group (164,504,882 samples, 0.03%)</title><rect x="94.6277%" y="165" width="0.0346%" height="15" fill="rgb(212,127,14)" fg:x="449776089206" fg:w="164504882"/><text x="94.8777%" y="175.50"></text></g><g><title>update_load_avg (118,769,055 samples, 0.02%)</title><rect x="94.6629%" y="165" width="0.0250%" height="15" fill="rgb(247,145,37)" fg:x="449942980514" fg:w="118769055"/><text x="94.9129%" y="175.50"></text></g><g><title>dequeue_task_fair (1,324,722,956 samples, 0.28%)</title><rect x="94.4108%" y="181" width="0.2787%" height="15" fill="rgb(209,117,53)" fg:x="448745051444" fg:w="1324722956"/><text x="94.6608%" y="191.50"></text></g><g><title>record_times (204,819,207 samples, 0.04%)</title><rect x="94.8364%" y="165" width="0.0431%" height="15" fill="rgb(212,90,42)" fg:x="450767926081" fg:w="204819207"/><text x="95.0864%" y="175.50"></text></g><g><title>sched_clock_cpu (86,132,012 samples, 0.02%)</title><rect x="94.8614%" y="149" width="0.0181%" height="15" fill="rgb(218,164,37)" fg:x="450886613276" fg:w="86132012"/><text x="95.1114%" y="159.50"></text></g><g><title>native_sched_clock (71,492,452 samples, 0.02%)</title><rect x="94.8645%" y="133" width="0.0150%" height="15" fill="rgb(246,65,34)" fg:x="450901252836" fg:w="71492452"/><text x="95.1145%" y="143.50"></text></g><g><title>psi_task_change (893,895,384 samples, 0.19%)</title><rect x="94.6922%" y="181" width="0.1881%" height="15" fill="rgb(231,100,33)" fg:x="450082278800" fg:w="893895384"/><text x="94.9422%" y="191.50"></text></g><g><title>deactivate_task (2,310,902,222 samples, 0.49%)</title><rect x="94.4004%" y="197" width="0.4862%" height="15" fill="rgb(228,126,14)" fg:x="448695321885" fg:w="2310902222"/><text x="94.6504%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (274,326,012 samples, 0.06%)</title><rect x="94.9224%" y="181" width="0.0577%" height="15" fill="rgb(215,173,21)" fg:x="451176418520" fg:w="274326012"/><text x="95.1724%" y="191.50"></text></g><g><title>perf_pmu_enable.part.0 (195,265,303 samples, 0.04%)</title><rect x="94.9390%" y="165" width="0.0411%" height="15" fill="rgb(210,6,40)" fg:x="451255479229" fg:w="195265303"/><text x="95.1890%" y="175.50"></text></g><g><title>x86_pmu_enable (190,222,875 samples, 0.04%)</title><rect x="94.9401%" y="149" width="0.0400%" height="15" fill="rgb(212,48,18)" fg:x="451260521657" fg:w="190222875"/><text x="95.1901%" y="159.50"></text></g><g><title>intel_pmu_enable_all (182,752,140 samples, 0.04%)</title><rect x="94.9416%" y="133" width="0.0384%" height="15" fill="rgb(230,214,11)" fg:x="451267992392" fg:w="182752140"/><text x="95.1916%" y="143.50"></text></g><g><title>native_write_msr (162,050,548 samples, 0.03%)</title><rect x="94.9460%" y="117" width="0.0341%" height="15" fill="rgb(254,105,39)" fg:x="451288693984" fg:w="162050548"/><text x="95.1960%" y="127.50"></text></g><g><title>finish_task_switch (462,246,857 samples, 0.10%)</title><rect x="94.8897%" y="197" width="0.0973%" height="15" fill="rgb(245,158,5)" fg:x="451021254139" fg:w="462246857"/><text x="95.1397%" y="207.50"></text></g><g><title>find_busiest_group (48,482,996 samples, 0.01%)</title><rect x="95.0286%" y="149" width="0.0102%" height="15" fill="rgb(249,208,11)" fg:x="451681227285" fg:w="48482996"/><text x="95.2786%" y="159.50"></text></g><g><title>load_balance (87,773,221 samples, 0.02%)</title><rect x="95.0210%" y="165" width="0.0185%" height="15" fill="rgb(210,39,28)" fg:x="451645108602" fg:w="87773221"/><text x="95.2710%" y="175.50"></text></g><g><title>newidle_balance (173,850,246 samples, 0.04%)</title><rect x="95.0039%" y="181" width="0.0366%" height="15" fill="rgb(211,56,53)" fg:x="451564059700" fg:w="173850246"/><text x="95.2539%" y="191.50"></text></g><g><title>set_next_entity (63,172,629 samples, 0.01%)</title><rect x="95.0505%" y="181" width="0.0133%" height="15" fill="rgb(226,201,30)" fg:x="451785661084" fg:w="63172629"/><text x="95.3005%" y="191.50"></text></g><g><title>pick_next_task_fair (364,340,684 samples, 0.08%)</title><rect x="94.9889%" y="197" width="0.0767%" height="15" fill="rgb(239,101,34)" fg:x="451492923828" fg:w="364340684"/><text x="95.2389%" y="207.50"></text></g><g><title>__update_idle_core (111,705,162 samples, 0.02%)</title><rect x="95.0820%" y="165" width="0.0235%" height="15" fill="rgb(226,209,5)" fg:x="451935150106" fg:w="111705162"/><text x="95.3320%" y="175.50"></text></g><g><title>pick_next_task_idle (193,744,000 samples, 0.04%)</title><rect x="95.0656%" y="197" width="0.0408%" height="15" fill="rgb(250,105,47)" fg:x="451857264512" fg:w="193744000"/><text x="95.3156%" y="207.50"></text></g><g><title>set_next_task_idle (124,348,759 samples, 0.03%)</title><rect x="95.0802%" y="181" width="0.0262%" height="15" fill="rgb(230,72,3)" fg:x="451926659753" fg:w="124348759"/><text x="95.3302%" y="191.50"></text></g><g><title>__sched_text_start (4,117,811,622 samples, 0.87%)</title><rect x="94.2667%" y="213" width="0.8663%" height="15" fill="rgb(232,218,39)" fg:x="448059968296" fg:w="4117811622"/><text x="94.5167%" y="223.50"></text></g><g><title>update_rq_clock (66,667,555 samples, 0.01%)</title><rect x="95.1190%" y="197" width="0.0140%" height="15" fill="rgb(248,166,6)" fg:x="452111112363" fg:w="66667555"/><text x="95.3690%" y="207.50"></text></g><g><title>futex_wait_queue_me (4,362,011,899 samples, 0.92%)</title><rect x="94.2325%" y="245" width="0.9177%" height="15" fill="rgb(247,89,20)" fg:x="447897519822" fg:w="4362011899"/><text x="94.4825%" y="255.50"></text></g><g><title>schedule (4,238,951,487 samples, 0.89%)</title><rect x="94.2584%" y="229" width="0.8918%" height="15" fill="rgb(248,130,54)" fg:x="448020580234" fg:w="4238951487"/><text x="94.5084%" y="239.50"></text></g><g><title>get_futex_key (74,192,832 samples, 0.02%)</title><rect x="95.1857%" y="229" width="0.0156%" height="15" fill="rgb(234,196,4)" fg:x="452428038889" fg:w="74192832"/><text x="95.4357%" y="239.50"></text></g><g><title>futex_wait_setup (272,671,028 samples, 0.06%)</title><rect x="95.1502%" y="245" width="0.0574%" height="15" fill="rgb(250,143,31)" fg:x="452259531721" fg:w="272671028"/><text x="95.4002%" y="255.50"></text></g><g><title>hash_futex (50,747,361 samples, 0.01%)</title><rect x="95.2142%" y="245" width="0.0107%" height="15" fill="rgb(211,110,34)" fg:x="452563683764" fg:w="50747361"/><text x="95.4642%" y="255.50"></text></g><g><title>futex_wait (5,043,947,035 samples, 1.06%)</title><rect x="94.1728%" y="261" width="1.0612%" height="15" fill="rgb(215,124,48)" fg:x="447613707301" fg:w="5043947035"/><text x="94.4228%" y="271.50"></text></g><g><title>do_futex (5,130,579,868 samples, 1.08%)</title><rect x="94.1561%" y="277" width="1.0794%" height="15" fill="rgb(216,46,13)" fg:x="447534529620" fg:w="5130579868"/><text x="94.4061%" y="287.50"></text></g><g><title>__x64_sys_futex (5,233,413,831 samples, 1.10%)</title><rect x="94.1361%" y="293" width="1.1011%" height="15" fill="rgb(205,184,25)" fg:x="447439245564" fg:w="5233413831"/><text x="94.3861%" y="303.50"></text></g><g><title>do_syscall_64 (6,216,291,420 samples, 1.31%)</title><rect x="93.9656%" y="309" width="1.3078%" height="15" fill="rgb(228,1,10)" fg:x="446628702225" fg:w="6216291420"/><text x="94.2156%" y="319.50"></text></g><g><title>switch_fpu_return (156,301,684 samples, 0.03%)</title><rect x="95.2405%" y="293" width="0.0329%" height="15" fill="rgb(213,116,27)" fg:x="452688691961" fg:w="156301684"/><text x="95.4905%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6,376,284,501 samples, 1.34%)</title><rect x="93.9367%" y="325" width="1.3415%" height="15" fill="rgb(241,95,50)" fg:x="446491681098" fg:w="6376284501"/><text x="94.1867%" y="335.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (6,986,707,450 samples, 1.47%)</title><rect x="93.8792%" y="357" width="1.4699%" height="15" fill="rgb(238,48,32)" fg:x="446217953540" fg:w="6986707450"/><text x="94.1292%" y="367.50"></text></g><g><title>syscall (6,906,142,919 samples, 1.45%)</title><rect x="93.8961%" y="341" width="1.4530%" height="15" fill="rgb(235,113,49)" fg:x="446298518071" fg:w="6906142919"/><text x="94.1461%" y="351.50"></text></g><g><title>syscall_return_via_sysret (296,745,991 samples, 0.06%)</title><rect x="95.2866%" y="325" width="0.0624%" height="15" fill="rgb(205,127,43)" fg:x="452907914999" fg:w="296745991"/><text x="95.5366%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (309,325,459 samples, 0.07%)</title><rect x="95.3505%" y="341" width="0.0651%" height="15" fill="rgb(250,162,2)" fg:x="453211189884" fg:w="309325459"/><text x="95.6005%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (309,325,459 samples, 0.07%)</title><rect x="95.3505%" y="325" width="0.0651%" height="15" fill="rgb(220,13,41)" fg:x="453211189884" fg:w="309325459"/><text x="95.6005%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (325,903,219 samples, 0.07%)</title><rect x="95.3491%" y="357" width="0.0686%" height="15" fill="rgb(249,221,25)" fg:x="453204660990" fg:w="325903219"/><text x="95.5991%" y="367.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (7,366,873,384 samples, 1.55%)</title><rect x="93.8739%" y="389" width="1.5499%" height="15" fill="rgb(215,208,19)" fg:x="446192752732" fg:w="7366873384"/><text x="94.1239%" y="399.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (7,352,801,991 samples, 1.55%)</title><rect x="93.8768%" y="373" width="1.5469%" height="15" fill="rgb(236,175,2)" fg:x="446206824125" fg:w="7352801991"/><text x="94.1268%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (344,247,910 samples, 0.07%)</title><rect x="95.4444%" y="373" width="0.0724%" height="15" fill="rgb(241,52,2)" fg:x="453657907217" fg:w="344247910"/><text x="95.6944%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (344,247,910 samples, 0.07%)</title><rect x="95.4444%" y="357" width="0.0724%" height="15" fill="rgb(248,140,14)" fg:x="453657907217" fg:w="344247910"/><text x="95.6944%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (316,789,456 samples, 0.07%)</title><rect x="95.5169%" y="373" width="0.0666%" height="15" fill="rgb(253,22,42)" fg:x="454002155127" fg:w="316789456"/><text x="95.7669%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (316,789,456 samples, 0.07%)</title><rect x="95.5169%" y="357" width="0.0666%" height="15" fill="rgb(234,61,47)" fg:x="454002155127" fg:w="316789456"/><text x="95.7669%" y="367.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (117,715,965 samples, 0.02%)</title><rect x="95.5890%" y="357" width="0.0248%" height="15" fill="rgb(208,226,15)" fg:x="454344907252" fg:w="117715965"/><text x="95.8390%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (94,986,990 samples, 0.02%)</title><rect x="95.5938%" y="341" width="0.0200%" height="15" fill="rgb(217,221,4)" fg:x="454367636227" fg:w="94986990"/><text x="95.8438%" y="351.50"></text></g><g><title>std::sys::pal::unix::os::errno (94,986,990 samples, 0.02%)</title><rect x="95.5938%" y="325" width="0.0200%" height="15" fill="rgb(212,174,34)" fg:x="454367636227" fg:w="94986990"/><text x="95.8438%" y="335.50"></text></g><g><title>syscall (68,821,145 samples, 0.01%)</title><rect x="95.5993%" y="309" width="0.0145%" height="15" fill="rgb(253,83,4)" fg:x="454393802072" fg:w="68821145"/><text x="95.8493%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (68,821,145 samples, 0.01%)</title><rect x="95.5993%" y="293" width="0.0145%" height="15" fill="rgb(250,195,49)" fg:x="454393802072" fg:w="68821145"/><text x="95.8493%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (105,971,304 samples, 0.02%)</title><rect x="95.6184%" y="357" width="0.0223%" height="15" fill="rgb(241,192,25)" fg:x="454484794974" fg:w="105971304"/><text x="95.8684%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (105,971,304 samples, 0.02%)</title><rect x="95.6184%" y="341" width="0.0223%" height="15" fill="rgb(208,124,10)" fg:x="454484794974" fg:w="105971304"/><text x="95.8684%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (205,964,375 samples, 0.04%)</title><rect x="95.6786%" y="341" width="0.0433%" height="15" fill="rgb(222,33,0)" fg:x="454771014697" fg:w="205964375"/><text x="95.9286%" y="351.50"></text></g><g><title>_raw_spin_lock (189,713,988 samples, 0.04%)</title><rect x="96.0167%" y="261" width="0.0399%" height="15" fill="rgb(234,209,28)" fg:x="456378137075" fg:w="189713988"/><text x="96.2667%" y="271.50"></text></g><g><title>__perf_event_task_sched_out (157,226,889 samples, 0.03%)</title><rect x="96.1269%" y="213" width="0.0331%" height="15" fill="rgb(224,11,23)" fg:x="456901502005" fg:w="157226889"/><text x="96.3769%" y="223.50"></text></g><g><title>task_ctx_sched_out (79,692,106 samples, 0.02%)</title><rect x="96.1432%" y="197" width="0.0168%" height="15" fill="rgb(232,99,1)" fg:x="456979036788" fg:w="79692106"/><text x="96.3932%" y="207.50"></text></g><g><title>ctx_sched_out (79,692,106 samples, 0.02%)</title><rect x="96.1432%" y="181" width="0.0168%" height="15" fill="rgb(237,95,45)" fg:x="456979036788" fg:w="79692106"/><text x="96.3932%" y="191.50"></text></g><g><title>_raw_spin_lock (121,071,023 samples, 0.03%)</title><rect x="96.1628%" y="213" width="0.0255%" height="15" fill="rgb(208,109,11)" fg:x="457072263447" fg:w="121071023"/><text x="96.4128%" y="223.50"></text></g><g><title>update_cfs_group (94,106,871 samples, 0.02%)</title><rect x="96.2372%" y="165" width="0.0198%" height="15" fill="rgb(216,190,48)" fg:x="457426046306" fg:w="94106871"/><text x="96.4872%" y="175.50"></text></g><g><title>update_curr (129,614,532 samples, 0.03%)</title><rect x="96.2570%" y="165" width="0.0273%" height="15" fill="rgb(251,171,36)" fg:x="457520153177" fg:w="129614532"/><text x="96.5070%" y="175.50"></text></g><g><title>__update_load_avg_se (55,739,547 samples, 0.01%)</title><rect x="96.3110%" y="149" width="0.0117%" height="15" fill="rgb(230,62,22)" fg:x="457776934189" fg:w="55739547"/><text x="96.5610%" y="159.50"></text></g><g><title>update_load_avg (198,125,619 samples, 0.04%)</title><rect x="96.2843%" y="165" width="0.0417%" height="15" fill="rgb(225,114,35)" fg:x="457649767709" fg:w="198125619"/><text x="96.5343%" y="175.50"></text></g><g><title>dequeue_entity (557,231,443 samples, 0.12%)</title><rect x="96.2137%" y="181" width="0.1172%" height="15" fill="rgb(215,118,42)" fg:x="457314361752" fg:w="557231443"/><text x="96.4637%" y="191.50"></text></g><g><title>update_cfs_group (144,081,960 samples, 0.03%)</title><rect x="96.3309%" y="181" width="0.0303%" height="15" fill="rgb(243,119,21)" fg:x="457871593195" fg:w="144081960"/><text x="96.5809%" y="191.50"></text></g><g><title>reweight_entity (67,044,080 samples, 0.01%)</title><rect x="96.3472%" y="165" width="0.0141%" height="15" fill="rgb(252,177,53)" fg:x="457948631075" fg:w="67044080"/><text x="96.5972%" y="175.50"></text></g><g><title>update_load_avg (61,513,140 samples, 0.01%)</title><rect x="96.3622%" y="181" width="0.0129%" height="15" fill="rgb(237,209,29)" fg:x="458020347113" fg:w="61513140"/><text x="96.6122%" y="191.50"></text></g><g><title>dequeue_task_fair (850,877,377 samples, 0.18%)</title><rect x="96.1972%" y="197" width="0.1790%" height="15" fill="rgb(212,65,23)" fg:x="457235880915" fg:w="850877377"/><text x="96.4472%" y="207.50"></text></g><g><title>native_sched_clock (65,174,735 samples, 0.01%)</title><rect x="96.4883%" y="149" width="0.0137%" height="15" fill="rgb(230,222,46)" fg:x="458619451593" fg:w="65174735"/><text x="96.7383%" y="159.50"></text></g><g><title>record_times (178,354,460 samples, 0.04%)</title><rect x="96.4653%" y="181" width="0.0375%" height="15" fill="rgb(215,135,32)" fg:x="458510222253" fg:w="178354460"/><text x="96.7153%" y="191.50"></text></g><g><title>sched_clock_cpu (95,617,430 samples, 0.02%)</title><rect x="96.4827%" y="165" width="0.0201%" height="15" fill="rgb(246,101,22)" fg:x="458592959283" fg:w="95617430"/><text x="96.7327%" y="175.50"></text></g><g><title>psi_task_change (600,524,264 samples, 0.13%)</title><rect x="96.3775%" y="197" width="0.1263%" height="15" fill="rgb(206,107,13)" fg:x="458092812790" fg:w="600524264"/><text x="96.6275%" y="207.50"></text></g><g><title>deactivate_task (1,525,876,294 samples, 0.32%)</title><rect x="96.1882%" y="213" width="0.3210%" height="15" fill="rgb(250,100,44)" fg:x="457193334470" fg:w="1525876294"/><text x="96.4382%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (157,751,368 samples, 0.03%)</title><rect x="96.5266%" y="197" width="0.0332%" height="15" fill="rgb(231,147,38)" fg:x="458801469920" fg:w="157751368"/><text x="96.7766%" y="207.50"></text></g><g><title>perf_pmu_enable.part.0 (113,947,184 samples, 0.02%)</title><rect x="96.5358%" y="181" width="0.0240%" height="15" fill="rgb(229,8,40)" fg:x="458845274104" fg:w="113947184"/><text x="96.7858%" y="191.50"></text></g><g><title>x86_pmu_enable (108,649,484 samples, 0.02%)</title><rect x="96.5369%" y="165" width="0.0229%" height="15" fill="rgb(221,135,30)" fg:x="458850571804" fg:w="108649484"/><text x="96.7869%" y="175.50"></text></g><g><title>intel_pmu_enable_all (103,322,543 samples, 0.02%)</title><rect x="96.5380%" y="149" width="0.0217%" height="15" fill="rgb(249,193,18)" fg:x="458855898745" fg:w="103322543"/><text x="96.7880%" y="159.50"></text></g><g><title>native_write_msr (100,391,385 samples, 0.02%)</title><rect x="96.5386%" y="133" width="0.0211%" height="15" fill="rgb(209,133,39)" fg:x="458858829903" fg:w="100391385"/><text x="96.7886%" y="143.50"></text></g><g><title>finish_task_switch (259,200,103 samples, 0.05%)</title><rect x="96.5110%" y="213" width="0.0545%" height="15" fill="rgb(232,100,14)" fg:x="458727234516" fg:w="259200103"/><text x="96.7610%" y="223.50"></text></g><g><title>find_busiest_group (78,904,637 samples, 0.02%)</title><rect x="96.5932%" y="165" width="0.0166%" height="15" fill="rgb(224,185,1)" fg:x="459118066826" fg:w="78904637"/><text x="96.8432%" y="175.50"></text></g><g><title>update_sd_lb_stats (65,232,251 samples, 0.01%)</title><rect x="96.5961%" y="149" width="0.0137%" height="15" fill="rgb(223,139,8)" fg:x="459131739212" fg:w="65232251"/><text x="96.8461%" y="159.50"></text></g><g><title>load_balance (125,181,232 samples, 0.03%)</title><rect x="96.5855%" y="181" width="0.0263%" height="15" fill="rgb(232,213,38)" fg:x="459081396024" fg:w="125181232"/><text x="96.8355%" y="191.50"></text></g><g><title>newidle_balance (173,289,500 samples, 0.04%)</title><rect x="96.5765%" y="197" width="0.0365%" height="15" fill="rgb(207,94,22)" fg:x="459038626690" fg:w="173289500"/><text x="96.8265%" y="207.50"></text></g><g><title>pick_next_task_fair (324,879,826 samples, 0.07%)</title><rect x="96.5656%" y="213" width="0.0684%" height="15" fill="rgb(219,183,54)" fg:x="458986803546" fg:w="324879826"/><text x="96.8156%" y="223.50"></text></g><g><title>__update_idle_core (65,986,988 samples, 0.01%)</title><rect x="96.6445%" y="181" width="0.0139%" height="15" fill="rgb(216,185,54)" fg:x="459361791898" fg:w="65986988"/><text x="96.8945%" y="191.50"></text></g><g><title>pick_next_task_idle (134,094,245 samples, 0.03%)</title><rect x="96.6339%" y="213" width="0.0282%" height="15" fill="rgb(254,217,39)" fg:x="459311683372" fg:w="134094245"/><text x="96.8839%" y="223.50"></text></g><g><title>set_next_task_idle (83,985,719 samples, 0.02%)</title><rect x="96.6445%" y="197" width="0.0177%" height="15" fill="rgb(240,178,23)" fg:x="459361791898" fg:w="83985719"/><text x="96.8945%" y="207.50"></text></g><g><title>rcu_note_context_switch (73,721,101 samples, 0.02%)</title><rect x="96.6646%" y="213" width="0.0155%" height="15" fill="rgb(218,11,47)" fg:x="459457368800" fg:w="73721101"/><text x="96.9146%" y="223.50"></text></g><g><title>__sched_text_start (2,870,599,103 samples, 0.60%)</title><rect x="96.0891%" y="229" width="0.6039%" height="15" fill="rgb(218,51,51)" fg:x="456722130295" fg:w="2870599103"/><text x="96.3391%" y="239.50"></text></g><g><title>_raw_spin_lock (74,054,225 samples, 0.02%)</title><rect x="96.6946%" y="229" width="0.0156%" height="15" fill="rgb(238,126,27)" fg:x="459600105950" fg:w="74054225"/><text x="96.9446%" y="239.50"></text></g><g><title>futex_wait_queue_me (3,146,954,421 samples, 0.66%)</title><rect x="96.0567%" y="261" width="0.6621%" height="15" fill="rgb(249,202,22)" fg:x="456567851063" fg:w="3146954421"/><text x="96.3067%" y="271.50"></text></g><g><title>schedule (3,006,741,254 samples, 0.63%)</title><rect x="96.0862%" y="245" width="0.6326%" height="15" fill="rgb(254,195,49)" fg:x="456708064230" fg:w="3006741254"/><text x="96.3362%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (10,554,644,441 samples, 2.22%)</title><rect x="96.8930%" y="229" width="2.2206%" height="15" fill="rgb(208,123,14)" fg:x="460543108544" fg:w="10554644441"/><text x="97.1430%" y="239.50">n..</text></g><g><title>_raw_spin_lock (10,559,263,406 samples, 2.22%)</title><rect x="96.8925%" y="245" width="2.2215%" height="15" fill="rgb(224,200,8)" fg:x="460540710089" fg:w="10559263406"/><text x="97.1425%" y="255.50">_..</text></g><g><title>get_futex_key (68,293,687 samples, 0.01%)</title><rect x="99.1140%" y="245" width="0.0144%" height="15" fill="rgb(217,61,36)" fg:x="471099973495" fg:w="68293687"/><text x="99.3640%" y="255.50"></text></g><g><title>get_futex_value_locked (287,263,172 samples, 0.06%)</title><rect x="99.1315%" y="245" width="0.0604%" height="15" fill="rgb(206,35,45)" fg:x="471182928649" fg:w="287263172"/><text x="99.3815%" y="255.50"></text></g><g><title>futex_wait_setup (11,767,707,155 samples, 2.48%)</title><rect x="96.7187%" y="261" width="2.4758%" height="15" fill="rgb(217,65,33)" fg:x="459714805484" fg:w="11767707155"/><text x="96.9687%" y="271.50">fu..</text></g><g><title>hash_futex (51,243,699 samples, 0.01%)</title><rect x="99.2013%" y="261" width="0.0108%" height="15" fill="rgb(222,158,48)" fg:x="471514898548" fg:w="51243699"/><text x="99.4513%" y="271.50"></text></g><g><title>plist_add (136,200,541 samples, 0.03%)</title><rect x="99.2121%" y="261" width="0.0287%" height="15" fill="rgb(254,2,54)" fg:x="471566142247" fg:w="136200541"/><text x="99.4621%" y="271.50"></text></g><g><title>futex_wait (15,516,044,946 samples, 3.26%)</title><rect x="95.9773%" y="277" width="3.2644%" height="15" fill="rgb(250,143,38)" fg:x="456190732462" fg:w="15516044946"/><text x="96.2273%" y="287.50">fut..</text></g><g><title>do_futex (15,603,842,900 samples, 3.28%)</title><rect x="95.9611%" y="293" width="3.2829%" height="15" fill="rgb(248,25,0)" fg:x="456113902476" fg:w="15603842900"/><text x="96.2111%" y="303.50">do_..</text></g><g><title>__x64_sys_futex (15,725,960,880 samples, 3.31%)</title><rect x="95.9397%" y="309" width="3.3086%" height="15" fill="rgb(206,152,27)" fg:x="456011878306" fg:w="15725960880"/><text x="96.1897%" y="319.50">__x..</text></g><g><title>do_syscall_64 (16,789,740,084 samples, 3.53%)</title><rect x="95.7446%" y="325" width="3.5324%" height="15" fill="rgb(240,77,30)" fg:x="455084401558" fg:w="16789740084"/><text x="95.9946%" y="335.50">do_..</text></g><g><title>switch_fpu_return (117,175,858 samples, 0.02%)</title><rect x="99.2523%" y="309" width="0.0247%" height="15" fill="rgb(231,5,3)" fg:x="471756965784" fg:w="117175858"/><text x="99.5023%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16,909,152,455 samples, 3.56%)</title><rect x="95.7220%" y="341" width="3.5575%" height="15" fill="rgb(207,226,32)" fg:x="454976979072" fg:w="16909152455"/><text x="95.9720%" y="351.50">entr..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (17,808,601,193 samples, 3.75%)</title><rect x="95.5848%" y="373" width="3.7467%" height="15" fill="rgb(222,207,47)" fg:x="454324994155" fg:w="17808601193"/><text x="95.8348%" y="383.50">std:..</text></g><g><title>syscall (17,542,829,070 samples, 3.69%)</title><rect x="95.6407%" y="357" width="3.6908%" height="15" fill="rgb(229,115,45)" fg:x="454590766278" fg:w="17542829070"/><text x="95.8907%" y="367.50">sysc..</text></g><g><title>syscall_return_via_sysret (221,685,604 samples, 0.05%)</title><rect x="99.2849%" y="341" width="0.0466%" height="15" fill="rgb(224,191,6)" fg:x="471911909744" fg:w="221685604"/><text x="99.5349%" y="351.50"></text></g><g><title>core::hint::spin_loop (501,500,547 samples, 0.11%)</title><rect x="99.3739%" y="357" width="0.1055%" height="15" fill="rgb(230,227,24)" fg:x="472335109327" fg:w="501500547"/><text x="99.6239%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (501,500,547 samples, 0.11%)</title><rect x="99.3739%" y="341" width="0.1055%" height="15" fill="rgb(228,80,19)" fg:x="472335109327" fg:w="501500547"/><text x="99.6239%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1,790,416,848 samples, 0.38%)</title><rect x="99.4794%" y="357" width="0.3767%" height="15" fill="rgb(247,229,0)" fg:x="472836609874" fg:w="1790416848"/><text x="99.7294%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (1,790,416,848 samples, 0.38%)</title><rect x="99.4794%" y="341" width="0.3767%" height="15" fill="rgb(237,194,15)" fg:x="472836609874" fg:w="1790416848"/><text x="99.7294%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (21,080,103,585 samples, 4.44%)</title><rect x="95.4238%" y="389" width="4.4350%" height="15" fill="rgb(219,203,20)" fg:x="453559626116" fg:w="21080103585"/><text x="95.6738%" y="399.50">std::..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (2,506,134,353 samples, 0.53%)</title><rect x="99.3315%" y="373" width="0.5273%" height="15" fill="rgb(234,128,8)" fg:x="472133595348" fg:w="2506134353"/><text x="99.5815%" y="383.50"></text></g><g><title>std::thread::yield_now (214,197,400 samples, 0.05%)</title><rect x="99.8604%" y="389" width="0.0451%" height="15" fill="rgb(248,202,8)" fg:x="474647474836" fg:w="214197400"/><text x="100.1104%" y="399.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (140,414,364 samples, 0.03%)</title><rect x="99.8759%" y="373" width="0.0295%" height="15" fill="rgb(206,104,37)" fg:x="474721257872" fg:w="140414364"/><text x="100.1259%" y="383.50"></text></g><g><title>QUEUE_TEST (475,310,984,126 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(223,8,27)" fg:x="0" fg:w="475310984126"/><text x="0.2500%" y="415.50">QUEUE_TEST</text></g><g><title>syscall_return_via_sysret (429,992,091 samples, 0.09%)</title><rect x="99.9095%" y="389" width="0.0905%" height="15" fill="rgb(216,217,28)" fg:x="474880992035" fg:w="429992091"/><text x="100.1595%" y="399.50"></text></g><g><title>all (475,311,007,493 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(249,199,1)" fg:x="0" fg:w="475311007493"/><text x="0.2500%" y="431.50"></text></g></svg></svg>