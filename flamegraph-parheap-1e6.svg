<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="533.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="2592950813312"><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (341,168,018 samples, 0.01%)</title><rect x="0.0343%" y="437" width="0.0132%" height="15" fill="rgb(227,0,7)" fg:x="890259546" fg:w="341168018"/><text x="0.2843%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,565,591,813 samples, 0.06%)</title><rect x="0.0534%" y="405" width="0.0604%" height="15" fill="rgb(217,0,24)" fg:x="1384260846" fg:w="1565591813"/><text x="0.3034%" y="415.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1,565,591,813 samples, 0.06%)</title><rect x="0.0534%" y="389" width="0.0604%" height="15" fill="rgb(221,193,54)" fg:x="1384260846" fg:w="1565591813"/><text x="0.3034%" y="399.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1,565,591,813 samples, 0.06%)</title><rect x="0.0534%" y="373" width="0.0604%" height="15" fill="rgb(248,212,6)" fg:x="1384260846" fg:w="1565591813"/><text x="0.3034%" y="383.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,565,591,813 samples, 0.06%)</title><rect x="0.0534%" y="357" width="0.0604%" height="15" fill="rgb(208,68,35)" fg:x="1384260846" fg:w="1565591813"/><text x="0.3034%" y="367.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_bytes (1,565,591,813 samples, 0.06%)</title><rect x="0.0534%" y="341" width="0.0604%" height="15" fill="rgb(232,128,0)" fg:x="1384260846" fg:w="1565591813"/><text x="0.3034%" y="351.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_bytes (1,565,591,813 samples, 0.06%)</title><rect x="0.0534%" y="325" width="0.0604%" height="15" fill="rgb(207,160,47)" fg:x="1384260846" fg:w="1565591813"/><text x="0.3034%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (260,635,066 samples, 0.01%)</title><rect x="0.1678%" y="293" width="0.0101%" height="15" fill="rgb(228,23,34)" fg:x="4351818088" fg:w="260635066"/><text x="0.4178%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (276,936,369 samples, 0.01%)</title><rect x="0.1834%" y="277" width="0.0107%" height="15" fill="rgb(218,30,26)" fg:x="4756511244" fg:w="276936369"/><text x="0.4334%" y="287.50"></text></g><g><title>csv::byte_record::Bounds::ends (408,785,291 samples, 0.02%)</title><rect x="0.1784%" y="293" width="0.0158%" height="15" fill="rgb(220,122,19)" fg:x="4624749501" fg:w="408785291"/><text x="0.4284%" y="303.50"></text></g><g><title>serde::de::MapAccess::next_key (3,666,137,941 samples, 0.14%)</title><rect x="0.0534%" y="437" width="0.1414%" height="15" fill="rgb(250,228,42)" fg:x="1384260846" fg:w="3666137941"/><text x="0.3034%" y="447.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_key_seed (3,666,137,941 samples, 0.14%)</title><rect x="0.0534%" y="421" width="0.1414%" height="15" fill="rgb(240,193,28)" fg:x="1384260846" fg:w="3666137941"/><text x="0.3034%" y="431.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_header_bytes (2,018,842,643 samples, 0.08%)</title><rect x="0.1169%" y="405" width="0.0779%" height="15" fill="rgb(216,20,37)" fg:x="3031556144" fg:w="2018842643"/><text x="0.3669%" y="415.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header_bytes (2,018,842,643 samples, 0.08%)</title><rect x="0.1169%" y="389" width="0.0779%" height="15" fill="rgb(206,188,39)" fg:x="3031556144" fg:w="2018842643"/><text x="0.3669%" y="399.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header (2,018,842,643 samples, 0.08%)</title><rect x="0.1169%" y="373" width="0.0779%" height="15" fill="rgb(217,207,13)" fg:x="3031556144" fg:w="2018842643"/><text x="0.3669%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,018,842,643 samples, 0.08%)</title><rect x="0.1169%" y="357" width="0.0779%" height="15" fill="rgb(231,73,38)" fg:x="3031556144" fg:w="2018842643"/><text x="0.3669%" y="367.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header::{{closure}} (2,018,842,643 samples, 0.08%)</title><rect x="0.1169%" y="341" width="0.0779%" height="15" fill="rgb(225,20,46)" fg:x="3031556144" fg:w="2018842643"/><text x="0.3669%" y="351.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (2,018,842,643 samples, 0.08%)</title><rect x="0.1169%" y="325" width="0.0779%" height="15" fill="rgb(210,31,41)" fg:x="3031556144" fg:w="2018842643"/><text x="0.3669%" y="335.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (2,018,842,643 samples, 0.08%)</title><rect x="0.1169%" y="309" width="0.0779%" height="15" fill="rgb(221,200,47)" fg:x="3031556144" fg:w="2018842643"/><text x="0.3669%" y="319.50"></text></g><g><title>&lt;QUEUE_TEST::csvreader::_::&lt;impl serde::de::Deserialize for QUEUE_TEST::csvreader::Rec&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (5,073,749,951 samples, 0.20%)</title><rect x="0.0093%" y="453" width="0.1957%" height="15" fill="rgb(226,26,5)" fg:x="240111375" fg:w="5073749951"/><text x="0.2593%" y="463.50"></text></g><g><title>serde::de::MapAccess::next_value (263,462,539 samples, 0.01%)</title><rect x="0.1948%" y="437" width="0.0102%" height="15" fill="rgb(249,33,26)" fg:x="5050398787" fg:w="263462539"/><text x="0.4448%" y="447.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_value_seed (263,462,539 samples, 0.01%)</title><rect x="0.1948%" y="421" width="0.0102%" height="15" fill="rgb(235,183,28)" fg:x="5050398787" fg:w="263462539"/><text x="0.4448%" y="431.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (5,316,887,312 samples, 0.21%)</title><rect x="0.0000%" y="469" width="0.2051%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="5316887312"/><text x="0.2500%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (18,427,603,850 samples, 0.71%)</title><rect x="0.9781%" y="421" width="0.7107%" height="15" fill="rgb(247,18,42)" fg:x="25362169766" fg:w="18427603850"/><text x="1.2281%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (18,427,603,850 samples, 0.71%)</title><rect x="0.9781%" y="405" width="0.7107%" height="15" fill="rgb(241,131,45)" fg:x="25362169766" fg:w="18427603850"/><text x="1.2281%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1,002,784,616 samples, 0.04%)</title><rect x="1.6888%" y="421" width="0.0387%" height="15" fill="rgb(249,31,29)" fg:x="43789773616" fg:w="1002784616"/><text x="1.9388%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (20,233,446,383 samples, 0.78%)</title><rect x="0.9473%" y="437" width="0.7803%" height="15" fill="rgb(225,111,53)" fg:x="24563519071" fg:w="20233446383"/><text x="1.1973%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (322,594,874 samples, 0.01%)</title><rect x="2.5657%" y="405" width="0.0124%" height="15" fill="rgb(238,160,17)" fg:x="66526119801" fg:w="322594874"/><text x="2.8157%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (22,056,963,478 samples, 0.85%)</title><rect x="1.7276%" y="437" width="0.8507%" height="15" fill="rgb(214,148,48)" fg:x="44796965454" fg:w="22056963478"/><text x="1.9776%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (22,056,963,478 samples, 0.85%)</title><rect x="1.7276%" y="421" width="0.8507%" height="15" fill="rgb(232,36,49)" fg:x="44796965454" fg:w="22056963478"/><text x="1.9776%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (20,391,901,606 samples, 0.79%)</title><rect x="2.6054%" y="405" width="0.7864%" height="15" fill="rgb(209,103,24)" fg:x="67555899818" fg:w="20391901606"/><text x="2.8554%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (20,391,901,606 samples, 0.79%)</title><rect x="2.6054%" y="389" width="0.7864%" height="15" fill="rgb(229,88,8)" fg:x="67555899818" fg:w="20391901606"/><text x="2.8554%" y="399.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1,694,392,629 samples, 0.07%)</title><rect x="3.3918%" y="405" width="0.0653%" height="15" fill="rgb(213,181,19)" fg:x="87947801424" fg:w="1694392629"/><text x="3.6418%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22,848,075,180 samples, 0.88%)</title><rect x="2.5783%" y="437" width="0.8812%" height="15" fill="rgb(254,191,54)" fg:x="66853928932" fg:w="22848075180"/><text x="2.8283%" y="447.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (22,848,075,180 samples, 0.88%)</title><rect x="2.5783%" y="421" width="0.8812%" height="15" fill="rgb(241,83,37)" fg:x="66853928932" fg:w="22848075180"/><text x="2.8283%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (78,698,130,341 samples, 3.04%)</title><rect x="0.4253%" y="453" width="3.0351%" height="15" fill="rgb(233,36,39)" fg:x="11027179851" fg:w="78698130341"/><text x="0.6753%" y="463.50">cor..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (84,471,568,515 samples, 3.26%)</title><rect x="0.2051%" y="469" width="3.2577%" height="15" fill="rgb(226,3,54)" fg:x="5316887312" fg:w="84471568515"/><text x="0.4551%" y="479.50">&lt;co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (269,763,009 samples, 0.01%)</title><rect x="3.5223%" y="341" width="0.0104%" height="15" fill="rgb(245,192,40)" fg:x="91330350855" fg:w="269763009"/><text x="3.7723%" y="351.50"></text></g><g><title>csv::byte_record::Bounds::ends (261,062,664 samples, 0.01%)</title><rect x="3.5328%" y="341" width="0.0101%" height="15" fill="rgb(238,167,29)" fg:x="91602972178" fg:w="261062664"/><text x="3.7828%" y="351.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (1,241,412,510 samples, 0.05%)</title><rect x="3.4951%" y="373" width="0.0479%" height="15" fill="rgb(232,182,51)" fg:x="90625303396" fg:w="1241412510"/><text x="3.7451%" y="383.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (1,241,412,510 samples, 0.05%)</title><rect x="3.4951%" y="357" width="0.0479%" height="15" fill="rgb(231,60,39)" fg:x="90625303396" fg:w="1241412510"/><text x="3.7451%" y="367.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field (1,782,095,858 samples, 0.07%)</title><rect x="3.4828%" y="421" width="0.0687%" height="15" fill="rgb(208,69,12)" fg:x="90308542078" fg:w="1782095858"/><text x="3.7328%" y="431.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (1,782,095,858 samples, 0.07%)</title><rect x="3.4828%" y="405" width="0.0687%" height="15" fill="rgb(235,93,37)" fg:x="90308542078" fg:w="1782095858"/><text x="3.7328%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,565,973,164 samples, 0.06%)</title><rect x="3.4912%" y="389" width="0.0604%" height="15" fill="rgb(213,116,39)" fg:x="90524664772" fg:w="1565973164"/><text x="3.7412%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (295,955,073 samples, 0.01%)</title><rect x="3.5595%" y="421" width="0.0114%" height="15" fill="rgb(222,207,29)" fg:x="92296195077" fg:w="295955073"/><text x="3.8095%" y="431.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,046,945,880 samples, 0.12%)</title><rect x="3.4628%" y="469" width="0.1175%" height="15" fill="rgb(206,96,30)" fg:x="89788455827" fg:w="3046945880"/><text x="3.7128%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f64&gt;::deserialize (2,526,859,629 samples, 0.10%)</title><rect x="3.4828%" y="453" width="0.0975%" height="15" fill="rgb(218,138,4)" fg:x="90308542078" fg:w="2526859629"/><text x="3.7328%" y="463.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f64 (2,526,859,629 samples, 0.10%)</title><rect x="3.4828%" y="437" width="0.0975%" height="15" fill="rgb(250,191,14)" fg:x="90308542078" fg:w="2526859629"/><text x="3.7328%" y="447.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (629,704,369 samples, 0.02%)</title><rect x="3.5861%" y="453" width="0.0243%" height="15" fill="rgb(239,60,40)" fg:x="92986442717" fg:w="629704369"/><text x="3.8361%" y="463.50"></text></g><g><title>csv::string_record::StringRecord::read (618,212,906 samples, 0.02%)</title><rect x="3.5866%" y="437" width="0.0238%" height="15" fill="rgb(206,27,48)" fg:x="92997934180" fg:w="618212906"/><text x="3.8366%" y="447.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (579,994,638 samples, 0.02%)</title><rect x="3.5880%" y="421" width="0.0224%" height="15" fill="rgb(225,35,8)" fg:x="93036152448" fg:w="579994638"/><text x="3.8380%" y="431.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (459,548,704 samples, 0.02%)</title><rect x="3.5927%" y="405" width="0.0177%" height="15" fill="rgb(250,213,24)" fg:x="93156598382" fg:w="459548704"/><text x="3.8427%" y="415.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (786,802,880 samples, 0.03%)</title><rect x="3.5803%" y="469" width="0.0303%" height="15" fill="rgb(247,123,22)" fg:x="92835401707" fg:w="786802880"/><text x="3.8303%" y="479.50"></text></g><g><title>__GI___libc_malloc (333,774,234 samples, 0.01%)</title><rect x="3.6151%" y="325" width="0.0129%" height="15" fill="rgb(231,138,38)" fg:x="93737504792" fg:w="333774234"/><text x="3.8651%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (349,678,349 samples, 0.01%)</title><rect x="3.6145%" y="421" width="0.0135%" height="15" fill="rgb(231,145,46)" fg:x="93723348280" fg:w="349678349"/><text x="3.8645%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (349,678,349 samples, 0.01%)</title><rect x="3.6145%" y="405" width="0.0135%" height="15" fill="rgb(251,118,11)" fg:x="93723348280" fg:w="349678349"/><text x="3.8645%" y="415.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::allocate (349,678,349 samples, 0.01%)</title><rect x="3.6145%" y="389" width="0.0135%" height="15" fill="rgb(217,147,25)" fg:x="93723348280" fg:w="349678349"/><text x="3.8645%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (349,678,349 samples, 0.01%)</title><rect x="3.6145%" y="373" width="0.0135%" height="15" fill="rgb(247,81,37)" fg:x="93723348280" fg:w="349678349"/><text x="3.8645%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (349,678,349 samples, 0.01%)</title><rect x="3.6145%" y="357" width="0.0135%" height="15" fill="rgb(209,12,38)" fg:x="93723348280" fg:w="349678349"/><text x="3.8645%" y="367.50"></text></g><g><title>alloc::alloc::alloc (349,678,349 samples, 0.01%)</title><rect x="3.6145%" y="341" width="0.0135%" height="15" fill="rgb(227,1,9)" fg:x="93723348280" fg:w="349678349"/><text x="3.8645%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_in (354,362,345 samples, 0.01%)</title><rect x="3.6145%" y="437" width="0.0137%" height="15" fill="rgb(248,47,43)" fg:x="93723348280" fg:w="354362345"/><text x="3.8645%" y="447.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back (368,600,658 samples, 0.01%)</title><rect x="3.6145%" y="453" width="0.0142%" height="15" fill="rgb(221,10,30)" fg:x="93723348280" fg:w="368600658"/><text x="3.8645%" y="463.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (488,652,340 samples, 0.02%)</title><rect x="3.6106%" y="469" width="0.0188%" height="15" fill="rgb(210,229,1)" fg:x="93622204587" fg:w="488652340"/><text x="3.8606%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (559,719,344 samples, 0.02%)</title><rect x="3.6715%" y="421" width="0.0216%" height="15" fill="rgb(222,148,37)" fg:x="95200789794" fg:w="559719344"/><text x="3.9215%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (559,719,344 samples, 0.02%)</title><rect x="3.6715%" y="405" width="0.0216%" height="15" fill="rgb(234,67,33)" fg:x="95200789794" fg:w="559719344"/><text x="3.9215%" y="415.50"></text></g><g><title>rayon_core::latch::CoreLatch::set (562,048,645 samples, 0.02%)</title><rect x="3.6715%" y="437" width="0.0217%" height="15" fill="rgb(247,98,35)" fg:x="95200789794" fg:w="562048645"/><text x="3.9215%" y="447.50"></text></g><g><title>&lt;rayon_core::latch::SpinLatch as rayon_core::latch::Latch&gt;::set (1,445,787,336 samples, 0.06%)</title><rect x="3.6377%" y="453" width="0.0558%" height="15" fill="rgb(247,138,52)" fg:x="94323859657" fg:w="1445787336"/><text x="3.8877%" y="463.50"></text></g><g><title>core::ptr::read (873,949,027 samples, 0.03%)</title><rect x="3.6936%" y="421" width="0.0337%" height="15" fill="rgb(213,79,30)" fg:x="95772076647" fg:w="873949027"/><text x="3.9436%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (911,656,806 samples, 0.04%)</title><rect x="3.6936%" y="453" width="0.0352%" height="15" fill="rgb(246,177,23)" fg:x="95772076647" fg:w="911656806"/><text x="3.9436%" y="463.50"></text></g><g><title>core::mem::replace (911,656,806 samples, 0.04%)</title><rect x="3.6936%" y="437" width="0.0352%" height="15" fill="rgb(230,62,27)" fg:x="95772076647" fg:w="911656806"/><text x="3.9436%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt;&gt;&gt; (397,496,647 samples, 0.02%)</title><rect x="3.7345%" y="453" width="0.0153%" height="15" fill="rgb(216,154,8)" fg:x="96834160737" fg:w="397496647"/><text x="3.9845%" y="463.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (665,615,196 samples, 0.03%)</title><rect x="3.7534%" y="341" width="0.0257%" height="15" fill="rgb(244,35,45)" fg:x="97324102852" fg:w="665615196"/><text x="4.0034%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (665,615,196 samples, 0.03%)</title><rect x="3.7534%" y="325" width="0.0257%" height="15" fill="rgb(251,115,12)" fg:x="97324102852" fg:w="665615196"/><text x="4.0034%" y="335.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (765,325,950 samples, 0.03%)</title><rect x="3.7498%" y="453" width="0.0295%" height="15" fill="rgb(240,54,50)" fg:x="97231657384" fg:w="765325950"/><text x="3.9998%" y="463.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (744,519,708 samples, 0.03%)</title><rect x="3.7506%" y="437" width="0.0287%" height="15" fill="rgb(233,84,52)" fg:x="97252463626" fg:w="744519708"/><text x="4.0006%" y="447.50"></text></g><g><title>std::panic::catch_unwind (744,519,708 samples, 0.03%)</title><rect x="3.7506%" y="421" width="0.0287%" height="15" fill="rgb(207,117,47)" fg:x="97252463626" fg:w="744519708"/><text x="4.0006%" y="431.50"></text></g><g><title>std::panicking::try (744,519,708 samples, 0.03%)</title><rect x="3.7506%" y="405" width="0.0287%" height="15" fill="rgb(249,43,39)" fg:x="97252463626" fg:w="744519708"/><text x="4.0006%" y="415.50"></text></g><g><title>std::panicking::try::do_call (744,519,708 samples, 0.03%)</title><rect x="3.7506%" y="389" width="0.0287%" height="15" fill="rgb(209,38,44)" fg:x="97252463626" fg:w="744519708"/><text x="4.0006%" y="399.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (672,880,482 samples, 0.03%)</title><rect x="3.7534%" y="373" width="0.0260%" height="15" fill="rgb(236,212,23)" fg:x="97324102852" fg:w="672880482"/><text x="4.0034%" y="383.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (672,880,482 samples, 0.03%)</title><rect x="3.7534%" y="357" width="0.0260%" height="15" fill="rgb(242,79,21)" fg:x="97324102852" fg:w="672880482"/><text x="4.0034%" y="367.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,828,937,126 samples, 0.15%)</title><rect x="3.6361%" y="469" width="0.1477%" height="15" fill="rgb(211,96,35)" fg:x="94282340696" fg:w="3828937126"/><text x="3.8861%" y="479.50"></text></g><g><title>select_task_rq_fair (290,310,466 samples, 0.01%)</title><rect x="3.8006%" y="309" width="0.0112%" height="15" fill="rgb(253,215,40)" fg:x="98546413637" fg:w="290310466"/><text x="4.0506%" y="319.50"></text></g><g><title>activate_task (298,692,493 samples, 0.01%)</title><rect x="3.8138%" y="293" width="0.0115%" height="15" fill="rgb(211,81,21)" fg:x="98890713196" fg:w="298692493"/><text x="4.0638%" y="303.50"></text></g><g><title>ttwu_do_activate (335,732,682 samples, 0.01%)</title><rect x="3.8137%" y="309" width="0.0129%" height="15" fill="rgb(208,190,38)" fg:x="98887831255" fg:w="335732682"/><text x="4.0637%" y="319.50"></text></g><g><title>futex_wake (961,856,703 samples, 0.04%)</title><rect x="3.7919%" y="357" width="0.0371%" height="15" fill="rgb(235,213,38)" fg:x="98321605891" fg:w="961856703"/><text x="4.0419%" y="367.50"></text></g><g><title>wake_up_q (845,757,878 samples, 0.03%)</title><rect x="3.7964%" y="341" width="0.0326%" height="15" fill="rgb(237,122,38)" fg:x="98437704716" fg:w="845757878"/><text x="4.0464%" y="351.50"></text></g><g><title>try_to_wake_up (819,113,463 samples, 0.03%)</title><rect x="3.7974%" y="325" width="0.0316%" height="15" fill="rgb(244,218,35)" fg:x="98464349131" fg:w="819113463"/><text x="4.0474%" y="335.50"></text></g><g><title>__x64_sys_futex (988,928,000 samples, 0.04%)</title><rect x="3.7910%" y="389" width="0.0381%" height="15" fill="rgb(240,68,47)" fg:x="98299291734" fg:w="988928000"/><text x="4.0410%" y="399.50"></text></g><g><title>do_futex (976,432,849 samples, 0.04%)</title><rect x="3.7915%" y="373" width="0.0377%" height="15" fill="rgb(210,16,53)" fg:x="98311786885" fg:w="976432849"/><text x="4.0415%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,130,782,211 samples, 0.04%)</title><rect x="3.7869%" y="421" width="0.0436%" height="15" fill="rgb(235,124,12)" fg:x="98193286002" fg:w="1130782211"/><text x="4.0369%" y="431.50"></text></g><g><title>do_syscall_64 (1,121,784,585 samples, 0.04%)</title><rect x="3.7873%" y="405" width="0.0433%" height="15" fill="rgb(224,169,11)" fg:x="98202283628" fg:w="1121784585"/><text x="4.0373%" y="415.50"></text></g><g><title>&lt;rayon_core::latch::LatchRef&lt;L&gt; as rayon_core::latch::Latch&gt;::set (1,242,099,210 samples, 0.05%)</title><rect x="3.7838%" y="469" width="0.0479%" height="15" fill="rgb(250,166,2)" fg:x="98111277822" fg:w="1242099210"/><text x="4.0338%" y="479.50"></text></g><g><title>&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (1,235,084,674 samples, 0.05%)</title><rect x="3.7840%" y="453" width="0.0476%" height="15" fill="rgb(242,216,29)" fg:x="98118292358" fg:w="1235084674"/><text x="4.0340%" y="463.50"></text></g><g><title>syscall (1,199,483,029 samples, 0.05%)</title><rect x="3.7854%" y="437" width="0.0463%" height="15" fill="rgb(230,116,27)" fg:x="98153894003" fg:w="1199483029"/><text x="4.0354%" y="447.50"></text></g><g><title>copy_page_to_iter (1,034,044,128 samples, 0.04%)</title><rect x="3.8582%" y="229" width="0.0399%" height="15" fill="rgb(228,99,48)" fg:x="100042144731" fg:w="1034044128"/><text x="4.1082%" y="239.50"></text></g><g><title>copy_user_enhanced_fast_string (999,500,606 samples, 0.04%)</title><rect x="3.8596%" y="213" width="0.0385%" height="15" fill="rgb(253,11,6)" fg:x="100076688253" fg:w="999500606"/><text x="4.1096%" y="223.50"></text></g><g><title>clear_page_erms (1,009,256,766 samples, 0.04%)</title><rect x="3.9117%" y="117" width="0.0389%" height="15" fill="rgb(247,143,39)" fg:x="101429379859" fg:w="1009256766"/><text x="4.1617%" y="127.50"></text></g><g><title>get_page_from_freelist (1,295,604,226 samples, 0.05%)</title><rect x="3.9096%" y="133" width="0.0500%" height="15" fill="rgb(236,97,10)" fg:x="101372756370" fg:w="1295604226"/><text x="4.1596%" y="143.50"></text></g><g><title>__alloc_pages_nodemask (1,352,053,489 samples, 0.05%)</title><rect x="3.9075%" y="149" width="0.0521%" height="15" fill="rgb(233,208,19)" fg:x="101319116681" fg:w="1352053489"/><text x="4.1575%" y="159.50"></text></g><g><title>alloc_pages_current (1,522,332,514 samples, 0.06%)</title><rect x="3.9034%" y="165" width="0.0587%" height="15" fill="rgb(216,164,2)" fg:x="101214176760" fg:w="1522332514"/><text x="4.1534%" y="175.50"></text></g><g><title>__page_cache_alloc (1,618,953,593 samples, 0.06%)</title><rect x="3.9024%" y="181" width="0.0624%" height="15" fill="rgb(220,129,5)" fg:x="101186610592" fg:w="1618953593"/><text x="4.1524%" y="191.50"></text></g><g><title>blk_mq_run_hw_queue (261,382,291 samples, 0.01%)</title><rect x="3.9656%" y="101" width="0.0101%" height="15" fill="rgb(242,17,10)" fg:x="102825838712" fg:w="261382291"/><text x="4.2156%" y="111.50"></text></g><g><title>__blk_mq_delay_run_hw_queue (261,382,291 samples, 0.01%)</title><rect x="3.9656%" y="85" width="0.0101%" height="15" fill="rgb(242,107,0)" fg:x="102825838712" fg:w="261382291"/><text x="4.2156%" y="95.50"></text></g><g><title>__blk_mq_run_hw_queue (261,382,291 samples, 0.01%)</title><rect x="3.9656%" y="69" width="0.0101%" height="15" fill="rgb(251,28,31)" fg:x="102825838712" fg:w="261382291"/><text x="4.2156%" y="79.50"></text></g><g><title>blk_mq_sched_dispatch_requests (261,382,291 samples, 0.01%)</title><rect x="3.9656%" y="53" width="0.0101%" height="15" fill="rgb(233,223,10)" fg:x="102825838712" fg:w="261382291"/><text x="4.2156%" y="63.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (261,382,291 samples, 0.01%)</title><rect x="3.9656%" y="37" width="0.0101%" height="15" fill="rgb(215,21,27)" fg:x="102825838712" fg:w="261382291"/><text x="4.2156%" y="47.50"></text></g><g><title>blk_finish_plug (287,479,366 samples, 0.01%)</title><rect x="3.9651%" y="165" width="0.0111%" height="15" fill="rgb(232,23,21)" fg:x="102814196865" fg:w="287479366"/><text x="4.2151%" y="175.50"></text></g><g><title>blk_flush_plug_list (281,617,674 samples, 0.01%)</title><rect x="3.9654%" y="149" width="0.0109%" height="15" fill="rgb(244,5,23)" fg:x="102820058557" fg:w="281617674"/><text x="4.2154%" y="159.50"></text></g><g><title>blk_mq_flush_plug_list (278,796,461 samples, 0.01%)</title><rect x="3.9655%" y="133" width="0.0108%" height="15" fill="rgb(226,81,46)" fg:x="102822879770" fg:w="278796461"/><text x="4.2155%" y="143.50"></text></g><g><title>blk_mq_sched_insert_requests (278,796,461 samples, 0.01%)</title><rect x="3.9655%" y="117" width="0.0108%" height="15" fill="rgb(247,70,30)" fg:x="102822879770" fg:w="278796461"/><text x="4.2155%" y="127.50"></text></g><g><title>__add_to_page_cache_locked (434,405,475 samples, 0.02%)</title><rect x="3.9806%" y="117" width="0.0168%" height="15" fill="rgb(212,68,19)" fg:x="103215306295" fg:w="434405475"/><text x="4.2306%" y="127.50"></text></g><g><title>add_to_page_cache_lru (759,213,674 samples, 0.03%)</title><rect x="3.9797%" y="133" width="0.0293%" height="15" fill="rgb(240,187,13)" fg:x="103192038645" fg:w="759213674"/><text x="4.2297%" y="143.50"></text></g><g><title>ext4_mpage_readpages (1,106,882,612 samples, 0.04%)</title><rect x="3.9766%" y="149" width="0.0427%" height="15" fill="rgb(223,113,26)" fg:x="103110604724" fg:w="1106882612"/><text x="4.2266%" y="159.50"></text></g><g><title>read_pages (1,409,354,365 samples, 0.05%)</title><rect x="3.9650%" y="181" width="0.0544%" height="15" fill="rgb(206,192,2)" fg:x="102811265403" fg:w="1409354365"/><text x="4.2150%" y="191.50"></text></g><g><title>ext4_readpages (1,116,126,867 samples, 0.04%)</title><rect x="3.9763%" y="165" width="0.0430%" height="15" fill="rgb(241,108,4)" fg:x="103104492901" fg:w="1116126867"/><text x="4.2263%" y="175.50"></text></g><g><title>xa_load (278,250,969 samples, 0.01%)</title><rect x="4.0194%" y="181" width="0.0107%" height="15" fill="rgb(247,173,49)" fg:x="104220619768" fg:w="278250969"/><text x="4.2694%" y="191.50"></text></g><g><title>__do_page_cache_readahead (3,400,688,948 samples, 0.13%)</title><rect x="3.9003%" y="197" width="0.1312%" height="15" fill="rgb(224,114,35)" fg:x="101131783995" fg:w="3400688948"/><text x="4.1503%" y="207.50"></text></g><g><title>page_cache_async_readahead (3,407,151,661 samples, 0.13%)</title><rect x="3.9003%" y="229" width="0.1314%" height="15" fill="rgb(245,159,27)" fg:x="101131783995" fg:w="3407151661"/><text x="4.1503%" y="239.50"></text></g><g><title>ondemand_readahead (3,407,151,661 samples, 0.13%)</title><rect x="3.9003%" y="213" width="0.1314%" height="15" fill="rgb(245,172,44)" fg:x="101131783995" fg:w="3407151661"/><text x="4.1503%" y="223.50"></text></g><g><title>generic_file_buffered_read (4,880,530,069 samples, 0.19%)</title><rect x="3.8541%" y="245" width="0.1882%" height="15" fill="rgb(236,23,11)" fg:x="99933708728" fg:w="4880530069"/><text x="4.1041%" y="255.50"></text></g><g><title>__vfs_read (4,937,856,907 samples, 0.19%)</title><rect x="3.8519%" y="309" width="0.1904%" height="15" fill="rgb(205,117,38)" fg:x="99879080376" fg:w="4937856907"/><text x="4.1019%" y="319.50"></text></g><g><title>new_sync_read (4,929,286,776 samples, 0.19%)</title><rect x="3.8523%" y="293" width="0.1901%" height="15" fill="rgb(237,72,25)" fg:x="99887650507" fg:w="4929286776"/><text x="4.1023%" y="303.50"></text></g><g><title>ext4_file_read_iter (4,909,226,626 samples, 0.19%)</title><rect x="3.8531%" y="277" width="0.1893%" height="15" fill="rgb(244,70,9)" fg:x="99907710657" fg:w="4909226626"/><text x="4.1031%" y="287.50"></text></g><g><title>generic_file_read_iter (4,892,227,405 samples, 0.19%)</title><rect x="3.8537%" y="261" width="0.1887%" height="15" fill="rgb(217,125,39)" fg:x="99924709878" fg:w="4892227405"/><text x="4.1037%" y="271.50"></text></g><g><title>ksys_read (5,278,346,878 samples, 0.20%)</title><rect x="3.8449%" y="341" width="0.2036%" height="15" fill="rgb(235,36,10)" fg:x="99695098367" fg:w="5278346878"/><text x="4.0949%" y="351.50"></text></g><g><title>vfs_read (5,186,751,949 samples, 0.20%)</title><rect x="3.8484%" y="325" width="0.2000%" height="15" fill="rgb(251,123,47)" fg:x="99786693296" fg:w="5186751949"/><text x="4.0984%" y="335.50"></text></g><g><title>__x64_sys_read (5,284,494,727 samples, 0.20%)</title><rect x="3.8447%" y="357" width="0.2038%" height="15" fill="rgb(221,13,13)" fg:x="99691944957" fg:w="5284494727"/><text x="4.0947%" y="367.50"></text></g><g><title>do_syscall_64 (5,580,324,691 samples, 0.22%)</title><rect x="3.8340%" y="373" width="0.2152%" height="15" fill="rgb(238,131,9)" fg:x="99414253296" fg:w="5580324691"/><text x="4.0840%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,603,598,682 samples, 0.22%)</title><rect x="3.8334%" y="389" width="0.2161%" height="15" fill="rgb(211,50,8)" fg:x="99397115471" fg:w="5603598682"/><text x="4.0834%" y="399.50"></text></g><g><title>__libc_read (5,711,724,101 samples, 0.22%)</title><rect x="3.8318%" y="405" width="0.2203%" height="15" fill="rgb(245,182,24)" fg:x="99357549886" fg:w="5711724101"/><text x="4.0818%" y="415.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (5,720,244,889 samples, 0.22%)</title><rect x="3.8317%" y="469" width="0.2206%" height="15" fill="rgb(242,14,37)" fg:x="99354742854" fg:w="5720244889"/><text x="4.0817%" y="479.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (5,717,437,857 samples, 0.22%)</title><rect x="3.8318%" y="453" width="0.2205%" height="15" fill="rgb(246,228,12)" fg:x="99357549886" fg:w="5717437857"/><text x="4.0818%" y="463.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (5,717,437,857 samples, 0.22%)</title><rect x="3.8318%" y="437" width="0.2205%" height="15" fill="rgb(213,55,15)" fg:x="99357549886" fg:w="5717437857"/><text x="4.0818%" y="447.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (5,717,437,857 samples, 0.22%)</title><rect x="3.8318%" y="421" width="0.2205%" height="15" fill="rgb(209,9,3)" fg:x="99357549886" fg:w="5717437857"/><text x="4.0818%" y="431.50"></text></g><g><title>QUEUE_TEST::particle::Particle::relative_speed (314,886,795 samples, 0.01%)</title><rect x="4.0804%" y="421" width="0.0121%" height="15" fill="rgb(230,59,30)" fg:x="105802320848" fg:w="314886795"/><text x="4.3304%" y="431.50"></text></g><g><title>QUEUE_TEST::collisionhandling::compute_acc (839,532,887 samples, 0.03%)</title><rect x="4.0638%" y="437" width="0.0324%" height="15" fill="rgb(209,121,21)" fg:x="105373582055" fg:w="839532887"/><text x="4.3138%" y="447.50"></text></g><g><title>QUEUE_TEST::collisionhandling::process_pair_get_dv (1,542,389,854 samples, 0.06%)</title><rect x="4.0623%" y="453" width="0.0595%" height="15" fill="rgb(220,109,13)" fg:x="105333231112" fg:w="1542389854"/><text x="4.3123%" y="463.50"></text></g><g><title>QUEUE_TEST::collisionhandling::get_next_time (662,506,024 samples, 0.03%)</title><rect x="4.0962%" y="437" width="0.0256%" height="15" fill="rgb(232,18,1)" fg:x="106213114942" fg:w="662506024"/><text x="4.3462%" y="447.50"></text></g><g><title>QUEUE_TEST::collisionhandling::process_collision (1,877,713,592 samples, 0.07%)</title><rect x="4.0523%" y="469" width="0.0724%" height="15" fill="rgb(215,41,42)" fg:x="105074987743" fg:w="1877713592"/><text x="4.3023%" y="479.50"></text></g><g><title>clear_page_erms (423,479,574 samples, 0.02%)</title><rect x="4.1502%" y="245" width="0.0163%" height="15" fill="rgb(224,123,36)" fg:x="107612714508" fg:w="423479574"/><text x="4.4002%" y="255.50"></text></g><g><title>get_page_from_freelist (603,774,388 samples, 0.02%)</title><rect x="4.1489%" y="261" width="0.0233%" height="15" fill="rgb(240,125,3)" fg:x="107578719390" fg:w="603774388"/><text x="4.3989%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (650,880,823 samples, 0.03%)</title><rect x="4.1475%" y="277" width="0.0251%" height="15" fill="rgb(205,98,50)" fg:x="107543182844" fg:w="650880823"/><text x="4.3975%" y="287.50"></text></g><g><title>alloc_pages_vma (674,186,259 samples, 0.03%)</title><rect x="4.1470%" y="293" width="0.0260%" height="15" fill="rgb(205,185,37)" fg:x="107528766286" fg:w="674186259"/><text x="4.3970%" y="303.50"></text></g><g><title>do_anonymous_page (1,096,482,751 samples, 0.04%)</title><rect x="4.1443%" y="309" width="0.0423%" height="15" fill="rgb(238,207,15)" fg:x="107458724990" fg:w="1096482751"/><text x="4.3943%" y="319.50"></text></g><g><title>__handle_mm_fault (1,154,933,793 samples, 0.04%)</title><rect x="4.1427%" y="325" width="0.0445%" height="15" fill="rgb(213,199,42)" fg:x="107417952905" fg:w="1154933793"/><text x="4.3927%" y="335.50"></text></g><g><title>do_user_addr_fault (1,251,914,738 samples, 0.05%)</title><rect x="4.1391%" y="357" width="0.0483%" height="15" fill="rgb(235,201,11)" fg:x="107323785073" fg:w="1251914738"/><text x="4.3891%" y="367.50"></text></g><g><title>handle_mm_fault (1,187,131,079 samples, 0.05%)</title><rect x="4.1416%" y="341" width="0.0458%" height="15" fill="rgb(207,46,11)" fg:x="107388568732" fg:w="1187131079"/><text x="4.3916%" y="351.50"></text></g><g><title>__do_page_fault (1,276,529,769 samples, 0.05%)</title><rect x="4.1387%" y="373" width="0.0492%" height="15" fill="rgb(241,35,35)" fg:x="107315211419" fg:w="1276529769"/><text x="4.3887%" y="383.50"></text></g><g><title>page_fault (1,293,698,740 samples, 0.05%)</title><rect x="4.1382%" y="405" width="0.0499%" height="15" fill="rgb(243,32,47)" fg:x="107300911239" fg:w="1293698740"/><text x="4.3882%" y="415.50"></text></g><g><title>do_page_fault (1,290,683,038 samples, 0.05%)</title><rect x="4.1383%" y="389" width="0.0498%" height="15" fill="rgb(247,202,23)" fg:x="107303926941" fg:w="1290683038"/><text x="4.3883%" y="399.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (267,718,215 samples, 0.01%)</title><rect x="4.1881%" y="405" width="0.0103%" height="15" fill="rgb(219,102,11)" fg:x="108594609979" fg:w="267718215"/><text x="4.4381%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (1,870,072,746 samples, 0.07%)</title><rect x="4.1267%" y="437" width="0.0721%" height="15" fill="rgb(243,110,44)" fg:x="107003446677" fg:w="1870072746"/><text x="4.3767%" y="447.50"></text></g><g><title>core::ptr::write (1,852,269,389 samples, 0.07%)</title><rect x="4.1274%" y="421" width="0.0714%" height="15" fill="rgb(222,74,54)" fg:x="107021250034" fg:w="1852269389"/><text x="4.3774%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (1,922,438,423 samples, 0.07%)</title><rect x="4.1254%" y="453" width="0.0741%" height="15" fill="rgb(216,99,12)" fg:x="106969967442" fg:w="1922438423"/><text x="4.3754%" y="463.50"></text></g><g><title>QUEUE_TEST::csvreader::csvcon (1,942,584,375 samples, 0.07%)</title><rect x="4.1247%" y="469" width="0.0749%" height="15" fill="rgb(226,22,26)" fg:x="106952701335" fg:w="1942584375"/><text x="4.3747%" y="479.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (316,537,945 samples, 0.01%)</title><rect x="4.2412%" y="341" width="0.0122%" height="15" fill="rgb(217,163,10)" fg:x="109973173141" fg:w="316537945"/><text x="4.4912%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1,674,545,269 samples, 0.06%)</title><rect x="4.2578%" y="341" width="0.0646%" height="15" fill="rgb(213,25,53)" fg:x="110401608959" fg:w="1674545269"/><text x="4.5078%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1,328,925,202 samples, 0.05%)</title><rect x="4.2711%" y="325" width="0.0513%" height="15" fill="rgb(252,105,26)" fg:x="110747229026" fg:w="1328925202"/><text x="4.5211%" y="335.50"></text></g><g><title>core::cmp::PartialOrd::le (1,328,925,202 samples, 0.05%)</title><rect x="4.2711%" y="309" width="0.0513%" height="15" fill="rgb(220,39,43)" fg:x="110747229026" fg:w="1328925202"/><text x="4.5211%" y="319.50"></text></g><g><title>&lt;QUEUE_TEST::KeyVal as core::cmp::PartialOrd&gt;::partial_cmp (1,175,355,356 samples, 0.05%)</title><rect x="4.2770%" y="293" width="0.0453%" height="15" fill="rgb(229,68,48)" fg:x="110900798872" fg:w="1175355356"/><text x="4.5270%" y="303.50"></text></g><g><title>&lt;QUEUE_TEST::KeyVal as core::cmp::Ord&gt;::cmp (1,175,355,356 samples, 0.05%)</title><rect x="4.2770%" y="277" width="0.0453%" height="15" fill="rgb(252,8,32)" fg:x="110900798872" fg:w="1175355356"/><text x="4.5270%" y="287.50"></text></g><g><title>&lt;ordered_float::OrderedFloat&lt;T&gt; as core::cmp::Ord&gt;::cmp (1,175,355,356 samples, 0.05%)</title><rect x="4.2770%" y="261" width="0.0453%" height="15" fill="rgb(223,20,43)" fg:x="110900798872" fg:w="1175355356"/><text x="4.5270%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (1,048,204,641 samples, 0.04%)</title><rect x="4.2819%" y="245" width="0.0404%" height="15" fill="rgb(229,81,49)" fg:x="111027949587" fg:w="1048204641"/><text x="4.5319%" y="255.50"></text></g><g><title>&lt;ordered_float::OrderedFloat&lt;T&gt; as core::cmp::PartialOrd&gt;::lt (1,048,204,641 samples, 0.04%)</title><rect x="4.2819%" y="229" width="0.0404%" height="15" fill="rgb(236,28,36)" fg:x="111027949587" fg:w="1048204641"/><text x="4.5319%" y="239.50"></text></g><g><title>&lt;ordered_float::OrderedFloat&lt;T&gt; as core::cmp::PartialOrd&gt;::ge (1,048,204,641 samples, 0.04%)</title><rect x="4.2819%" y="213" width="0.0404%" height="15" fill="rgb(249,185,26)" fg:x="111027949587" fg:w="1048204641"/><text x="4.5319%" y="223.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (2,377,229,396 samples, 0.09%)</title><rect x="4.2325%" y="357" width="0.0917%" height="15" fill="rgb(249,174,33)" fg:x="109746771084" fg:w="2377229396"/><text x="4.4825%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (2,431,733,729 samples, 0.09%)</title><rect x="4.2315%" y="405" width="0.0938%" height="15" fill="rgb(233,201,37)" fg:x="109721775760" fg:w="2431733729"/><text x="4.4815%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,414,898,109 samples, 0.09%)</title><rect x="4.2322%" y="389" width="0.0931%" height="15" fill="rgb(221,78,26)" fg:x="109738611380" fg:w="2414898109"/><text x="4.4822%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::{{closure}} (2,414,898,109 samples, 0.09%)</title><rect x="4.2322%" y="373" width="0.0931%" height="15" fill="rgb(250,127,30)" fg:x="109738611380" fg:w="2414898109"/><text x="4.4822%" y="383.50"></text></g><g><title>&lt;QUEUE_TEST::LockingBinaryHeap&lt;E&gt; as QUEUE_TEST::ParallelPriorityQueue&lt;E&gt;&gt;::bulk_pop (2,638,352,144 samples, 0.10%)</title><rect x="4.2269%" y="421" width="0.1018%" height="15" fill="rgb(230,49,44)" fg:x="109601807529" fg:w="2638352144"/><text x="4.4769%" y="431.50"></text></g><g><title>&lt;QUEUE_TEST::LockingBinaryHeap&lt;E&gt; as QUEUE_TEST::ParallelPriorityQueue&lt;E&gt;&gt;::bulk_process (2,675,703,554 samples, 0.10%)</title><rect x="4.2269%" y="437" width="0.1032%" height="15" fill="rgb(229,67,23)" fg:x="109601807529" fg:w="2675703554"/><text x="4.4769%" y="447.50"></text></g><g><title>remove_migration_ptes (1,041,559,962 samples, 0.04%)</title><rect x="4.3779%" y="181" width="0.0402%" height="15" fill="rgb(249,83,47)" fg:x="113517740515" fg:w="1041559962"/><text x="4.6279%" y="191.50"></text></g><g><title>rmap_walk (1,038,624,631 samples, 0.04%)</title><rect x="4.3780%" y="165" width="0.0401%" height="15" fill="rgb(215,43,3)" fg:x="113520675846" fg:w="1038624631"/><text x="4.6280%" y="175.50"></text></g><g><title>rmap_walk_anon (887,708,637 samples, 0.03%)</title><rect x="4.3839%" y="149" width="0.0342%" height="15" fill="rgb(238,154,13)" fg:x="113671591840" fg:w="887708637"/><text x="4.6339%" y="159.50"></text></g><g><title>remove_migration_pte (695,925,952 samples, 0.03%)</title><rect x="4.3913%" y="133" width="0.0268%" height="15" fill="rgb(219,56,2)" fg:x="113863374525" fg:w="695925952"/><text x="4.6413%" y="143.50"></text></g><g><title>page_vma_mapped_walk (440,328,228 samples, 0.02%)</title><rect x="4.4011%" y="117" width="0.0170%" height="15" fill="rgb(233,0,4)" fg:x="114118972249" fg:w="440328228"/><text x="4.6511%" y="127.50"></text></g><g><title>page_vma_mapped_walk (292,206,804 samples, 0.01%)</title><rect x="4.4379%" y="117" width="0.0113%" height="15" fill="rgb(235,30,7)" fg:x="115072921452" fg:w="292206804"/><text x="4.6879%" y="127.50"></text></g><g><title>rmap_walk_anon (777,593,389 samples, 0.03%)</title><rect x="4.4219%" y="149" width="0.0300%" height="15" fill="rgb(250,79,13)" fg:x="114657973657" fg:w="777593389"/><text x="4.6719%" y="159.50"></text></g><g><title>try_to_unmap_one (586,905,767 samples, 0.02%)</title><rect x="4.4293%" y="133" width="0.0226%" height="15" fill="rgb(211,146,34)" fg:x="114848661279" fg:w="586905767"/><text x="4.6793%" y="143.50"></text></g><g><title>migrate_pages (2,343,009,043 samples, 0.09%)</title><rect x="4.3618%" y="197" width="0.0904%" height="15" fill="rgb(228,22,38)" fg:x="113100354010" fg:w="2343009043"/><text x="4.6118%" y="207.50"></text></g><g><title>try_to_unmap (884,062,576 samples, 0.03%)</title><rect x="4.4181%" y="181" width="0.0341%" height="15" fill="rgb(235,168,5)" fg:x="114559300477" fg:w="884062576"/><text x="4.6681%" y="191.50"></text></g><g><title>rmap_walk (884,062,576 samples, 0.03%)</title><rect x="4.4181%" y="165" width="0.0341%" height="15" fill="rgb(221,155,16)" fg:x="114559300477" fg:w="884062576"/><text x="4.6681%" y="175.50"></text></g><g><title>migrate_misplaced_page (2,383,603,036 samples, 0.09%)</title><rect x="4.3618%" y="213" width="0.0919%" height="15" fill="rgb(215,215,53)" fg:x="113100354010" fg:w="2383603036"/><text x="4.6118%" y="223.50"></text></g><g><title>__handle_mm_fault (2,495,000,096 samples, 0.10%)</title><rect x="4.3587%" y="245" width="0.0962%" height="15" fill="rgb(223,4,10)" fg:x="113018421716" fg:w="2495000096"/><text x="4.6087%" y="255.50"></text></g><g><title>do_numa_page (2,453,566,283 samples, 0.09%)</title><rect x="4.3603%" y="229" width="0.0946%" height="15" fill="rgb(234,103,6)" fg:x="113059855529" fg:w="2453566283"/><text x="4.6103%" y="239.50"></text></g><g><title>handle_mm_fault (2,505,578,309 samples, 0.10%)</title><rect x="4.3584%" y="261" width="0.0966%" height="15" fill="rgb(227,97,0)" fg:x="113010789892" fg:w="2505578309"/><text x="4.6084%" y="271.50"></text></g><g><title>do_user_addr_fault (2,530,018,676 samples, 0.10%)</title><rect x="4.3575%" y="277" width="0.0976%" height="15" fill="rgb(234,150,53)" fg:x="112988939193" fg:w="2530018676"/><text x="4.6075%" y="287.50"></text></g><g><title>__do_page_fault (2,550,092,856 samples, 0.10%)</title><rect x="4.3571%" y="293" width="0.0983%" height="15" fill="rgb(228,201,54)" fg:x="112976556692" fg:w="2550092856"/><text x="4.6071%" y="303.50"></text></g><g><title>page_fault (2,566,280,792 samples, 0.10%)</title><rect x="4.3566%" y="325" width="0.0990%" height="15" fill="rgb(222,22,37)" fg:x="112965754068" fg:w="2566280792"/><text x="4.6066%" y="335.50"></text></g><g><title>do_page_fault (2,563,478,918 samples, 0.10%)</title><rect x="4.3568%" y="309" width="0.0989%" height="15" fill="rgb(237,53,32)" fg:x="112968555942" fg:w="2563478918"/><text x="4.6068%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (3,378,278,009 samples, 0.13%)</title><rect x="4.3315%" y="373" width="0.1303%" height="15" fill="rgb(233,25,53)" fg:x="112314264853" fg:w="3378278009"/><text x="4.5815%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,378,278,009 samples, 0.13%)</title><rect x="4.3315%" y="357" width="0.1303%" height="15" fill="rgb(210,40,34)" fg:x="112314264853" fg:w="3378278009"/><text x="4.5815%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,116,159,089 samples, 0.12%)</title><rect x="4.3416%" y="341" width="0.1202%" height="15" fill="rgb(241,220,44)" fg:x="112576383773" fg:w="3116159089"/><text x="4.5916%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3,560,680,159 samples, 0.14%)</title><rect x="4.3315%" y="437" width="0.1373%" height="15" fill="rgb(235,28,35)" fg:x="112314264853" fg:w="3560680159"/><text x="4.5815%" y="447.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3,560,680,159 samples, 0.14%)</title><rect x="4.3315%" y="421" width="0.1373%" height="15" fill="rgb(210,56,17)" fg:x="112314264853" fg:w="3560680159"/><text x="4.5815%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3,560,680,159 samples, 0.14%)</title><rect x="4.3315%" y="405" width="0.1373%" height="15" fill="rgb(224,130,29)" fg:x="112314264853" fg:w="3560680159"/><text x="4.5815%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,560,680,159 samples, 0.14%)</title><rect x="4.3315%" y="389" width="0.1373%" height="15" fill="rgb(235,212,8)" fg:x="112314264853" fg:w="3560680159"/><text x="4.5815%" y="399.50"></text></g><g><title>QUEUE_TEST::time_parallel (6,278,565,760 samples, 0.24%)</title><rect x="4.2269%" y="453" width="0.2421%" height="15" fill="rgb(223,33,50)" fg:x="109601807529" fg:w="6278565760"/><text x="4.4769%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (358,420,651 samples, 0.01%)</title><rect x="4.4691%" y="437" width="0.0138%" height="15" fill="rgb(219,149,13)" fg:x="115880373289" fg:w="358420651"/><text x="4.7191%" y="447.50"></text></g><g><title>core::ptr::read (344,347,691 samples, 0.01%)</title><rect x="4.4696%" y="421" width="0.0133%" height="15" fill="rgb(250,156,29)" fg:x="115894446249" fg:w="344347691"/><text x="4.7196%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (401,039,266 samples, 0.02%)</title><rect x="4.4691%" y="453" width="0.0155%" height="15" fill="rgb(216,193,19)" fg:x="115880373289" fg:w="401039266"/><text x="4.7191%" y="463.50"></text></g><g><title>clear_page_erms (566,543,857 samples, 0.02%)</title><rect x="4.5147%" y="261" width="0.0218%" height="15" fill="rgb(216,135,14)" fg:x="117063055542" fg:w="566543857"/><text x="4.7647%" y="271.50"></text></g><g><title>get_page_from_freelist (760,647,744 samples, 0.03%)</title><rect x="4.5125%" y="277" width="0.0293%" height="15" fill="rgb(241,47,5)" fg:x="117006941781" fg:w="760647744"/><text x="4.7625%" y="287.50"></text></g><g><title>alloc_pages_vma (833,923,993 samples, 0.03%)</title><rect x="4.5098%" y="309" width="0.0322%" height="15" fill="rgb(233,42,35)" fg:x="116936497853" fg:w="833923993"/><text x="4.7598%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (811,552,002 samples, 0.03%)</title><rect x="4.5106%" y="293" width="0.0313%" height="15" fill="rgb(231,13,6)" fg:x="116958869844" fg:w="811552002"/><text x="4.7606%" y="303.50"></text></g><g><title>do_anonymous_page (1,289,186,570 samples, 0.05%)</title><rect x="4.5078%" y="325" width="0.0497%" height="15" fill="rgb(207,181,40)" fg:x="116884272269" fg:w="1289186570"/><text x="4.7578%" y="335.50"></text></g><g><title>__handle_mm_fault (1,357,677,058 samples, 0.05%)</title><rect x="4.5058%" y="341" width="0.0524%" height="15" fill="rgb(254,173,49)" fg:x="116832769324" fg:w="1357677058"/><text x="4.7558%" y="351.50"></text></g><g><title>handle_mm_fault (1,397,421,904 samples, 0.05%)</title><rect x="4.5046%" y="357" width="0.0539%" height="15" fill="rgb(221,1,38)" fg:x="116801488928" fg:w="1397421904"/><text x="4.7546%" y="367.50"></text></g><g><title>do_user_addr_fault (1,457,597,267 samples, 0.06%)</title><rect x="4.5025%" y="373" width="0.0562%" height="15" fill="rgb(206,124,46)" fg:x="116746758671" fg:w="1457597267"/><text x="4.7525%" y="383.50"></text></g><g><title>__do_page_fault (1,480,267,957 samples, 0.06%)</title><rect x="4.5018%" y="389" width="0.0571%" height="15" fill="rgb(249,21,11)" fg:x="116729797338" fg:w="1480267957"/><text x="4.7518%" y="399.50"></text></g><g><title>page_fault (1,494,348,081 samples, 0.06%)</title><rect x="4.5014%" y="421" width="0.0576%" height="15" fill="rgb(222,201,40)" fg:x="116718492350" fg:w="1494348081"/><text x="4.7514%" y="431.50"></text></g><g><title>do_page_fault (1,491,469,686 samples, 0.06%)</title><rect x="4.5015%" y="405" width="0.0575%" height="15" fill="rgb(235,61,29)" fg:x="116721370745" fg:w="1491469686"/><text x="4.7515%" y="415.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (390,548,971 samples, 0.02%)</title><rect x="4.5591%" y="421" width="0.0151%" height="15" fill="rgb(219,207,3)" fg:x="118215831596" fg:w="390548971"/><text x="4.8091%" y="431.50"></text></g><g><title>prepare_exit_to_usermode (314,047,891 samples, 0.01%)</title><rect x="4.5621%" y="405" width="0.0121%" height="15" fill="rgb(222,56,46)" fg:x="118292332676" fg:w="314047891"/><text x="4.8121%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,322,686,053 samples, 0.09%)</title><rect x="4.4853%" y="453" width="0.0896%" height="15" fill="rgb(239,76,54)" fg:x="116300864981" fg:w="2322686053"/><text x="4.7353%" y="463.50"></text></g><g><title>core::ptr::write (2,262,890,762 samples, 0.09%)</title><rect x="4.4876%" y="437" width="0.0873%" height="15" fill="rgb(231,124,27)" fg:x="116360660272" fg:w="2262890762"/><text x="4.7376%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;QUEUE_TEST::KeyVal&gt;&gt;&gt; (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="453" width="0.0104%" height="15" fill="rgb(249,195,6)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="437" width="0.0104%" height="15" fill="rgb(237,174,47)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;QUEUE_TEST::KeyVal&gt;]&gt; (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="421" width="0.0104%" height="15" fill="rgb(206,201,31)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;QUEUE_TEST::KeyVal&gt;&gt; (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="405" width="0.0104%" height="15" fill="rgb(231,57,52)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;QUEUE_TEST::KeyVal&gt;&gt; (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="389" width="0.0104%" height="15" fill="rgb(248,177,22)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="373" width="0.0104%" height="15" fill="rgb(215,211,37)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="357" width="0.0104%" height="15" fill="rgb(241,128,51)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="341" width="0.0104%" height="15" fill="rgb(227,165,31)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="351.50"></text></g><g><title>__GI_munmap (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="325" width="0.0104%" height="15" fill="rgb(228,167,24)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="309" width="0.0104%" height="15" fill="rgb(228,143,12)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="319.50"></text></g><g><title>do_syscall_64 (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="293" width="0.0104%" height="15" fill="rgb(249,149,8)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="303.50"></text></g><g><title>__x64_sys_munmap (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="277" width="0.0104%" height="15" fill="rgb(243,35,44)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="287.50"></text></g><g><title>__vm_munmap (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="261" width="0.0104%" height="15" fill="rgb(246,89,9)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="271.50"></text></g><g><title>__do_munmap (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="245" width="0.0104%" height="15" fill="rgb(233,213,13)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="255.50"></text></g><g><title>unmap_region (270,552,106 samples, 0.01%)</title><rect x="4.5835%" y="229" width="0.0104%" height="15" fill="rgb(233,141,41)" fg:x="118849101149" fg:w="270552106"/><text x="4.8335%" y="239.50"></text></g><g><title>do_numa_page (317,416,569 samples, 0.01%)</title><rect x="4.6039%" y="357" width="0.0122%" height="15" fill="rgb(239,167,4)" fg:x="119376730237" fg:w="317416569"/><text x="4.8539%" y="367.50"></text></g><g><title>__handle_mm_fault (399,773,304 samples, 0.02%)</title><rect x="4.6008%" y="373" width="0.0154%" height="15" fill="rgb(209,217,16)" fg:x="119297516583" fg:w="399773304"/><text x="4.8508%" y="383.50"></text></g><g><title>do_user_addr_fault (488,630,501 samples, 0.02%)</title><rect x="4.5975%" y="405" width="0.0188%" height="15" fill="rgb(219,88,35)" fg:x="119211768438" fg:w="488630501"/><text x="4.8475%" y="415.50"></text></g><g><title>handle_mm_fault (444,266,377 samples, 0.02%)</title><rect x="4.5992%" y="389" width="0.0171%" height="15" fill="rgb(220,193,23)" fg:x="119256132562" fg:w="444266377"/><text x="4.8492%" y="399.50"></text></g><g><title>page_fault (523,718,031 samples, 0.02%)</title><rect x="4.5966%" y="453" width="0.0202%" height="15" fill="rgb(230,90,52)" fg:x="119187920204" fg:w="523718031"/><text x="4.8466%" y="463.50"></text></g><g><title>do_page_fault (523,718,031 samples, 0.02%)</title><rect x="4.5966%" y="437" width="0.0202%" height="15" fill="rgb(252,106,19)" fg:x="119187920204" fg:w="523718031"/><text x="4.8466%" y="447.50"></text></g><g><title>__do_page_fault (520,759,928 samples, 0.02%)</title><rect x="4.5967%" y="421" width="0.0201%" height="15" fill="rgb(206,74,20)" fg:x="119190878307" fg:w="520759928"/><text x="4.8467%" y="431.50"></text></g><g><title>QUEUE_TEST::main (11,104,707,182 samples, 0.43%)</title><rect x="4.1997%" y="469" width="0.4283%" height="15" fill="rgb(230,138,44)" fg:x="108895285710" fg:w="11104707182"/><text x="4.4497%" y="479.50"></text></g><g><title>__GI___sched_yield (1,516,663,504 samples, 0.06%)</title><rect x="4.6279%" y="453" width="0.0585%" height="15" fill="rgb(235,182,43)" fg:x="119999992892" fg:w="1516663504"/><text x="4.8779%" y="463.50"></text></g><g><title>[[heap]] (1,622,155,721 samples, 0.06%)</title><rect x="4.6279%" y="469" width="0.0626%" height="15" fill="rgb(242,16,51)" fg:x="119999992892" fg:w="1622155721"/><text x="4.8779%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (1,009,764,770 samples, 0.04%)</title><rect x="4.6996%" y="437" width="0.0389%" height="15" fill="rgb(248,9,4)" fg:x="121859217386" fg:w="1009764770"/><text x="4.9496%" y="447.50"></text></g><g><title>syscall (1,047,758,715 samples, 0.04%)</title><rect x="4.6986%" y="453" width="0.0404%" height="15" fill="rgb(210,31,22)" fg:x="121832300073" fg:w="1047758715"/><text x="4.9486%" y="463.50"></text></g><g><title>[anon] (1,126,601,558 samples, 0.04%)</title><rect x="4.6956%" y="469" width="0.0434%" height="15" fill="rgb(239,54,39)" fg:x="121755597274" fg:w="1126601558"/><text x="4.9456%" y="479.50"></text></g><g><title>syscall (698,699,538 samples, 0.03%)</title><rect x="4.7553%" y="453" width="0.0269%" height="15" fill="rgb(230,99,41)" fg:x="123303834494" fg:w="698699538"/><text x="5.0053%" y="463.50"></text></g><g><title>[unknown] (1,121,891,118 samples, 0.04%)</title><rect x="4.7391%" y="469" width="0.0433%" height="15" fill="rgb(253,106,12)" fg:x="122882198832" fg:w="1121891118"/><text x="4.9891%" y="479.50"></text></g><g><title>_int_malloc (1,649,193,701 samples, 0.06%)</title><rect x="4.8842%" y="437" width="0.0636%" height="15" fill="rgb(213,46,41)" fg:x="126644472095" fg:w="1649193701"/><text x="5.1342%" y="447.50"></text></g><g><title>__GI___libc_malloc (3,172,562,533 samples, 0.12%)</title><rect x="4.8268%" y="453" width="0.1224%" height="15" fill="rgb(215,133,35)" fg:x="125157404635" fg:w="3172562533"/><text x="5.0768%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,816,232,768 samples, 0.15%)</title><rect x="4.8026%" y="469" width="0.1472%" height="15" fill="rgb(213,28,5)" fg:x="124528155526" fg:w="3816232768"/><text x="5.0526%" y="479.50"></text></g><g><title>apic_timer_interrupt (308,549,280 samples, 0.01%)</title><rect x="4.9497%" y="469" width="0.0119%" height="15" fill="rgb(215,77,49)" fg:x="128344388294" fg:w="308549280"/><text x="5.1997%" y="479.50"></text></g><g><title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::from_u64 (302,524,439 samples, 0.01%)</title><rect x="5.0770%" y="421" width="0.0117%" height="15" fill="rgb(248,100,22)" fg:x="131644143450" fg:w="302524439"/><text x="5.3270%" y="431.50"></text></g><g><title>core::num::dec2flt::number::Number::try_fast_path (862,447,427 samples, 0.03%)</title><rect x="5.0749%" y="437" width="0.0333%" height="15" fill="rgb(208,67,9)" fg:x="131590950769" fg:w="862447427"/><text x="5.3249%" y="447.50"></text></g><g><title>core::num::dec2flt::number::Number::is_fast_path (310,957,009 samples, 0.01%)</title><rect x="5.0962%" y="421" width="0.0120%" height="15" fill="rgb(219,133,21)" fg:x="132142441187" fg:w="310957009"/><text x="5.3462%" y="431.50"></text></g><g><title>core::num::dec2flt::dec2flt (2,691,514,101 samples, 0.10%)</title><rect x="5.0057%" y="453" width="0.1038%" height="15" fill="rgb(246,46,29)" fg:x="129794103161" fg:w="2691514101"/><text x="5.2557%" y="463.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (3,734,041,635 samples, 0.14%)</title><rect x="4.9656%" y="469" width="0.1440%" height="15" fill="rgb(246,185,52)" fg:x="128754483571" fg:w="3734041635"/><text x="5.2156%" y="479.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (317,948,619 samples, 0.01%)</title><rect x="5.1853%" y="453" width="0.0123%" height="15" fill="rgb(252,136,11)" fg:x="134452085126" fg:w="317948619"/><text x="5.4353%" y="463.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (2,450,946,564 samples, 0.09%)</title><rect x="5.1096%" y="469" width="0.0945%" height="15" fill="rgb(219,138,53)" fg:x="132488525206" fg:w="2450946564"/><text x="5.3596%" y="479.50"></text></g><g><title>core::num::&lt;impl u8&gt;::saturating_sub (1,232,898,901 samples, 0.05%)</title><rect x="5.3868%" y="437" width="0.0475%" height="15" fill="rgb(211,51,23)" fg:x="139677532257" fg:w="1232898901"/><text x="5.6368%" y="447.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (284,171,316 samples, 0.01%)</title><rect x="5.5648%" y="405" width="0.0110%" height="15" fill="rgb(247,221,28)" fg:x="144292331147" fg:w="284171316"/><text x="5.8148%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (401,363,322 samples, 0.02%)</title><rect x="5.5792%" y="389" width="0.0155%" height="15" fill="rgb(251,222,45)" fg:x="144665982782" fg:w="401363322"/><text x="5.8292%" y="399.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits::{{closure}} (806,303,939 samples, 0.03%)</title><rect x="5.5758%" y="405" width="0.0311%" height="15" fill="rgb(217,162,53)" fg:x="144576502463" fg:w="806303939"/><text x="5.8258%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (315,460,298 samples, 0.01%)</title><rect x="5.5947%" y="389" width="0.0122%" height="15" fill="rgb(229,93,14)" fg:x="145067346104" fg:w="315460298"/><text x="5.8447%" y="399.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::parse_digits (3,212,673,878 samples, 0.12%)</title><rect x="5.4844%" y="421" width="0.1239%" height="15" fill="rgb(209,67,49)" fg:x="142206853962" fg:w="3212673878"/><text x="5.7344%" y="431.50"></text></g><g><title>core::num::dec2flt::common::is_8digits (623,735,019 samples, 0.02%)</title><rect x="5.6275%" y="421" width="0.0241%" height="15" fill="rgb(213,87,29)" fg:x="145919293357" fg:w="623735019"/><text x="5.8775%" y="431.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (1,330,202,216 samples, 0.05%)</title><rect x="5.6516%" y="421" width="0.0513%" height="15" fill="rgb(205,151,52)" fg:x="146543028376" fg:w="1330202216"/><text x="5.9016%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (480,787,533 samples, 0.02%)</title><rect x="5.6844%" y="405" width="0.0185%" height="15" fill="rgb(253,215,39)" fg:x="147392443059" fg:w="480787533"/><text x="5.9344%" y="415.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (6,986,867,875 samples, 0.27%)</title><rect x="5.4344%" y="437" width="0.2695%" height="15" fill="rgb(221,220,41)" fg:x="140910431158" fg:w="6986867875"/><text x="5.6844%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (549,682,232 samples, 0.02%)</title><rect x="5.7038%" y="437" width="0.0212%" height="15" fill="rgb(218,133,21)" fg:x="147897299033" fg:w="549682232"/><text x="5.9538%" y="447.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (12,192,575,570 samples, 0.47%)</title><rect x="5.2554%" y="453" width="0.4702%" height="15" fill="rgb(221,193,43)" fg:x="136269532065" fg:w="12192575570"/><text x="5.5054%" y="463.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (13,525,485,766 samples, 0.52%)</title><rect x="5.2041%" y="469" width="0.5216%" height="15" fill="rgb(240,128,52)" fg:x="134939471770" fg:w="13525485766"/><text x="5.4541%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1,377,757,277 samples, 0.05%)</title><rect x="5.7920%" y="405" width="0.0531%" height="15" fill="rgb(253,114,12)" fg:x="150183282154" fg:w="1377757277"/><text x="6.0420%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (914,076,160 samples, 0.04%)</title><rect x="5.8099%" y="389" width="0.0353%" height="15" fill="rgb(215,223,47)" fg:x="150646963271" fg:w="914076160"/><text x="6.0599%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::le (914,076,160 samples, 0.04%)</title><rect x="5.8099%" y="373" width="0.0353%" height="15" fill="rgb(248,225,23)" fg:x="150646963271" fg:w="914076160"/><text x="6.0599%" y="383.50"></text></g><g><title>&lt;QUEUE_TEST::KeyVal as core::cmp::PartialOrd&gt;::partial_cmp (914,076,160 samples, 0.04%)</title><rect x="5.8099%" y="357" width="0.0353%" height="15" fill="rgb(250,108,0)" fg:x="150646963271" fg:w="914076160"/><text x="6.0599%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (1,645,686,888 samples, 0.06%)</title><rect x="5.7822%" y="421" width="0.0635%" height="15" fill="rgb(228,208,7)" fg:x="149928338973" fg:w="1645686888"/><text x="6.0322%" y="431.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (1,745,901,322 samples, 0.07%)</title><rect x="5.7814%" y="437" width="0.0673%" height="15" fill="rgb(244,45,10)" fg:x="149909860150" fg:w="1745901322"/><text x="6.0314%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1,532,934,357 samples, 0.06%)</title><rect x="5.8538%" y="389" width="0.0591%" height="15" fill="rgb(207,125,25)" fg:x="151787148845" fg:w="1532934357"/><text x="6.1038%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (1,532,934,357 samples, 0.06%)</title><rect x="5.8538%" y="373" width="0.0591%" height="15" fill="rgb(210,195,18)" fg:x="151787148845" fg:w="1532934357"/><text x="6.1038%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt;&gt; (1,684,906,617 samples, 0.06%)</title><rect x="5.8488%" y="437" width="0.0650%" height="15" fill="rgb(249,80,12)" fg:x="151655761472" fg:w="1684906617"/><text x="6.0988%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,684,906,617 samples, 0.06%)</title><rect x="5.8488%" y="421" width="0.0650%" height="15" fill="rgb(221,65,9)" fg:x="151655761472" fg:w="1684906617"/><text x="6.0988%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1,629,727,850 samples, 0.06%)</title><rect x="5.8509%" y="405" width="0.0629%" height="15" fill="rgb(235,49,36)" fg:x="151710940239" fg:w="1629727850"/><text x="6.1009%" y="415.50"></text></g><g><title>&lt;QUEUE_TEST::LockingBinaryHeap&lt;E&gt; as QUEUE_TEST::ParallelPriorityQueue&lt;E&gt;&gt;::bulk_push::{{closure}} (5,404,645,779 samples, 0.21%)</title><rect x="5.7808%" y="453" width="0.2084%" height="15" fill="rgb(225,32,20)" fg:x="149893727695" fg:w="5404645779"/><text x="6.0308%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,957,705,385 samples, 0.08%)</title><rect x="5.9138%" y="437" width="0.0755%" height="15" fill="rgb(215,141,46)" fg:x="153340668089" fg:w="1957705385"/><text x="6.1638%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1,728,340,236 samples, 0.07%)</title><rect x="5.9226%" y="421" width="0.0667%" height="15" fill="rgb(250,160,47)" fg:x="153570033238" fg:w="1728340236"/><text x="6.1726%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,612,601,578 samples, 0.06%)</title><rect x="5.9271%" y="405" width="0.0622%" height="15" fill="rgb(216,222,40)" fg:x="153685771896" fg:w="1612601578"/><text x="6.1771%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,612,601,578 samples, 0.06%)</title><rect x="5.9271%" y="389" width="0.0622%" height="15" fill="rgb(234,217,39)" fg:x="153685771896" fg:w="1612601578"/><text x="6.1771%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6,847,770,031 samples, 0.26%)</title><rect x="5.7257%" y="469" width="0.2641%" height="15" fill="rgb(207,178,40)" fg:x="148464957536" fg:w="6847770031"/><text x="5.9757%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (418,876,464 samples, 0.02%)</title><rect x="6.0426%" y="389" width="0.0162%" height="15" fill="rgb(221,136,13)" fg:x="156681956737" fg:w="418876464"/><text x="6.2926%" y="399.50"></text></g><g><title>scheduler_tick (298,114,093 samples, 0.01%)</title><rect x="6.1748%" y="245" width="0.0115%" height="15" fill="rgb(249,199,10)" fg:x="160108582285" fg:w="298114093"/><text x="6.4248%" y="255.50"></text></g><g><title>tick_sched_handle (438,472,645 samples, 0.02%)</title><rect x="6.1695%" y="277" width="0.0169%" height="15" fill="rgb(249,222,13)" fg:x="159972988732" fg:w="438472645"/><text x="6.4195%" y="287.50"></text></g><g><title>update_process_times (433,841,270 samples, 0.02%)</title><rect x="6.1697%" y="261" width="0.0167%" height="15" fill="rgb(244,185,38)" fg:x="159977620107" fg:w="433841270"/><text x="6.4197%" y="271.50"></text></g><g><title>tick_sched_timer (451,661,298 samples, 0.02%)</title><rect x="6.1692%" y="293" width="0.0174%" height="15" fill="rgb(236,202,9)" fg:x="159965350379" fg:w="451661298"/><text x="6.4192%" y="303.50"></text></g><g><title>__hrtimer_run_queues (573,871,419 samples, 0.02%)</title><rect x="6.1647%" y="309" width="0.0221%" height="15" fill="rgb(250,229,37)" fg:x="159848399698" fg:w="573871419"/><text x="6.4147%" y="319.50"></text></g><g><title>hrtimer_interrupt (636,375,027 samples, 0.02%)</title><rect x="6.1645%" y="325" width="0.0245%" height="15" fill="rgb(206,174,23)" fg:x="159841562201" fg:w="636375027"/><text x="6.4145%" y="335.50"></text></g><g><title>apic_timer_interrupt (920,904,386 samples, 0.04%)</title><rect x="6.1636%" y="357" width="0.0355%" height="15" fill="rgb(211,33,43)" fg:x="159818799333" fg:w="920904386"/><text x="6.4136%" y="367.50"></text></g><g><title>smp_apic_timer_interrupt (907,496,429 samples, 0.03%)</title><rect x="6.1641%" y="341" width="0.0350%" height="15" fill="rgb(245,58,50)" fg:x="159832207290" fg:w="907496429"/><text x="6.4141%" y="351.50"></text></g><g><title>exit_to_usermode_loop (294,405,954 samples, 0.01%)</title><rect x="6.2217%" y="325" width="0.0114%" height="15" fill="rgb(244,68,36)" fg:x="161325536522" fg:w="294405954"/><text x="6.4717%" y="335.50"></text></g><g><title>prepare_exit_to_usermode (389,271,728 samples, 0.02%)</title><rect x="6.2185%" y="341" width="0.0150%" height="15" fill="rgb(232,229,15)" fg:x="161243229674" fg:w="389271728"/><text x="6.4685%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,959,475,224 samples, 0.19%)</title><rect x="6.0424%" y="405" width="0.1913%" height="15" fill="rgb(254,30,23)" fg:x="156675611542" fg:w="4959475224"/><text x="6.2924%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (4,534,253,565 samples, 0.17%)</title><rect x="6.0588%" y="389" width="0.1749%" height="15" fill="rgb(235,160,14)" fg:x="157100833201" fg:w="4534253565"/><text x="6.3088%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4,534,253,565 samples, 0.17%)</title><rect x="6.0588%" y="373" width="0.1749%" height="15" fill="rgb(212,155,44)" fg:x="157100833201" fg:w="4534253565"/><text x="6.3088%" y="383.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (437,900,155 samples, 0.02%)</title><rect x="6.2167%" y="357" width="0.0169%" height="15" fill="rgb(226,2,50)" fg:x="161197186611" fg:w="437900155"/><text x="6.4667%" y="367.50"></text></g><g><title>down_read_trylock (1,240,470,366 samples, 0.05%)</title><rect x="23.2729%" y="293" width="0.0478%" height="15" fill="rgb(234,177,6)" fg:x="603456031814" fg:w="1240470366"/><text x="23.5229%" y="303.50"></text></g><g><title>_raw_spin_lock (2,235,937,315 samples, 0.09%)</title><rect x="23.3516%" y="261" width="0.0862%" height="15" fill="rgb(217,24,9)" fg:x="605494965777" fg:w="2235937315"/><text x="23.6016%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,107,246,569 samples, 0.08%)</title><rect x="23.3565%" y="245" width="0.0813%" height="15" fill="rgb(220,13,46)" fg:x="605623656523" fg:w="2107246569"/><text x="23.6065%" y="255.50"></text></g><g><title>_raw_spin_lock (7,997,415,430 samples, 0.31%)</title><rect x="23.4426%" y="245" width="0.3084%" height="15" fill="rgb(239,221,27)" fg:x="607856366505" fg:w="7997415430"/><text x="23.6926%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (7,995,337,707 samples, 0.31%)</title><rect x="23.4427%" y="229" width="0.3083%" height="15" fill="rgb(222,198,25)" fg:x="607858444228" fg:w="7995337707"/><text x="23.6927%" y="239.50"></text></g><g><title>do_numa_page (8,249,226,286 samples, 0.32%)</title><rect x="23.4399%" y="261" width="0.3181%" height="15" fill="rgb(211,99,13)" fg:x="607784151987" fg:w="8249226286"/><text x="23.6899%" y="271.50"></text></g><g><title>__handle_mm_fault (11,149,818,001 samples, 0.43%)</title><rect x="23.3287%" y="277" width="0.4300%" height="15" fill="rgb(232,111,31)" fg:x="604902027084" fg:w="11149818001"/><text x="23.5787%" y="287.50"></text></g><g><title>handle_mm_fault (11,442,007,580 samples, 0.44%)</title><rect x="23.3224%" y="293" width="0.4413%" height="15" fill="rgb(245,82,37)" fg:x="604739543234" fg:w="11442007580"/><text x="23.5724%" y="303.50"></text></g><g><title>do_user_addr_fault (12,869,954,726 samples, 0.50%)</title><rect x="23.2679%" y="309" width="0.4963%" height="15" fill="rgb(227,149,46)" fg:x="603326343533" fg:w="12869954726"/><text x="23.5179%" y="319.50"></text></g><g><title>__do_page_fault (13,598,899,624 samples, 0.52%)</title><rect x="23.2646%" y="325" width="0.5245%" height="15" fill="rgb(218,36,50)" fg:x="603238526441" fg:w="13598899624"/><text x="23.5146%" y="335.50"></text></g><g><title>up_read (622,968,260 samples, 0.02%)</title><rect x="23.7650%" y="309" width="0.0240%" height="15" fill="rgb(226,80,48)" fg:x="616214457805" fg:w="622968260"/><text x="24.0150%" y="319.50"></text></g><g><title>page_fault (13,639,700,690 samples, 0.53%)</title><rect x="23.2632%" y="357" width="0.5260%" height="15" fill="rgb(238,224,15)" fg:x="603202465685" fg:w="13639700690"/><text x="23.5132%" y="367.50"></text></g><g><title>do_page_fault (13,623,063,392 samples, 0.53%)</title><rect x="23.2638%" y="341" width="0.5254%" height="15" fill="rgb(241,136,10)" fg:x="603219102983" fg:w="13623063392"/><text x="23.5138%" y="351.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (730,050,390 samples, 0.03%)</title><rect x="23.7893%" y="357" width="0.0282%" height="15" fill="rgb(208,32,45)" fg:x="616844715935" fg:w="730050390"/><text x="24.0393%" y="367.50"></text></g><g><title>prepare_exit_to_usermode (517,797,714 samples, 0.02%)</title><rect x="23.7975%" y="341" width="0.0200%" height="15" fill="rgb(207,135,9)" fg:x="617056968611" fg:w="517797714"/><text x="24.0475%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (460,931,154,596 samples, 17.78%)</title><rect x="6.0424%" y="421" width="17.7763%" height="15" fill="rgb(206,86,44)" fg:x="156675611542" fg:w="460931154596"/><text x="6.2924%" y="431.50">&lt;core::slice::iter::Iter&lt;T&gt; ..</text></g><g><title>QUEUE_TEST::time_parallel::{{closure}}::{{closure}} (455,971,679,372 samples, 17.59%)</title><rect x="6.2336%" y="405" width="17.5850%" height="15" fill="rgb(245,177,15)" fg:x="161635086766" fg:w="455971679372"/><text x="6.4836%" y="415.50">QUEUE_TEST::time_parallel::..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (455,971,679,372 samples, 17.59%)</title><rect x="6.2336%" y="389" width="17.5850%" height="15" fill="rgb(206,64,50)" fg:x="161635086766" fg:w="455971679372"/><text x="6.4836%" y="399.50">core::tuple::&lt;impl core::cm..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (14,980,173,636 samples, 0.58%)</title><rect x="23.2410%" y="373" width="0.5777%" height="15" fill="rgb(234,36,40)" fg:x="602626592502" fg:w="14980173636"/><text x="23.4910%" y="383.50"></text></g><g><title>QUEUE_TEST::csvreader::Rec::p1 (335,699,592 samples, 0.01%)</title><rect x="23.8187%" y="421" width="0.0129%" height="15" fill="rgb(213,64,8)" fg:x="617606766138" fg:w="335699592"/><text x="24.0687%" y="431.50"></text></g><g><title>QUEUE_TEST::time_parallel::{{closure}} (462,102,295,563 samples, 17.82%)</title><rect x="6.0131%" y="437" width="17.8215%" height="15" fill="rgb(210,75,36)" fg:x="155916526548" fg:w="462102295563"/><text x="6.2631%" y="447.50">QUEUE_TEST::time_parallel::{..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (462,708,518,433 samples, 17.84%)</title><rect x="5.9898%" y="469" width="17.8449%" height="15" fill="rgb(229,88,21)" fg:x="155312727567" fg:w="462708518433"/><text x="6.2398%" y="479.50">core::ops::function::impls::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (462,268,074,164 samples, 17.83%)</title><rect x="6.0068%" y="453" width="17.8279%" height="15" fill="rgb(252,204,47)" fg:x="155753171836" fg:w="462268074164"/><text x="6.2568%" y="463.50">core::ops::function::impls::..</text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (363,434,968 samples, 0.01%)</title><rect x="24.0177%" y="453" width="0.0140%" height="15" fill="rgb(208,77,27)" fg:x="622766047732" fg:w="363434968"/><text x="24.2677%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (363,434,968 samples, 0.01%)</title><rect x="24.0177%" y="437" width="0.0140%" height="15" fill="rgb(221,76,26)" fg:x="622766047732" fg:w="363434968"/><text x="24.2677%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,364,936,752 samples, 0.09%)</title><rect x="24.0399%" y="453" width="0.0912%" height="15" fill="rgb(225,139,18)" fg:x="623343433867" fg:w="2364936752"/><text x="24.2899%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (2,364,936,752 samples, 0.09%)</title><rect x="24.0399%" y="437" width="0.0912%" height="15" fill="rgb(230,137,11)" fg:x="623343433867" fg:w="2364936752"/><text x="24.2899%" y="447.50"></text></g><g><title>core::sync::atomic::fence (3,853,598,668 samples, 0.15%)</title><rect x="24.1311%" y="453" width="0.1486%" height="15" fill="rgb(212,28,1)" fg:x="625708370619" fg:w="3853598668"/><text x="24.3811%" y="463.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (11,469,415,650 samples, 0.44%)</title><rect x="23.8387%" y="469" width="0.4423%" height="15" fill="rgb(248,164,17)" fg:x="618125499691" fg:w="11469415650"/><text x="24.0887%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (50,579,622,812 samples, 1.95%)</title><rect x="27.0398%" y="453" width="1.9507%" height="15" fill="rgb(222,171,42)" fg:x="701127615735" fg:w="50579622812"/><text x="27.2898%" y="463.50">&lt;..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (50,579,622,812 samples, 1.95%)</title><rect x="27.0398%" y="437" width="1.9507%" height="15" fill="rgb(243,84,45)" fg:x="701127615735" fg:w="50579622812"/><text x="27.2898%" y="447.50">a..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (50,579,622,812 samples, 1.95%)</title><rect x="27.0398%" y="421" width="1.9507%" height="15" fill="rgb(252,49,23)" fg:x="701127615735" fg:w="50579622812"/><text x="27.2898%" y="431.50">c..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,963,551,593 samples, 0.08%)</title><rect x="30.6021%" y="405" width="0.0757%" height="15" fill="rgb(215,19,7)" fg:x="793498656863" fg:w="1963551593"/><text x="30.8521%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,264,546,195 samples, 0.05%)</title><rect x="30.6779%" y="405" width="0.0488%" height="15" fill="rgb(238,81,41)" fg:x="795462208456" fg:w="1264546195"/><text x="30.9279%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,264,546,195 samples, 0.05%)</title><rect x="30.6779%" y="389" width="0.0488%" height="15" fill="rgb(210,199,37)" fg:x="795462208456" fg:w="1264546195"/><text x="30.9279%" y="399.50"></text></g><g><title>core::mem::replace (1,264,546,195 samples, 0.05%)</title><rect x="30.6779%" y="373" width="0.0488%" height="15" fill="rgb(244,192,49)" fg:x="795462208456" fg:w="1264546195"/><text x="30.9279%" y="383.50"></text></g><g><title>core::ptr::write (1,264,546,195 samples, 0.05%)</title><rect x="30.6779%" y="357" width="0.0488%" height="15" fill="rgb(226,211,11)" fg:x="795462208456" fg:w="1264546195"/><text x="30.9279%" y="367.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (1,654,086,010 samples, 0.06%)</title><rect x="30.7266%" y="405" width="0.0638%" height="15" fill="rgb(236,162,54)" fg:x="796726754651" fg:w="1654086010"/><text x="30.9766%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1,654,086,010 samples, 0.06%)</title><rect x="30.7266%" y="389" width="0.0638%" height="15" fill="rgb(220,229,9)" fg:x="796726754651" fg:w="1654086010"/><text x="30.9766%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_store (1,654,086,010 samples, 0.06%)</title><rect x="30.7266%" y="373" width="0.0638%" height="15" fill="rgb(250,87,22)" fg:x="796726754651" fg:w="1654086010"/><text x="30.9766%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (46,423,818,985 samples, 1.79%)</title><rect x="29.0009%" y="453" width="1.7904%" height="15" fill="rgb(239,43,17)" fg:x="751978190728" fg:w="46423818985"/><text x="29.2509%" y="463.50">c..</text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (46,423,818,985 samples, 1.79%)</title><rect x="29.0009%" y="437" width="1.7904%" height="15" fill="rgb(231,177,25)" fg:x="751978190728" fg:w="46423818985"/><text x="29.2509%" y="447.50">&lt;..</text></g><g><title>crossbeam_epoch::internal::Local::unpin (46,382,774,525 samples, 1.79%)</title><rect x="29.0024%" y="421" width="1.7888%" height="15" fill="rgb(219,179,1)" fg:x="752019235188" fg:w="46382774525"/><text x="29.2524%" y="431.50">c..</text></g><g><title>core::sync::atomic::AtomicIsize::compare_exchange (4,226,408,983 samples, 0.16%)</title><rect x="30.7935%" y="453" width="0.1630%" height="15" fill="rgb(238,219,53)" fg:x="798459640658" fg:w="4226408983"/><text x="31.0435%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4,226,408,983 samples, 0.16%)</title><rect x="30.7935%" y="437" width="0.1630%" height="15" fill="rgb(232,167,36)" fg:x="798459640658" fg:w="4226408983"/><text x="31.0435%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (23,571,268,818 samples, 0.91%)</title><rect x="30.9565%" y="453" width="0.9091%" height="15" fill="rgb(244,19,51)" fg:x="802686049641" fg:w="23571268818"/><text x="31.2065%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (23,571,268,818 samples, 0.91%)</title><rect x="30.9565%" y="437" width="0.9091%" height="15" fill="rgb(224,6,22)" fg:x="802686049641" fg:w="23571268818"/><text x="31.2065%" y="447.50"></text></g><g><title>core::ptr::read_volatile (1,111,185,397 samples, 0.04%)</title><rect x="31.8655%" y="437" width="0.0429%" height="15" fill="rgb(224,145,5)" fg:x="826257318459" fg:w="1111185397"/><text x="32.1155%" y="447.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (1,532,451,638 samples, 0.06%)</title><rect x="31.8655%" y="453" width="0.0591%" height="15" fill="rgb(234,130,49)" fg:x="826257318459" fg:w="1532451638"/><text x="32.1155%" y="463.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (421,266,241 samples, 0.02%)</title><rect x="31.9084%" y="437" width="0.0162%" height="15" fill="rgb(254,6,2)" fg:x="827368503856" fg:w="421266241"/><text x="32.1584%" y="447.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (282,775,000 samples, 0.01%)</title><rect x="31.9246%" y="453" width="0.0109%" height="15" fill="rgb(208,96,46)" fg:x="827789770097" fg:w="282775000"/><text x="32.1746%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (282,775,000 samples, 0.01%)</title><rect x="31.9246%" y="437" width="0.0109%" height="15" fill="rgb(239,3,39)" fg:x="827789770097" fg:w="282775000"/><text x="32.1746%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (282,775,000 samples, 0.01%)</title><rect x="31.9246%" y="421" width="0.0109%" height="15" fill="rgb(233,210,1)" fg:x="827789770097" fg:w="282775000"/><text x="32.1746%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (21,339,184,212 samples, 0.82%)</title><rect x="32.8051%" y="405" width="0.8230%" height="15" fill="rgb(244,137,37)" fg:x="850618840744" fg:w="21339184212"/><text x="33.0551%" y="415.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (21,339,184,212 samples, 0.82%)</title><rect x="32.8051%" y="389" width="0.8230%" height="15" fill="rgb(240,136,2)" fg:x="850618840744" fg:w="21339184212"/><text x="33.0551%" y="399.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (21,339,184,212 samples, 0.82%)</title><rect x="32.8051%" y="373" width="0.8230%" height="15" fill="rgb(239,18,37)" fg:x="850618840744" fg:w="21339184212"/><text x="33.0551%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (43,516,079,421 samples, 1.68%)</title><rect x="31.9501%" y="421" width="1.6782%" height="15" fill="rgb(218,185,22)" fg:x="828451253164" fg:w="43516079421"/><text x="32.2001%" y="431.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (43,878,446,763 samples, 1.69%)</title><rect x="31.9363%" y="453" width="1.6922%" height="15" fill="rgb(225,218,4)" fg:x="828091569200" fg:w="43878446763"/><text x="32.1863%" y="463.50"></text></g><g><title>crossbeam_epoch::default::with_handle (43,878,446,763 samples, 1.69%)</title><rect x="31.9363%" y="437" width="1.6922%" height="15" fill="rgb(230,182,32)" fg:x="828091569200" fg:w="43878446763"/><text x="32.1863%" y="447.50"></text></g><g><title>crossbeam_epoch::default::pin (39,659,634,437 samples, 1.53%)</title><rect x="33.6285%" y="453" width="1.5295%" height="15" fill="rgb(242,56,43)" fg:x="871970015963" fg:w="39659634437"/><text x="33.8785%" y="463.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (282,119,144,670 samples, 10.88%)</title><rect x="24.2810%" y="469" width="10.8802%" height="15" fill="rgb(233,99,24)" fg:x="629594915341" fg:w="282119144670"/><text x="24.5310%" y="479.50">crossbeam_deque:..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,192,208,753 samples, 0.05%)</title><rect x="35.1853%" y="453" width="0.0460%" height="15" fill="rgb(234,209,42)" fg:x="912336248901" fg:w="1192208753"/><text x="35.4353%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,192,208,753 samples, 0.05%)</title><rect x="35.1853%" y="437" width="0.0460%" height="15" fill="rgb(227,7,12)" fg:x="912336248901" fg:w="1192208753"/><text x="35.4353%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,192,208,753 samples, 0.05%)</title><rect x="35.1853%" y="421" width="0.0460%" height="15" fill="rgb(245,203,43)" fg:x="912336248901" fg:w="1192208753"/><text x="35.4353%" y="431.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (460,685,791 samples, 0.02%)</title><rect x="35.2314%" y="453" width="0.0178%" height="15" fill="rgb(238,205,33)" fg:x="913532233028" fg:w="460685791"/><text x="35.4814%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (2,874,851,851 samples, 0.11%)</title><rect x="35.2513%" y="453" width="0.1109%" height="15" fill="rgb(231,56,7)" fg:x="914047601094" fg:w="2874851851"/><text x="35.5013%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (2,874,851,851 samples, 0.11%)</title><rect x="35.2513%" y="437" width="0.1109%" height="15" fill="rgb(244,186,29)" fg:x="914047601094" fg:w="2874851851"/><text x="35.5013%" y="447.50"></text></g><g><title>core::sync::atomic::fence (267,955,742 samples, 0.01%)</title><rect x="35.3622%" y="453" width="0.0103%" height="15" fill="rgb(234,111,31)" fg:x="916925314259" fg:w="267955742"/><text x="35.6122%" y="463.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (5,687,188,619 samples, 0.22%)</title><rect x="35.1614%" y="469" width="0.2193%" height="15" fill="rgb(241,149,10)" fg:x="911716983431" fg:w="5687188619"/><text x="35.4114%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17,400,629,610 samples, 0.67%)</title><rect x="36.7541%" y="437" width="0.6711%" height="15" fill="rgb(249,206,44)" fg:x="953015829459" fg:w="17400629610"/><text x="37.0041%" y="447.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (17,400,629,610 samples, 0.67%)</title><rect x="36.7541%" y="421" width="0.6711%" height="15" fill="rgb(251,153,30)" fg:x="953015829459" fg:w="17400629610"/><text x="37.0041%" y="431.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (17,400,629,610 samples, 0.67%)</title><rect x="36.7541%" y="405" width="0.6711%" height="15" fill="rgb(239,152,38)" fg:x="953015829459" fg:w="17400629610"/><text x="37.0041%" y="415.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;usize&gt; as core::ops::arith::Add&gt;::add (2,314,322,115 samples, 0.09%)</title><rect x="37.9881%" y="373" width="0.0893%" height="15" fill="rgb(249,139,47)" fg:x="985013333476" fg:w="2314322115"/><text x="38.2381%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2,314,322,115 samples, 0.09%)</title><rect x="37.9881%" y="357" width="0.0893%" height="15" fill="rgb(244,64,35)" fg:x="985013333476" fg:w="2314322115"/><text x="38.2381%" y="367.50"></text></g><g><title>__hrtimer_run_queues (327,160,447 samples, 0.01%)</title><rect x="39.4787%" y="309" width="0.0126%" height="15" fill="rgb(216,46,15)" fg:x="1023662406664" fg:w="327160447"/><text x="39.7287%" y="319.50"></text></g><g><title>hrtimer_interrupt (393,556,728 samples, 0.02%)</title><rect x="39.4783%" y="325" width="0.0152%" height="15" fill="rgb(250,74,19)" fg:x="1023652702975" fg:w="393556728"/><text x="39.7283%" y="335.50"></text></g><g><title>apic_timer_interrupt (650,852,168 samples, 0.03%)</title><rect x="39.4775%" y="357" width="0.0251%" height="15" fill="rgb(249,42,33)" fg:x="1023632472937" fg:w="650852168"/><text x="39.7275%" y="367.50"></text></g><g><title>smp_apic_timer_interrupt (640,513,111 samples, 0.02%)</title><rect x="39.4779%" y="341" width="0.0247%" height="15" fill="rgb(242,149,17)" fg:x="1023642811994" fg:w="640513111"/><text x="39.7279%" y="351.50"></text></g><g><title>ttwu_do_activate (278,513,363 samples, 0.01%)</title><rect x="39.5158%" y="293" width="0.0107%" height="15" fill="rgb(244,29,21)" fg:x="1024625030288" fg:w="278513363"/><text x="39.7658%" y="303.50"></text></g><g><title>reschedule_interrupt (366,881,408 samples, 0.01%)</title><rect x="39.5129%" y="357" width="0.0141%" height="15" fill="rgb(220,130,37)" fg:x="1024551271144" fg:w="366881408"/><text x="39.7629%" y="367.50"></text></g><g><title>smp_reschedule_interrupt (355,497,818 samples, 0.01%)</title><rect x="39.5134%" y="341" width="0.0137%" height="15" fill="rgb(211,67,2)" fg:x="1024562654734" fg:w="355497818"/><text x="39.7634%" y="351.50"></text></g><g><title>scheduler_ipi (355,497,818 samples, 0.01%)</title><rect x="39.5134%" y="325" width="0.0137%" height="15" fill="rgb(235,68,52)" fg:x="1024562654734" fg:w="355497818"/><text x="39.7634%" y="335.50"></text></g><g><title>sched_ttwu_pending (326,232,253 samples, 0.01%)</title><rect x="39.5145%" y="309" width="0.0126%" height="15" fill="rgb(246,142,3)" fg:x="1024591920299" fg:w="326232253"/><text x="39.7645%" y="319.50"></text></g><g><title>exit_to_usermode_loop (340,138,723 samples, 0.01%)</title><rect x="39.5332%" y="325" width="0.0131%" height="15" fill="rgb(241,25,7)" fg:x="1025076010662" fg:w="340138723"/><text x="39.7832%" y="335.50"></text></g><g><title>task_work_run (260,011,019 samples, 0.01%)</title><rect x="39.5363%" y="309" width="0.0100%" height="15" fill="rgb(242,119,39)" fg:x="1025156138366" fg:w="260011019"/><text x="39.7863%" y="319.50"></text></g><g><title>task_numa_work (260,011,019 samples, 0.01%)</title><rect x="39.5363%" y="293" width="0.0100%" height="15" fill="rgb(241,98,45)" fg:x="1025156138366" fg:w="260011019"/><text x="39.7863%" y="303.50"></text></g><g><title>change_prot_numa (260,011,019 samples, 0.01%)</title><rect x="39.5363%" y="277" width="0.0100%" height="15" fill="rgb(254,28,30)" fg:x="1025156138366" fg:w="260011019"/><text x="39.7863%" y="287.50"></text></g><g><title>change_protection (260,011,019 samples, 0.01%)</title><rect x="39.5363%" y="261" width="0.0100%" height="15" fill="rgb(241,142,54)" fg:x="1025156138366" fg:w="260011019"/><text x="39.7863%" y="271.50"></text></g><g><title>change_protection_range (260,011,019 samples, 0.01%)</title><rect x="39.5363%" y="245" width="0.0100%" height="15" fill="rgb(222,85,15)" fg:x="1025156138366" fg:w="260011019"/><text x="39.7863%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (38,079,845,305 samples, 1.47%)</title><rect x="38.0777%" y="373" width="1.4686%" height="15" fill="rgb(210,85,47)" fg:x="987336593112" fg:w="38079845305"/><text x="38.3277%" y="383.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (465,667,599 samples, 0.02%)</title><rect x="39.5284%" y="357" width="0.0180%" height="15" fill="rgb(224,206,25)" fg:x="1024950770818" fg:w="465667599"/><text x="39.7784%" y="367.50"></text></g><g><title>prepare_exit_to_usermode (425,656,747 samples, 0.02%)</title><rect x="39.5299%" y="341" width="0.0164%" height="15" fill="rgb(243,201,19)" fg:x="1024990781670" fg:w="425656747"/><text x="39.7799%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3,615,644,129 samples, 0.14%)</title><rect x="39.5463%" y="373" width="0.1394%" height="15" fill="rgb(236,59,4)" fg:x="1025416438417" fg:w="3615644129"/><text x="39.7963%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3,615,644,129 samples, 0.14%)</title><rect x="39.5463%" y="357" width="0.1394%" height="15" fill="rgb(254,179,45)" fg:x="1025416438417" fg:w="3615644129"/><text x="39.7963%" y="367.50"></text></g><g><title>core::mem::replace (3,615,644,129 samples, 0.14%)</title><rect x="39.5463%" y="341" width="0.1394%" height="15" fill="rgb(226,14,10)" fg:x="1025416438417" fg:w="3615644129"/><text x="39.7963%" y="351.50"></text></g><g><title>core::ptr::write (3,615,644,129 samples, 0.14%)</title><rect x="39.5463%" y="325" width="0.1394%" height="15" fill="rgb(244,27,41)" fg:x="1025416438417" fg:w="3615644129"/><text x="39.7963%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1,291,871,254 samples, 0.05%)</title><rect x="39.6858%" y="373" width="0.0498%" height="15" fill="rgb(235,35,32)" fg:x="1029032082546" fg:w="1291871254"/><text x="39.9358%" y="383.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (246,413,534,741 samples, 9.50%)</title><rect x="39.7356%" y="373" width="9.5032%" height="15" fill="rgb(218,68,31)" fg:x="1030323953800" fg:w="246413534741"/><text x="39.9856%" y="383.50">crossbeam_epoc..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (246,413,534,741 samples, 9.50%)</title><rect x="39.7356%" y="357" width="9.5032%" height="15" fill="rgb(207,120,37)" fg:x="1030323953800" fg:w="246413534741"/><text x="39.9856%" y="367.50">core::sync::at..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (246,413,534,741 samples, 9.50%)</title><rect x="39.7356%" y="341" width="9.5032%" height="15" fill="rgb(227,98,0)" fg:x="1030323953800" fg:w="246413534741"/><text x="39.9856%" y="351.50">core::sync::at..</text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (92,397,543,472 samples, 3.56%)</title><rect x="49.2388%" y="373" width="3.5634%" height="15" fill="rgb(207,7,3)" fg:x="1276737488541" fg:w="92397543472"/><text x="49.4888%" y="383.50">cros..</text></g><g><title>core::sync::atomic::AtomicUsize::load (92,397,543,472 samples, 3.56%)</title><rect x="49.2388%" y="357" width="3.5634%" height="15" fill="rgb(206,98,19)" fg:x="1276737488541" fg:w="92397543472"/><text x="49.4888%" y="367.50">core..</text></g><g><title>core::sync::atomic::atomic_load (92,397,543,472 samples, 3.56%)</title><rect x="49.2388%" y="341" width="3.5634%" height="15" fill="rgb(217,5,26)" fg:x="1276737488541" fg:w="92397543472"/><text x="49.4888%" y="351.50">core..</text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (6,141,049,940 samples, 0.24%)</title><rect x="52.8022%" y="373" width="0.2368%" height="15" fill="rgb(235,190,38)" fg:x="1369135032013" fg:w="6141049940"/><text x="53.0522%" y="383.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (1,132,439,845 samples, 0.04%)</title><rect x="53.0390%" y="373" width="0.0437%" height="15" fill="rgb(247,86,24)" fg:x="1375276081953" fg:w="1132439845"/><text x="53.2890%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,132,439,845 samples, 0.04%)</title><rect x="53.0390%" y="357" width="0.0437%" height="15" fill="rgb(205,101,16)" fg:x="1375276081953" fg:w="1132439845"/><text x="53.2890%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,132,439,845 samples, 0.04%)</title><rect x="53.0390%" y="341" width="0.0437%" height="15" fill="rgb(246,168,33)" fg:x="1375276081953" fg:w="1132439845"/><text x="53.2890%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,132,439,845 samples, 0.04%)</title><rect x="53.0390%" y="325" width="0.0437%" height="15" fill="rgb(231,114,1)" fg:x="1375276081953" fg:w="1132439845"/><text x="53.2890%" y="335.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (406,014,115,958 samples, 15.66%)</title><rect x="37.4252%" y="437" width="15.6584%" height="15" fill="rgb(207,184,53)" fg:x="970416459069" fg:w="406014115958"/><text x="37.6752%" y="447.50">crossbeam_epoch::default..</text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (406,014,115,958 samples, 15.66%)</title><rect x="37.4252%" y="421" width="15.6584%" height="15" fill="rgb(224,95,51)" fg:x="970416459069" fg:w="406014115958"/><text x="37.6752%" y="431.50">crossbeam_epoch::default..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (406,014,115,958 samples, 15.66%)</title><rect x="37.4252%" y="405" width="15.6584%" height="15" fill="rgb(212,188,45)" fg:x="970416459069" fg:w="406014115958"/><text x="37.6752%" y="415.50">crossbeam_epoch::collect..</text></g><g><title>crossbeam_epoch::internal::Local::pin (406,014,115,958 samples, 15.66%)</title><rect x="37.4252%" y="389" width="15.6584%" height="15" fill="rgb(223,154,38)" fg:x="970416459069" fg:w="406014115958"/><text x="37.6752%" y="399.50">crossbeam_epoch::interna..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (424,296,460,064 samples, 16.36%)</title><rect x="36.7229%" y="453" width="16.3635%" height="15" fill="rgb(251,22,52)" fg:x="952206425012" fg:w="424296460064"/><text x="36.9729%" y="463.50">std::thread::local::Local..</text></g><g><title>crossbeam_epoch::default::with_handle (459,125,997,464 samples, 17.71%)</title><rect x="35.3807%" y="469" width="17.7067%" height="15" fill="rgb(229,209,22)" fg:x="917404172050" fg:w="459125997464"/><text x="35.6307%" y="479.50">crossbeam_epoch::default::wi..</text></g><g><title>crossbeam_epoch::internal::Global::collect (1,761,673,712 samples, 0.07%)</title><rect x="53.0874%" y="469" width="0.0679%" height="15" fill="rgb(234,138,34)" fg:x="1376530169514" fg:w="1761673712"/><text x="53.3374%" y="479.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (84,110,860,296 samples, 3.24%)</title><rect x="53.7303%" y="437" width="3.2438%" height="15" fill="rgb(212,95,11)" fg:x="1393201088904" fg:w="84110860296"/><text x="53.9803%" y="447.50">cro..</text></g><g><title>core::sync::atomic::AtomicUsize::load (84,110,860,296 samples, 3.24%)</title><rect x="53.7303%" y="421" width="3.2438%" height="15" fill="rgb(240,179,47)" fg:x="1393201088904" fg:w="84110860296"/><text x="53.9803%" y="431.50">cor..</text></g><g><title>core::sync::atomic::atomic_load (84,110,860,296 samples, 3.24%)</title><rect x="53.7303%" y="405" width="3.2438%" height="15" fill="rgb(240,163,11)" fg:x="1393201088904" fg:w="84110860296"/><text x="53.9803%" y="415.50">cor..</text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (5,377,045,238 samples, 0.21%)</title><rect x="56.9742%" y="437" width="0.2074%" height="15" fill="rgb(236,37,12)" fg:x="1477311949200" fg:w="5377045238"/><text x="57.2242%" y="447.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (5,377,045,238 samples, 0.21%)</title><rect x="56.9742%" y="421" width="0.2074%" height="15" fill="rgb(232,164,16)" fg:x="1477311949200" fg:w="5377045238"/><text x="57.2242%" y="431.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (94,835,227,024 samples, 3.66%)</title><rect x="53.5250%" y="453" width="3.6574%" height="15" fill="rgb(244,205,15)" fg:x="1387876315220" fg:w="94835227024"/><text x="53.7750%" y="463.50">&lt;cro..</text></g><g><title>core::sync::atomic::fence (2,088,890,956 samples, 0.08%)</title><rect x="57.1841%" y="453" width="0.0806%" height="15" fill="rgb(223,117,47)" fg:x="1482756618861" fg:w="2088890956"/><text x="57.4341%" y="463.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (151,989,871,150 samples, 5.86%)</title><rect x="57.2647%" y="453" width="5.8617%" height="15" fill="rgb(244,107,35)" fg:x="1484845509817" fg:w="151989871150"/><text x="57.5147%" y="463.50">crossbe..</text></g><g><title>core::sync::atomic::AtomicUsize::load (151,989,871,150 samples, 5.86%)</title><rect x="57.2647%" y="437" width="5.8617%" height="15" fill="rgb(205,140,8)" fg:x="1484845509817" fg:w="151989871150"/><text x="57.5147%" y="447.50">core::s..</text></g><g><title>core::sync::atomic::atomic_load (151,989,871,150 samples, 5.86%)</title><rect x="57.2647%" y="421" width="5.8617%" height="15" fill="rgb(228,84,46)" fg:x="1484845509817" fg:w="151989871150"/><text x="57.5147%" y="431.50">core::s..</text></g><g><title>crossbeam_epoch::sync::list::List&lt;T,C&gt;::iter (705,511,419 samples, 0.03%)</title><rect x="63.1360%" y="453" width="0.0272%" height="15" fill="rgb(254,188,9)" fg:x="1637084658521" fg:w="705511419"/><text x="63.3860%" y="463.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (705,511,419 samples, 0.03%)</title><rect x="63.1360%" y="437" width="0.0272%" height="15" fill="rgb(206,112,54)" fg:x="1637084658521" fg:w="705511419"/><text x="63.3860%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (705,511,419 samples, 0.03%)</title><rect x="63.1360%" y="421" width="0.0272%" height="15" fill="rgb(216,84,49)" fg:x="1637084658521" fg:w="705511419"/><text x="63.3860%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (705,511,419 samples, 0.03%)</title><rect x="63.1360%" y="405" width="0.0272%" height="15" fill="rgb(214,194,35)" fg:x="1637084658521" fg:w="705511419"/><text x="63.3860%" y="415.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (259,561,302,492 samples, 10.01%)</title><rect x="53.1553%" y="469" width="10.0103%" height="15" fill="rgb(249,28,3)" fg:x="1378291843226" fg:w="259561302492"/><text x="53.4053%" y="479.50">crossbeam_epoc..</text></g><g><title>__memmove_avx_unaligned_erms (27,560,836,857 samples, 1.06%)</title><rect x="63.2218%" y="453" width="1.0629%" height="15" fill="rgb(222,56,52)" fg:x="1639309989740" fg:w="27560836857"/><text x="63.4718%" y="463.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (1,832,899,555 samples, 0.07%)</title><rect x="64.2928%" y="437" width="0.0707%" height="15" fill="rgb(245,217,50)" fg:x="1667079993312" fg:w="1832899555"/><text x="64.5428%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,832,899,555 samples, 0.07%)</title><rect x="64.2928%" y="421" width="0.0707%" height="15" fill="rgb(213,201,24)" fg:x="1667079993312" fg:w="1832899555"/><text x="64.5428%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (1,832,899,555 samples, 0.07%)</title><rect x="64.2928%" y="405" width="0.0707%" height="15" fill="rgb(248,116,28)" fg:x="1667079993312" fg:w="1832899555"/><text x="64.5428%" y="415.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::pop_if_internal (2,189,464,662 samples, 0.08%)</title><rect x="64.2849%" y="453" width="0.0844%" height="15" fill="rgb(219,72,43)" fg:x="1666876058333" fg:w="2189464662"/><text x="64.5349%" y="463.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (31,219,270,186 samples, 1.20%)</title><rect x="63.1656%" y="469" width="1.2040%" height="15" fill="rgb(209,138,14)" fg:x="1637853145718" fg:w="31219270186"/><text x="63.4156%" y="479.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (605,088,641 samples, 0.02%)</title><rect x="64.3730%" y="453" width="0.0233%" height="15" fill="rgb(222,18,33)" fg:x="1669160139463" fg:w="605088641"/><text x="64.6230%" y="463.50"></text></g><g><title>core::slice::ascii::is_ascii (605,088,641 samples, 0.02%)</title><rect x="64.3730%" y="437" width="0.0233%" height="15" fill="rgb(213,199,7)" fg:x="1669160139463" fg:w="605088641"/><text x="64.6230%" y="447.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (733,857,335 samples, 0.03%)</title><rect x="64.3696%" y="469" width="0.0283%" height="15" fill="rgb(250,110,10)" fg:x="1669072415904" fg:w="733857335"/><text x="64.6196%" y="479.50"></text></g><g><title>csv::deserializer::deserialize_string_record (436,203,061 samples, 0.02%)</title><rect x="64.3979%" y="469" width="0.0168%" height="15" fill="rgb(248,123,6)" fg:x="1669806273239" fg:w="436203061"/><text x="64.6479%" y="479.50"></text></g><g><title>csv_core::reader::Dfa::get_output (1,751,100,100 samples, 0.07%)</title><rect x="64.5360%" y="437" width="0.0675%" height="15" fill="rgb(206,91,31)" fg:x="1673387421692" fg:w="1751100100"/><text x="64.7860%" y="447.50"></text></g><g><title>csv_core::reader::DfaClasses::scan_and_copy (9,264,246,482 samples, 0.36%)</title><rect x="64.6050%" y="437" width="0.3573%" height="15" fill="rgb(211,154,13)" fg:x="1675176967419" fg:w="9264246482"/><text x="64.8550%" y="447.50"></text></g><g><title>csv_core::reader::Reader::read_record_dfa (14,080,862,550 samples, 0.54%)</title><rect x="64.4202%" y="453" width="0.5430%" height="15" fill="rgb(225,148,7)" fg:x="1670383358150" fg:w="14080862550"/><text x="64.6702%" y="463.50"></text></g><g><title>csv_core::reader::Reader::read_record (14,230,199,187 samples, 0.55%)</title><rect x="64.4147%" y="469" width="0.5488%" height="15" fill="rgb(220,160,43)" fg:x="1670242476300" fg:w="14230199187"/><text x="64.6647%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (18,013,399,004 samples, 0.69%)</title><rect x="64.9635%" y="469" width="0.6947%" height="15" fill="rgb(213,52,39)" fg:x="1684472675487" fg:w="18013399004"/><text x="65.2135%" y="479.50"></text></g><g><title>change_pte_range (406,317,736 samples, 0.02%)</title><rect x="65.8234%" y="341" width="0.0157%" height="15" fill="rgb(243,137,7)" fg:x="1706768382994" fg:w="406317736"/><text x="66.0734%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,723,890,497 samples, 0.18%)</title><rect x="65.6582%" y="469" width="0.1822%" height="15" fill="rgb(230,79,13)" fg:x="1702486074491" fg:w="4723890497"/><text x="65.9082%" y="479.50"></text></g><g><title>do_syscall_64 (459,210,245 samples, 0.02%)</title><rect x="65.8227%" y="453" width="0.0177%" height="15" fill="rgb(247,105,23)" fg:x="1706750754743" fg:w="459210245"/><text x="66.0727%" y="463.50"></text></g><g><title>exit_to_usermode_loop (458,964,911 samples, 0.02%)</title><rect x="65.8227%" y="437" width="0.0177%" height="15" fill="rgb(223,179,41)" fg:x="1706751000077" fg:w="458964911"/><text x="66.0727%" y="447.50"></text></g><g><title>task_work_run (453,171,051 samples, 0.02%)</title><rect x="65.8230%" y="421" width="0.0175%" height="15" fill="rgb(218,9,34)" fg:x="1706756793937" fg:w="453171051"/><text x="66.0730%" y="431.50"></text></g><g><title>task_numa_work (453,171,051 samples, 0.02%)</title><rect x="65.8230%" y="405" width="0.0175%" height="15" fill="rgb(222,106,8)" fg:x="1706756793937" fg:w="453171051"/><text x="66.0730%" y="415.50"></text></g><g><title>change_prot_numa (453,171,051 samples, 0.02%)</title><rect x="65.8230%" y="389" width="0.0175%" height="15" fill="rgb(211,220,0)" fg:x="1706756793937" fg:w="453171051"/><text x="66.0730%" y="399.50"></text></g><g><title>change_protection (453,171,051 samples, 0.02%)</title><rect x="65.8230%" y="373" width="0.0175%" height="15" fill="rgb(229,52,16)" fg:x="1706756793937" fg:w="453171051"/><text x="66.0730%" y="383.50"></text></g><g><title>change_protection_range (453,171,051 samples, 0.02%)</title><rect x="65.8230%" y="357" width="0.0175%" height="15" fill="rgb(212,155,18)" fg:x="1706756793937" fg:w="453171051"/><text x="66.0730%" y="367.50"></text></g><g><title>page_fault (1,403,064,574 samples, 0.05%)</title><rect x="65.8481%" y="469" width="0.0541%" height="15" fill="rgb(242,21,14)" fg:x="1707409806774" fg:w="1403064574"/><text x="66.0981%" y="479.50"></text></g><g><title>&lt;alloc::collections::linked_list::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (688,714,706 samples, 0.03%)</title><rect x="65.9030%" y="453" width="0.0266%" height="15" fill="rgb(222,19,48)" fg:x="1708831834183" fg:w="688714706"/><text x="66.1530%" y="463.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::pop_front (688,714,706 samples, 0.03%)</title><rect x="65.9030%" y="437" width="0.0266%" height="15" fill="rgb(232,45,27)" fg:x="1708831834183" fg:w="688714706"/><text x="66.1530%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (628,119,106 samples, 0.02%)</title><rect x="65.9053%" y="421" width="0.0242%" height="15" fill="rgb(249,103,42)" fg:x="1708892429783" fg:w="628119106"/><text x="66.1553%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (628,119,106 samples, 0.02%)</title><rect x="65.9053%" y="405" width="0.0242%" height="15" fill="rgb(246,81,33)" fg:x="1708892429783" fg:w="628119106"/><text x="66.1553%" y="415.50"></text></g><g><title>alloc::collections::linked_list::Node&lt;T&gt;::into_element (628,119,106 samples, 0.02%)</title><rect x="65.9053%" y="389" width="0.0242%" height="15" fill="rgb(252,33,42)" fg:x="1708892429783" fg:w="628119106"/><text x="66.1553%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (571,441,024 samples, 0.02%)</title><rect x="65.9075%" y="373" width="0.0220%" height="15" fill="rgb(209,212,41)" fg:x="1708949107865" fg:w="571441024"/><text x="66.1575%" y="383.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (571,441,024 samples, 0.02%)</title><rect x="65.9075%" y="357" width="0.0220%" height="15" fill="rgb(207,154,6)" fg:x="1708949107865" fg:w="571441024"/><text x="66.1575%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (571,441,024 samples, 0.02%)</title><rect x="65.9075%" y="341" width="0.0220%" height="15" fill="rgb(223,64,47)" fg:x="1708949107865" fg:w="571441024"/><text x="66.1575%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (571,441,024 samples, 0.02%)</title><rect x="65.9075%" y="325" width="0.0220%" height="15" fill="rgb(211,161,38)" fg:x="1708949107865" fg:w="571441024"/><text x="66.1575%" y="335.50"></text></g><g><title>_int_free (398,264,843 samples, 0.02%)</title><rect x="65.9142%" y="309" width="0.0154%" height="15" fill="rgb(219,138,40)" fg:x="1709122284046" fg:w="398264843"/><text x="66.1642%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (640,869,149 samples, 0.02%)</title><rect x="65.9393%" y="453" width="0.0247%" height="15" fill="rgb(241,228,46)" fg:x="1709774836287" fg:w="640869149"/><text x="66.1893%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (640,869,149 samples, 0.02%)</title><rect x="65.9393%" y="437" width="0.0247%" height="15" fill="rgb(223,209,38)" fg:x="1709774836287" fg:w="640869149"/><text x="66.1893%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (640,869,149 samples, 0.02%)</title><rect x="65.9393%" y="421" width="0.0247%" height="15" fill="rgb(236,164,45)" fg:x="1709774836287" fg:w="640869149"/><text x="66.1893%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (640,869,149 samples, 0.02%)</title><rect x="65.9393%" y="405" width="0.0247%" height="15" fill="rgb(231,15,5)" fg:x="1709774836287" fg:w="640869149"/><text x="66.1893%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (613,858,199 samples, 0.02%)</title><rect x="65.9404%" y="389" width="0.0237%" height="15" fill="rgb(252,35,15)" fg:x="1709801847237" fg:w="613858199"/><text x="66.1904%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (613,858,199 samples, 0.02%)</title><rect x="65.9404%" y="373" width="0.0237%" height="15" fill="rgb(248,181,18)" fg:x="1709801847237" fg:w="613858199"/><text x="66.1904%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (464,336,844 samples, 0.02%)</title><rect x="65.9641%" y="405" width="0.0179%" height="15" fill="rgb(233,39,42)" fg:x="1710415705436" fg:w="464336844"/><text x="66.2141%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (464,336,844 samples, 0.02%)</title><rect x="65.9641%" y="389" width="0.0179%" height="15" fill="rgb(238,110,33)" fg:x="1710415705436" fg:w="464336844"/><text x="66.2141%" y="399.50"></text></g><g><title>_int_free (349,409,108 samples, 0.01%)</title><rect x="65.9685%" y="373" width="0.0135%" height="15" fill="rgb(233,195,10)" fg:x="1710530633172" fg:w="349409108"/><text x="66.2185%" y="383.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (2,080,890,387 samples, 0.08%)</title><rect x="65.9022%" y="469" width="0.0803%" height="15" fill="rgb(254,105,3)" fg:x="1708812871348" fg:w="2080890387"/><text x="66.1522%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt; (478,056,299 samples, 0.02%)</title><rect x="65.9641%" y="453" width="0.0184%" height="15" fill="rgb(221,225,9)" fg:x="1710415705436" fg:w="478056299"/><text x="66.2141%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;QUEUE_TEST::KeyVal&gt;&gt; (478,056,299 samples, 0.02%)</title><rect x="65.9641%" y="437" width="0.0184%" height="15" fill="rgb(224,227,45)" fg:x="1710415705436" fg:w="478056299"/><text x="66.2141%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (478,056,299 samples, 0.02%)</title><rect x="65.9641%" y="421" width="0.0184%" height="15" fill="rgb(229,198,43)" fg:x="1710415705436" fg:w="478056299"/><text x="66.2141%" y="431.50"></text></g><g><title>&lt;rayon::vec::SliceDrain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (744,043,260 samples, 0.03%)</title><rect x="66.0236%" y="437" width="0.0287%" height="15" fill="rgb(206,209,35)" fg:x="1711960269693" fg:w="744043260"/><text x="66.2736%" y="447.50"></text></g><g><title>core::ptr::read (702,672,050 samples, 0.03%)</title><rect x="66.0252%" y="421" width="0.0271%" height="15" fill="rgb(245,195,53)" fg:x="1712001640903" fg:w="702672050"/><text x="66.2752%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (756,961,225 samples, 0.03%)</title><rect x="66.0236%" y="453" width="0.0292%" height="15" fill="rgb(240,92,26)" fg:x="1711960269693" fg:w="756961225"/><text x="66.2736%" y="463.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1,904,157,886 samples, 0.07%)</title><rect x="65.9825%" y="469" width="0.0734%" height="15" fill="rgb(207,40,23)" fg:x="1710893761735" fg:w="1904157886"/><text x="66.2325%" y="479.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T&gt;::append (265,899,144 samples, 0.01%)</title><rect x="66.0876%" y="437" width="0.0103%" height="15" fill="rgb(223,111,35)" fg:x="1713619161159" fg:w="265899144"/><text x="66.3376%" y="447.50"></text></g><g><title>&lt;rayon::iter::extend::ListReducer as rayon::iter::plumbing::Reducer&lt;alloc::collections::linked_list::LinkedList&lt;T&gt;&gt;&gt;::reduce (294,866,626 samples, 0.01%)</title><rect x="66.0866%" y="453" width="0.0114%" height="15" fill="rgb(229,147,28)" fg:x="1713592220671" fg:w="294866626"/><text x="66.3366%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (337,858,884 samples, 0.01%)</title><rect x="66.1190%" y="357" width="0.0130%" height="15" fill="rgb(211,29,28)" fg:x="1714433514763" fg:w="337858884"/><text x="66.3690%" y="367.50"></text></g><g><title>_raw_spin_lock (690,403,228 samples, 0.03%)</title><rect x="66.2139%" y="293" width="0.0266%" height="15" fill="rgb(228,72,33)" fg:x="1716894207469" fg:w="690403228"/><text x="66.4639%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (76,849,748,578 samples, 2.96%)</title><rect x="66.3073%" y="261" width="2.9638%" height="15" fill="rgb(205,214,31)" fg:x="1719316344730" fg:w="76849748578"/><text x="66.5573%" y="271.50">nat..</text></g><g><title>_raw_spin_lock (76,875,828,897 samples, 2.96%)</title><rect x="66.3068%" y="277" width="2.9648%" height="15" fill="rgb(224,111,15)" fg:x="1719302233150" fg:w="76875828897"/><text x="66.5568%" y="287.50">_ra..</text></g><g><title>__unqueue_futex (298,547,105 samples, 0.01%)</title><rect x="69.2876%" y="261" width="0.0115%" height="15" fill="rgb(253,21,26)" fg:x="1796594118720" fg:w="298547105"/><text x="69.5376%" y="271.50"></text></g><g><title>mark_wake_futex (514,334,860 samples, 0.02%)</title><rect x="69.2795%" y="277" width="0.0198%" height="15" fill="rgb(245,139,43)" fg:x="1796382586566" fg:w="514334860"/><text x="69.5295%" y="287.50"></text></g><g><title>select_idle_sibling (547,530,427 samples, 0.02%)</title><rect x="69.4285%" y="229" width="0.0211%" height="15" fill="rgb(252,170,7)" fg:x="1800247172903" fg:w="547530427"/><text x="69.6785%" y="239.50"></text></g><g><title>select_idle_sibling.part.0 (411,952,602 samples, 0.02%)</title><rect x="69.4337%" y="213" width="0.0159%" height="15" fill="rgb(231,118,14)" fg:x="1800382750728" fg:w="411952602"/><text x="69.6837%" y="223.50"></text></g><g><title>select_task_rq_fair (1,044,649,912 samples, 0.04%)</title><rect x="69.4096%" y="245" width="0.0403%" height="15" fill="rgb(238,83,0)" fg:x="1799757173069" fg:w="1044649912"/><text x="69.6596%" y="255.50"></text></g><g><title>enqueue_entity (403,461,277 samples, 0.02%)</title><rect x="69.4578%" y="197" width="0.0156%" height="15" fill="rgb(221,39,39)" fg:x="1801007131350" fg:w="403461277"/><text x="69.7078%" y="207.50"></text></g><g><title>enqueue_task_fair (716,629,521 samples, 0.03%)</title><rect x="69.4527%" y="213" width="0.0276%" height="15" fill="rgb(222,119,46)" fg:x="1800874978302" fg:w="716629521"/><text x="69.7027%" y="223.50"></text></g><g><title>psi_task_change (603,977,114 samples, 0.02%)</title><rect x="69.4804%" y="213" width="0.0233%" height="15" fill="rgb(222,165,49)" fg:x="1801591607823" fg:w="603977114"/><text x="69.7304%" y="223.50"></text></g><g><title>activate_task (1,344,028,161 samples, 0.05%)</title><rect x="69.4519%" y="229" width="0.0518%" height="15" fill="rgb(219,113,52)" fg:x="1800854167015" fg:w="1344028161"/><text x="69.7019%" y="239.50"></text></g><g><title>ttwu_do_activate (1,484,056,940 samples, 0.06%)</title><rect x="69.4517%" y="245" width="0.0572%" height="15" fill="rgb(214,7,15)" fg:x="1800847534135" fg:w="1484056940"/><text x="69.7017%" y="255.50"></text></g><g><title>try_to_wake_up (5,413,742,028 samples, 0.21%)</title><rect x="69.3110%" y="261" width="0.2088%" height="15" fill="rgb(235,32,4)" fg:x="1797199217574" fg:w="5413742028"/><text x="69.5610%" y="271.50"></text></g><g><title>futex_wake (85,019,958,631 samples, 3.28%)</title><rect x="66.2411%" y="293" width="3.2789%" height="15" fill="rgb(238,90,54)" fg:x="1717598254070" fg:w="85019958631"/><text x="66.4911%" y="303.50">fut..</text></g><g><title>wake_up_q (5,630,498,143 samples, 0.22%)</title><rect x="69.3028%" y="277" width="0.2171%" height="15" fill="rgb(213,208,19)" fg:x="1796987714558" fg:w="5630498143"/><text x="69.5528%" y="287.50"></text></g><g><title>do_futex (85,971,383,328 samples, 3.32%)</title><rect x="66.2093%" y="309" width="3.3156%" height="15" fill="rgb(233,156,4)" fg:x="1716774054806" fg:w="85971383328"/><text x="66.4593%" y="319.50">do_..</text></g><g><title>__x64_sys_futex (86,061,085,736 samples, 3.32%)</title><rect x="66.2064%" y="325" width="3.3190%" height="15" fill="rgb(207,194,5)" fg:x="1716698101500" fg:w="86061085736"/><text x="66.4564%" y="335.50">__x..</text></g><g><title>do_syscall_64 (87,934,469,320 samples, 3.39%)</title><rect x="66.1395%" y="341" width="3.3913%" height="15" fill="rgb(206,111,30)" fg:x="1714963503430" fg:w="87934469320"/><text x="66.3895%" y="351.50">do_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (88,131,591,281 samples, 3.40%)</title><rect x="66.1320%" y="357" width="3.3989%" height="15" fill="rgb(243,70,54)" fg:x="1714771373647" fg:w="88131591281"/><text x="66.3820%" y="367.50">ent..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (89,296,749,589 samples, 3.44%)</title><rect x="66.1069%" y="437" width="3.4438%" height="15" fill="rgb(242,28,8)" fg:x="1714118462352" fg:w="89296749589"/><text x="66.3569%" y="447.50">&lt;ra..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (89,296,749,589 samples, 3.44%)</title><rect x="66.1069%" y="421" width="3.4438%" height="15" fill="rgb(219,106,18)" fg:x="1714118462352" fg:w="89296749589"/><text x="66.3569%" y="431.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (89,296,749,589 samples, 3.44%)</title><rect x="66.1069%" y="405" width="3.4438%" height="15" fill="rgb(244,222,10)" fg:x="1714118462352" fg:w="89296749589"/><text x="66.3569%" y="415.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (89,112,179,759 samples, 3.44%)</title><rect x="66.1140%" y="389" width="3.4367%" height="15" fill="rgb(236,179,52)" fg:x="1714303032182" fg:w="89112179759"/><text x="66.3640%" y="399.50">cor..</text></g><g><title>syscall (89,089,992,160 samples, 3.44%)</title><rect x="66.1148%" y="373" width="3.4359%" height="15" fill="rgb(213,23,39)" fg:x="1714325219781" fg:w="89089992160"/><text x="66.3648%" y="383.50">sys..</text></g><g><title>syscall_return_via_sysret (415,969,549 samples, 0.02%)</title><rect x="69.5346%" y="357" width="0.0160%" height="15" fill="rgb(238,48,10)" fg:x="1802999242392" fg:w="415969549"/><text x="69.7846%" y="367.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (301,148,975 samples, 0.01%)</title><rect x="69.5507%" y="437" width="0.0116%" height="15" fill="rgb(251,196,23)" fg:x="1803415211941" fg:w="301148975"/><text x="69.8007%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (89,635,528,332 samples, 3.46%)</title><rect x="66.1056%" y="453" width="3.4569%" height="15" fill="rgb(250,152,24)" fg:x="1714085481984" fg:w="89635528332"/><text x="66.3556%" y="463.50">ray..</text></g><g><title>rayon_core::join::join_context (737,507,573 samples, 0.03%)</title><rect x="69.5625%" y="453" width="0.0284%" height="15" fill="rgb(209,150,17)" fg:x="1803721010316" fg:w="737507573"/><text x="69.8125%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (91,665,776,852 samples, 3.54%)</title><rect x="66.0559%" y="469" width="3.5352%" height="15" fill="rgb(234,202,34)" fg:x="1712797919621" fg:w="91665776852"/><text x="66.3059%" y="479.50">ray..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (323,862,324 samples, 0.01%)</title><rect x="69.5983%" y="469" width="0.0125%" height="15" fill="rgb(253,148,53)" fg:x="1804650507950" fg:w="323862324"/><text x="69.8483%" y="479.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (2,617,356,519 samples, 0.10%)</title><rect x="69.6878%" y="389" width="0.1009%" height="15" fill="rgb(218,129,16)" fg:x="1806971058809" fg:w="2617356519"/><text x="69.9378%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,617,356,519 samples, 0.10%)</title><rect x="69.6878%" y="373" width="0.1009%" height="15" fill="rgb(216,85,19)" fg:x="1806971058809" fg:w="2617356519"/><text x="69.9378%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (2,617,356,519 samples, 0.10%)</title><rect x="69.6878%" y="357" width="0.1009%" height="15" fill="rgb(235,228,7)" fg:x="1806971058809" fg:w="2617356519"/><text x="69.9378%" y="367.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (2,922,660,052 samples, 0.11%)</title><rect x="69.6858%" y="405" width="0.1127%" height="15" fill="rgb(245,175,0)" fg:x="1806919327298" fg:w="2922660052"/><text x="69.9358%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (3,419,631,082 samples, 0.13%)</title><rect x="69.6668%" y="453" width="0.1319%" height="15" fill="rgb(208,168,36)" fg:x="1806424697083" fg:w="3419631082"/><text x="69.9168%" y="463.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (2,988,250,709 samples, 0.12%)</title><rect x="69.6834%" y="437" width="0.1152%" height="15" fill="rgb(246,171,24)" fg:x="1806856077456" fg:w="2988250709"/><text x="69.9334%" y="447.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (2,988,250,709 samples, 0.12%)</title><rect x="69.6834%" y="421" width="0.1152%" height="15" fill="rgb(215,142,24)" fg:x="1806856077456" fg:w="2988250709"/><text x="69.9334%" y="431.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (327,912,444 samples, 0.01%)</title><rect x="69.8028%" y="453" width="0.0126%" height="15" fill="rgb(250,187,7)" fg:x="1809951110232" fg:w="327912444"/><text x="70.0528%" y="463.50"></text></g><g><title>std::panic::catch_unwind (327,912,444 samples, 0.01%)</title><rect x="69.8028%" y="437" width="0.0126%" height="15" fill="rgb(228,66,33)" fg:x="1809951110232" fg:w="327912444"/><text x="70.0528%" y="447.50"></text></g><g><title>std::panicking::try (327,912,444 samples, 0.01%)</title><rect x="69.8028%" y="421" width="0.0126%" height="15" fill="rgb(234,215,21)" fg:x="1809951110232" fg:w="327912444"/><text x="70.0528%" y="431.50"></text></g><g><title>std::panicking::try::do_call (327,912,444 samples, 0.01%)</title><rect x="69.8028%" y="405" width="0.0126%" height="15" fill="rgb(222,191,20)" fg:x="1809951110232" fg:w="327912444"/><text x="70.0528%" y="415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,306,690,429 samples, 0.20%)</title><rect x="69.6108%" y="469" width="0.2047%" height="15" fill="rgb(245,79,54)" fg:x="1804974370274" fg:w="5306690429"/><text x="69.8608%" y="479.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (1,631,695,906 samples, 0.06%)</title><rect x="69.9705%" y="421" width="0.0629%" height="15" fill="rgb(240,10,37)" fg:x="1814299879155" fg:w="1631695906"/><text x="70.2205%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (409,357,944 samples, 0.02%)</title><rect x="70.0847%" y="405" width="0.0158%" height="15" fill="rgb(214,192,32)" fg:x="1817262882516" fg:w="409357944"/><text x="70.3347%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (409,357,944 samples, 0.02%)</title><rect x="70.0847%" y="389" width="0.0158%" height="15" fill="rgb(209,36,54)" fg:x="1817262882516" fg:w="409357944"/><text x="70.3347%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (940,643,668 samples, 0.04%)</title><rect x="70.1006%" y="405" width="0.0363%" height="15" fill="rgb(220,10,11)" fg:x="1817674424871" fg:w="940643668"/><text x="70.3506%" y="415.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (940,643,668 samples, 0.04%)</title><rect x="70.1006%" y="389" width="0.0363%" height="15" fill="rgb(221,106,17)" fg:x="1817674424871" fg:w="940643668"/><text x="70.3506%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,223,371,969 samples, 0.05%)</title><rect x="70.1369%" y="405" width="0.0472%" height="15" fill="rgb(251,142,44)" fg:x="1818615068539" fg:w="1223371969"/><text x="70.3869%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,223,371,969 samples, 0.05%)</title><rect x="70.1369%" y="389" width="0.0472%" height="15" fill="rgb(238,13,15)" fg:x="1818615068539" fg:w="1223371969"/><text x="70.3869%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold (747,383,777 samples, 0.03%)</title><rect x="70.1552%" y="373" width="0.0288%" height="15" fill="rgb(208,107,27)" fg:x="1819091056731" fg:w="747383777"/><text x="70.4052%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (443,654,587 samples, 0.02%)</title><rect x="70.1841%" y="405" width="0.0171%" height="15" fill="rgb(205,136,37)" fg:x="1819838440508" fg:w="443654587"/><text x="70.4341%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (615,488,020 samples, 0.02%)</title><rect x="70.3385%" y="373" width="0.0237%" height="15" fill="rgb(250,205,27)" fg:x="1823843208733" fg:w="615488020"/><text x="70.5885%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (615,488,020 samples, 0.02%)</title><rect x="70.3385%" y="357" width="0.0237%" height="15" fill="rgb(210,80,43)" fg:x="1823843208733" fg:w="615488020"/><text x="70.5885%" y="367.50"></text></g><g><title>core::mem::replace (615,488,020 samples, 0.02%)</title><rect x="70.3385%" y="341" width="0.0237%" height="15" fill="rgb(247,160,36)" fg:x="1823843208733" fg:w="615488020"/><text x="70.5885%" y="351.50"></text></g><g><title>core::ptr::write (615,488,020 samples, 0.02%)</title><rect x="70.3385%" y="325" width="0.0237%" height="15" fill="rgb(234,13,49)" fg:x="1823843208733" fg:w="615488020"/><text x="70.5885%" y="335.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (4,286,269,576 samples, 0.17%)</title><rect x="70.2013%" y="405" width="0.1653%" height="15" fill="rgb(234,122,0)" fg:x="1820284060645" fg:w="4286269576"/><text x="70.4513%" y="415.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next (2,249,330,680 samples, 0.09%)</title><rect x="70.2798%" y="389" width="0.0867%" height="15" fill="rgb(207,146,38)" fg:x="1822320999541" fg:w="2249330680"/><text x="70.5298%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (10,646,446,158 samples, 0.41%)</title><rect x="69.9562%" y="453" width="0.4106%" height="15" fill="rgb(207,177,25)" fg:x="1813929858635" fg:w="10646446158"/><text x="70.2062%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (10,413,178,881 samples, 0.40%)</title><rect x="69.9652%" y="437" width="0.4016%" height="15" fill="rgb(211,178,42)" fg:x="1814163125912" fg:w="10413178881"/><text x="70.2152%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (8,644,729,732 samples, 0.33%)</title><rect x="70.0334%" y="421" width="0.3334%" height="15" fill="rgb(230,69,54)" fg:x="1815931575061" fg:w="8644729732"/><text x="70.2834%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (287,909,184 samples, 0.01%)</title><rect x="70.4602%" y="437" width="0.0111%" height="15" fill="rgb(214,135,41)" fg:x="1826998150811" fg:w="287909184"/><text x="70.7102%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (16,827,098,870 samples, 0.65%)</title><rect x="69.8224%" y="469" width="0.6490%" height="15" fill="rgb(237,67,25)" fg:x="1810460689968" fg:w="16827098870"/><text x="70.0724%" y="479.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (2,711,484,045 samples, 0.10%)</title><rect x="70.3668%" y="453" width="0.1046%" height="15" fill="rgb(222,189,50)" fg:x="1824576304793" fg:w="2711484045"/><text x="70.6168%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (329,889,461 samples, 0.01%)</title><rect x="70.5085%" y="453" width="0.0127%" height="15" fill="rgb(245,148,34)" fg:x="1828251214527" fg:w="329889461"/><text x="70.7585%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (329,889,461 samples, 0.01%)</title><rect x="70.5085%" y="437" width="0.0127%" height="15" fill="rgb(222,29,6)" fg:x="1828251214527" fg:w="329889461"/><text x="70.7585%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (329,889,461 samples, 0.01%)</title><rect x="70.5085%" y="421" width="0.0127%" height="15" fill="rgb(221,189,43)" fg:x="1828251214527" fg:w="329889461"/><text x="70.7585%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,249,735,171 samples, 0.13%)</title><rect x="70.5360%" y="437" width="0.1253%" height="15" fill="rgb(207,36,27)" fg:x="1828963610318" fg:w="3249735171"/><text x="70.7860%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (3,249,735,171 samples, 0.13%)</title><rect x="70.5360%" y="421" width="0.1253%" height="15" fill="rgb(217,90,24)" fg:x="1828963610318" fg:w="3249735171"/><text x="70.7860%" y="431.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (3,512,669,689 samples, 0.14%)</title><rect x="70.5260%" y="453" width="0.1355%" height="15" fill="rgb(224,66,35)" fg:x="1828705310284" fg:w="3512669689"/><text x="70.7760%" y="463.50"></text></g><g><title>__switch_to (7,561,159,424 samples, 0.29%)</title><rect x="71.0911%" y="421" width="0.2916%" height="15" fill="rgb(221,13,50)" fg:x="1843356943780" fg:w="7561159424"/><text x="71.3411%" y="431.50"></text></g><g><title>__switch_to_asm (6,704,745,837 samples, 0.26%)</title><rect x="71.3827%" y="421" width="0.2586%" height="15" fill="rgb(236,68,49)" fg:x="1850918103204" fg:w="6704745837"/><text x="71.6327%" y="431.50"></text></g><g><title>apic_timer_interrupt (316,608,468 samples, 0.01%)</title><rect x="71.6415%" y="421" width="0.0122%" height="15" fill="rgb(229,146,28)" fg:x="1857628208611" fg:w="316608468"/><text x="71.8915%" y="431.50"></text></g><g><title>smp_apic_timer_interrupt (309,121,529 samples, 0.01%)</title><rect x="71.6418%" y="405" width="0.0119%" height="15" fill="rgb(225,31,38)" fg:x="1857635695550" fg:w="309121529"/><text x="71.8918%" y="415.50"></text></g><g><title>do_syscall_64 (950,420,296 samples, 0.04%)</title><rect x="71.6573%" y="421" width="0.0367%" height="15" fill="rgb(250,208,3)" fg:x="1858039263215" fg:w="950420296"/><text x="71.9073%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (35,075,793,797 samples, 1.35%)</title><rect x="71.6940%" y="421" width="1.3527%" height="15" fill="rgb(246,54,23)" fg:x="1858989683511" fg:w="35075793797"/><text x="71.9440%" y="431.50"></text></g><g><title>__x64_sys_sched_yield (3,854,817,904 samples, 0.15%)</title><rect x="73.4001%" y="405" width="0.1487%" height="15" fill="rgb(243,76,11)" fg:x="1903228893458" fg:w="3854817904"/><text x="73.6501%" y="415.50"></text></g><g><title>amd_clear_divider (4,777,930,421 samples, 0.18%)</title><rect x="73.5574%" y="405" width="0.1843%" height="15" fill="rgb(245,21,50)" fg:x="1907306673434" fg:w="4777930421"/><text x="73.8074%" y="415.50"></text></g><g><title>__x86_indirect_thunk_rax (741,575,945 samples, 0.03%)</title><rect x="78.7607%" y="373" width="0.0286%" height="15" fill="rgb(228,9,43)" fg:x="2042225467728" fg:w="741575945"/><text x="79.0107%" y="383.50"></text></g><g><title>_raw_spin_lock (6,385,185,686 samples, 0.25%)</title><rect x="78.7893%" y="373" width="0.2463%" height="15" fill="rgb(208,100,47)" fg:x="2042967043673" fg:w="6385185686"/><text x="79.0393%" y="383.50"></text></g><g><title>__sched_text_start (751,721,777 samples, 0.03%)</title><rect x="79.2438%" y="357" width="0.0290%" height="15" fill="rgb(232,26,8)" fg:x="2054752144500" fg:w="751721777"/><text x="79.4938%" y="367.50"></text></g><g><title>_raw_spin_lock (892,920,280 samples, 0.03%)</title><rect x="79.2728%" y="357" width="0.0344%" height="15" fill="rgb(216,166,38)" fg:x="2055503866277" fg:w="892920280"/><text x="79.5228%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (892,920,280 samples, 0.03%)</title><rect x="79.2728%" y="341" width="0.0344%" height="15" fill="rgb(251,202,51)" fg:x="2055503866277" fg:w="892920280"/><text x="79.5228%" y="351.50"></text></g><g><title>clear_buddies (392,149,118 samples, 0.02%)</title><rect x="79.3105%" y="357" width="0.0151%" height="15" fill="rgb(254,216,34)" fg:x="2056483531959" fg:w="392149118"/><text x="79.5605%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (284,022,950 samples, 0.01%)</title><rect x="80.2249%" y="325" width="0.0110%" height="15" fill="rgb(251,32,27)" fg:x="2080192983568" fg:w="284022950"/><text x="80.4749%" y="335.50"></text></g><g><title>__perf_event_task_sched_out (5,018,604,008 samples, 0.19%)</title><rect x="80.2359%" y="325" width="0.1935%" height="15" fill="rgb(208,127,28)" fg:x="2080477006518" fg:w="5018604008"/><text x="80.4859%" y="335.50"></text></g><g><title>__switch_to (2,898,512,596 samples, 0.11%)</title><rect x="80.4294%" y="325" width="0.1118%" height="15" fill="rgb(224,137,22)" fg:x="2085495610526" fg:w="2898512596"/><text x="80.6794%" y="335.50"></text></g><g><title>_raw_spin_lock (2,914,020,755 samples, 0.11%)</title><rect x="80.5412%" y="325" width="0.1124%" height="15" fill="rgb(254,70,32)" fg:x="2088394123122" fg:w="2914020755"/><text x="80.7912%" y="335.50"></text></g><g><title>check_cfs_rq_runtime (1,183,749,714 samples, 0.05%)</title><rect x="80.6614%" y="325" width="0.0457%" height="15" fill="rgb(229,75,37)" fg:x="2091509801110" fg:w="1183749714"/><text x="80.9114%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (1,966,528,966 samples, 0.08%)</title><rect x="80.7683%" y="309" width="0.0758%" height="15" fill="rgb(252,64,23)" fg:x="2094281881912" fg:w="1966528966"/><text x="81.0183%" y="319.50"></text></g><g><title>finish_task_switch (3,850,685,449 samples, 0.15%)</title><rect x="80.7070%" y="325" width="0.1485%" height="15" fill="rgb(232,162,48)" fg:x="2092693550824" fg:w="3850685449"/><text x="80.9570%" y="335.50"></text></g><g><title>pick_next_entity (1,194,389,192 samples, 0.05%)</title><rect x="80.8559%" y="325" width="0.0461%" height="15" fill="rgb(246,160,12)" fg:x="2096554286610" fg:w="1194389192"/><text x="81.1059%" y="335.50"></text></g><g><title>__calc_delta (1,378,658,485 samples, 0.05%)</title><rect x="81.3867%" y="309" width="0.0532%" height="15" fill="rgb(247,166,0)" fg:x="2110317528410" fg:w="1378658485"/><text x="81.6367%" y="319.50"></text></g><g><title>__cgroup_account_cputime (269,787,612 samples, 0.01%)</title><rect x="81.4399%" y="309" width="0.0104%" height="15" fill="rgb(249,219,21)" fg:x="2111696186895" fg:w="269787612"/><text x="81.6899%" y="319.50"></text></g><g><title>clear_buddies (1,549,598,760 samples, 0.06%)</title><rect x="81.4637%" y="309" width="0.0598%" height="15" fill="rgb(205,209,3)" fg:x="2112313942451" fg:w="1549598760"/><text x="81.7137%" y="319.50"></text></g><g><title>cpuacct_charge (286,610,916 samples, 0.01%)</title><rect x="81.5235%" y="309" width="0.0111%" height="15" fill="rgb(243,44,1)" fg:x="2113863541211" fg:w="286610916"/><text x="81.7735%" y="319.50"></text></g><g><title>clear_buddies (1,875,262,707 samples, 0.07%)</title><rect x="81.8326%" y="293" width="0.0723%" height="15" fill="rgb(206,159,16)" fg:x="2121880178249" fg:w="1875262707"/><text x="82.0826%" y="303.50"></text></g><g><title>pick_next_entity (10,001,766,918 samples, 0.39%)</title><rect x="81.5345%" y="309" width="0.3857%" height="15" fill="rgb(244,77,30)" fg:x="2114150152127" fg:w="10001766918"/><text x="81.7845%" y="319.50"></text></g><g><title>wakeup_preempt_entity.isra.0 (396,478,089 samples, 0.02%)</title><rect x="81.9050%" y="293" width="0.0153%" height="15" fill="rgb(218,69,12)" fg:x="2123755440956" fg:w="396478089"/><text x="82.1550%" y="303.50"></text></g><g><title>__enqueue_entity (1,126,993,077 samples, 0.04%)</title><rect x="81.9680%" y="293" width="0.0435%" height="15" fill="rgb(212,87,7)" fg:x="2125391060999" fg:w="1126993077"/><text x="82.2180%" y="303.50"></text></g><g><title>rb_insert_color (704,334,278 samples, 0.03%)</title><rect x="82.0264%" y="293" width="0.0272%" height="15" fill="rgb(245,114,25)" fg:x="2126903899641" fg:w="704334278"/><text x="82.2764%" y="303.50"></text></g><g><title>update_curr (898,464,035 samples, 0.03%)</title><rect x="82.0536%" y="293" width="0.0347%" height="15" fill="rgb(210,61,42)" fg:x="2127608233919" fg:w="898464035"/><text x="82.3036%" y="303.50"></text></g><g><title>__update_load_avg_cfs_rq (2,180,697,667 samples, 0.08%)</title><rect x="82.1501%" y="277" width="0.0841%" height="15" fill="rgb(211,52,33)" fg:x="2130110651372" fg:w="2180697667"/><text x="82.4001%" y="287.50"></text></g><g><title>put_prev_entity (9,801,676,528 samples, 0.38%)</title><rect x="81.9203%" y="309" width="0.3780%" height="15" fill="rgb(234,58,33)" fg:x="2124151919045" fg:w="9801676528"/><text x="82.1703%" y="319.50"></text></g><g><title>update_load_avg (5,446,897,619 samples, 0.21%)</title><rect x="82.0882%" y="293" width="0.2101%" height="15" fill="rgb(220,115,36)" fg:x="2128506697954" fg:w="5446897619"/><text x="82.3382%" y="303.50"></text></g><g><title>__update_load_avg_se (1,662,246,534 samples, 0.06%)</title><rect x="82.2342%" y="277" width="0.0641%" height="15" fill="rgb(243,153,54)" fg:x="2132291349039" fg:w="1662246534"/><text x="82.4842%" y="287.50"></text></g><g><title>rb_erase (845,848,072 samples, 0.03%)</title><rect x="82.2983%" y="309" width="0.0326%" height="15" fill="rgb(251,47,18)" fg:x="2133953595573" fg:w="845848072"/><text x="82.5483%" y="319.50"></text></g><g><title>__update_load_avg_se (288,007,472 samples, 0.01%)</title><rect x="82.3959%" y="293" width="0.0111%" height="15" fill="rgb(242,102,42)" fg:x="2136485368520" fg:w="288007472"/><text x="82.6459%" y="303.50"></text></g><g><title>__update_load_avg_cfs_rq (1,003,430,842 samples, 0.04%)</title><rect x="82.4694%" y="277" width="0.0387%" height="15" fill="rgb(234,31,38)" fg:x="2138391309708" fg:w="1003430842"/><text x="82.7194%" y="287.50"></text></g><g><title>set_next_entity (5,976,340,684 samples, 0.23%)</title><rect x="82.3381%" y="309" width="0.2305%" height="15" fill="rgb(221,117,51)" fg:x="2134987121423" fg:w="5976340684"/><text x="82.5881%" y="319.50"></text></g><g><title>update_load_avg (4,190,086,115 samples, 0.16%)</title><rect x="82.4070%" y="293" width="0.1616%" height="15" fill="rgb(212,20,18)" fg:x="2136773375992" fg:w="4190086115"/><text x="82.6570%" y="303.50"></text></g><g><title>__update_load_avg_se (1,568,721,557 samples, 0.06%)</title><rect x="82.5081%" y="277" width="0.0605%" height="15" fill="rgb(245,133,36)" fg:x="2139394740550" fg:w="1568721557"/><text x="82.7581%" y="287.50"></text></g><g><title>__calc_delta (5,913,844,976 samples, 0.23%)</title><rect x="83.0439%" y="293" width="0.2281%" height="15" fill="rgb(212,6,19)" fg:x="2153288517939" fg:w="5913844976"/><text x="83.2939%" y="303.50"></text></g><g><title>__cgroup_account_cputime (2,252,545,200 samples, 0.09%)</title><rect x="83.2720%" y="293" width="0.0869%" height="15" fill="rgb(218,1,36)" fg:x="2159202362915" fg:w="2252545200"/><text x="83.5220%" y="303.50"></text></g><g><title>cgroup_rstat_updated (1,313,318,290 samples, 0.05%)</title><rect x="83.3082%" y="277" width="0.0506%" height="15" fill="rgb(246,84,54)" fg:x="2160141589825" fg:w="1313318290"/><text x="83.5582%" y="287.50"></text></g><g><title>cgroup_rstat_updated (369,398,112 samples, 0.01%)</title><rect x="83.3589%" y="293" width="0.0142%" height="15" fill="rgb(242,110,6)" fg:x="2161454908115" fg:w="369398112"/><text x="83.6089%" y="303.50"></text></g><g><title>cpuacct_charge (3,488,430,349 samples, 0.13%)</title><rect x="83.3731%" y="293" width="0.1345%" height="15" fill="rgb(214,47,5)" fg:x="2161824306227" fg:w="3488430349"/><text x="83.6231%" y="303.50"></text></g><g><title>update_curr (27,039,095,645 samples, 1.04%)</title><rect x="82.5686%" y="309" width="1.0428%" height="15" fill="rgb(218,159,25)" fg:x="2140963462107" fg:w="27039095645"/><text x="82.8186%" y="319.50"></text></g><g><title>update_min_vruntime (2,689,821,176 samples, 0.10%)</title><rect x="83.5077%" y="293" width="0.1037%" height="15" fill="rgb(215,211,28)" fg:x="2165312736576" fg:w="2689821176"/><text x="83.7577%" y="303.50"></text></g><g><title>update_load_avg (317,982,142 samples, 0.01%)</title><rect x="83.6114%" y="309" width="0.0123%" height="15" fill="rgb(238,59,32)" fg:x="2168002557752" fg:w="317982142"/><text x="83.8614%" y="319.50"></text></g><g><title>update_min_vruntime (1,334,928,276 samples, 0.05%)</title><rect x="83.6237%" y="309" width="0.0515%" height="15" fill="rgb(226,82,3)" fg:x="2168320539894" fg:w="1334928276"/><text x="83.8737%" y="319.50"></text></g><g><title>pick_next_task_fair (72,127,868,712 samples, 2.78%)</title><rect x="80.9020%" y="325" width="2.7817%" height="15" fill="rgb(240,164,32)" fg:x="2097748675802" fg:w="72127868712"/><text x="81.1520%" y="335.50">pi..</text></g><g><title>rcu_note_context_switch (2,236,389,791 samples, 0.09%)</title><rect x="83.6900%" y="325" width="0.0862%" height="15" fill="rgb(232,46,7)" fg:x="2170040540358" fg:w="2236389791"/><text x="83.9400%" y="335.50"></text></g><g><title>rcu_qs (457,841,263 samples, 0.02%)</title><rect x="83.7762%" y="325" width="0.0177%" height="15" fill="rgb(229,129,53)" fg:x="2172276930149" fg:w="457841263"/><text x="84.0262%" y="335.50"></text></g><g><title>reschedule_interrupt (281,600,802 samples, 0.01%)</title><rect x="83.7939%" y="325" width="0.0109%" height="15" fill="rgb(234,188,29)" fg:x="2172734771412" fg:w="281600802"/><text x="84.0439%" y="335.50"></text></g><g><title>smp_reschedule_interrupt (264,492,584 samples, 0.01%)</title><rect x="83.7946%" y="309" width="0.0102%" height="15" fill="rgb(246,141,4)" fg:x="2172751879630" fg:w="264492584"/><text x="84.0446%" y="319.50"></text></g><g><title>switch_mm_irqs_off (1,657,905,400 samples, 0.06%)</title><rect x="83.8094%" y="325" width="0.0639%" height="15" fill="rgb(229,23,39)" fg:x="2173137591831" fg:w="1657905400"/><text x="84.0594%" y="335.50"></text></g><g><title>update_curr (680,999,326 samples, 0.03%)</title><rect x="83.8734%" y="325" width="0.0263%" height="15" fill="rgb(206,12,3)" fg:x="2174795497231" fg:w="680999326"/><text x="84.1234%" y="335.50"></text></g><g><title>native_sched_clock (2,314,576,304 samples, 0.09%)</title><rect x="84.0217%" y="293" width="0.0893%" height="15" fill="rgb(252,226,20)" fg:x="2178641404447" fg:w="2314576304"/><text x="84.2717%" y="303.50"></text></g><g><title>__sched_text_start (121,635,028,602 samples, 4.69%)</title><rect x="79.4259%" y="341" width="4.6910%" height="15" fill="rgb(216,123,35)" fg:x="2059475753286" fg:w="121635028602"/><text x="79.6759%" y="351.50">__sch..</text></g><g><title>update_rq_clock (5,634,285,331 samples, 0.22%)</title><rect x="83.8996%" y="325" width="0.2173%" height="15" fill="rgb(212,68,40)" fg:x="2175476496557" fg:w="5634285331"/><text x="84.1496%" y="335.50"></text></g><g><title>sched_clock_cpu (3,548,413,159 samples, 0.14%)</title><rect x="83.9801%" y="309" width="0.1368%" height="15" fill="rgb(254,125,32)" fg:x="2177562368729" fg:w="3548413159"/><text x="84.2301%" y="319.50"></text></g><g><title>__switch_to_asm (309,654,068 samples, 0.01%)</title><rect x="84.1261%" y="341" width="0.0119%" height="15" fill="rgb(253,97,22)" fg:x="2181348807455" fg:w="309654068"/><text x="84.3761%" y="351.50"></text></g><g><title>__x86_indirect_thunk_rax (814,547,557 samples, 0.03%)</title><rect x="84.1381%" y="341" width="0.0314%" height="15" fill="rgb(241,101,14)" fg:x="2181658461523" fg:w="814547557"/><text x="84.3881%" y="351.50"></text></g><g><title>_raw_spin_lock (4,034,823,895 samples, 0.16%)</title><rect x="84.1695%" y="341" width="0.1556%" height="15" fill="rgb(238,103,29)" fg:x="2182473009080" fg:w="4034823895"/><text x="84.4195%" y="351.50"></text></g><g><title>finish_task_switch (485,201,721 samples, 0.02%)</title><rect x="84.3254%" y="341" width="0.0187%" height="15" fill="rgb(233,195,47)" fg:x="2186516772303" fg:w="485201721"/><text x="84.5754%" y="351.50"></text></g><g><title>pick_next_task_fair (784,312,606 samples, 0.03%)</title><rect x="84.3441%" y="341" width="0.0302%" height="15" fill="rgb(246,218,30)" fg:x="2187001974024" fg:w="784312606"/><text x="84.5941%" y="351.50"></text></g><g><title>schedule (131,962,042,161 samples, 5.09%)</title><rect x="79.3342%" y="357" width="5.0893%" height="15" fill="rgb(219,145,47)" fg:x="2057096818056" fg:w="131962042161"/><text x="79.5842%" y="367.50">schedu..</text></g><g><title>update_rq_clock (994,579,785 samples, 0.04%)</title><rect x="84.3851%" y="341" width="0.0384%" height="15" fill="rgb(243,12,26)" fg:x="2188064280432" fg:w="994579785"/><text x="84.6351%" y="351.50"></text></g><g><title>update_rq_clock (587,333,953 samples, 0.02%)</title><rect x="84.4314%" y="357" width="0.0227%" height="15" fill="rgb(214,87,16)" fg:x="2189263818944" fg:w="587333953"/><text x="84.6814%" y="367.50"></text></g><g><title>clear_buddies (1,084,666,509 samples, 0.04%)</title><rect x="84.6618%" y="341" width="0.0418%" height="15" fill="rgb(208,99,42)" fg:x="2195237767169" fg:w="1084666509"/><text x="84.9118%" y="351.50"></text></g><g><title>__cgroup_account_cputime (1,856,444,452 samples, 0.07%)</title><rect x="84.8463%" y="325" width="0.0716%" height="15" fill="rgb(253,99,2)" fg:x="2200023623754" fg:w="1856444452"/><text x="85.0963%" y="335.50"></text></g><g><title>cgroup_rstat_updated (1,084,338,290 samples, 0.04%)</title><rect x="84.8761%" y="309" width="0.0418%" height="15" fill="rgb(220,168,23)" fg:x="2200795729916" fg:w="1084338290"/><text x="85.1261%" y="319.50"></text></g><g><title>cpuacct_charge (2,894,091,932 samples, 0.11%)</title><rect x="84.9265%" y="325" width="0.1116%" height="15" fill="rgb(242,38,24)" fg:x="2202102999229" fg:w="2894091932"/><text x="85.1765%" y="335.50"></text></g><g><title>update_curr (9,278,588,951 samples, 0.36%)</title><rect x="84.7144%" y="341" width="0.3578%" height="15" fill="rgb(225,182,9)" fg:x="2196603336663" fg:w="9278588951"/><text x="84.9644%" y="351.50"></text></g><g><title>update_min_vruntime (884,834,453 samples, 0.03%)</title><rect x="85.0381%" y="325" width="0.0341%" height="15" fill="rgb(243,178,37)" fg:x="2204997091161" fg:w="884834453"/><text x="85.2881%" y="335.50"></text></g><g><title>update_min_vruntime (334,612,083 samples, 0.01%)</title><rect x="85.0723%" y="341" width="0.0129%" height="15" fill="rgb(232,139,19)" fg:x="2205881925614" fg:w="334612083"/><text x="85.3223%" y="351.50"></text></g><g><title>native_sched_clock (1,805,146,194 samples, 0.07%)</title><rect x="85.1871%" y="309" width="0.0696%" height="15" fill="rgb(225,201,24)" fg:x="2208858492868" fg:w="1805146194"/><text x="85.4371%" y="319.50"></text></g><g><title>do_sched_yield (161,479,503,253 samples, 6.23%)</title><rect x="79.0358%" y="373" width="6.2276%" height="15" fill="rgb(221,47,46)" fg:x="2049359629788" fg:w="161479503253"/><text x="79.2858%" y="383.50">do_sched..</text></g><g><title>yield_task_fair (20,987,980,144 samples, 0.81%)</title><rect x="84.4540%" y="357" width="0.8094%" height="15" fill="rgb(249,23,13)" fg:x="2189851152897" fg:w="20987980144"/><text x="84.7040%" y="367.50"></text></g><g><title>update_rq_clock (4,622,595,344 samples, 0.18%)</title><rect x="85.0852%" y="341" width="0.1783%" height="15" fill="rgb(219,9,5)" fg:x="2206216537697" fg:w="4622595344"/><text x="85.3352%" y="351.50"></text></g><g><title>sched_clock_cpu (2,813,643,359 samples, 0.11%)</title><rect x="85.1549%" y="325" width="0.1085%" height="15" fill="rgb(254,171,16)" fg:x="2208025489682" fg:w="2813643359"/><text x="85.4049%" y="335.50"></text></g><g><title>schedule (447,964,568 samples, 0.02%)</title><rect x="85.2682%" y="373" width="0.0173%" height="15" fill="rgb(230,171,20)" fg:x="2210963429561" fg:w="447964568"/><text x="85.5182%" y="383.50"></text></g><g><title>__x64_sys_sched_yield (172,874,792,414 samples, 6.67%)</title><rect x="78.7254%" y="389" width="6.6671%" height="15" fill="rgb(210,71,41)" fg:x="2041311688038" fg:w="172874792414"/><text x="78.9754%" y="399.50">__x64_sys..</text></g><g><title>yield_task_fair (2,775,086,323 samples, 0.11%)</title><rect x="85.2855%" y="373" width="0.1070%" height="15" fill="rgb(206,173,20)" fg:x="2211411394129" fg:w="2775086323"/><text x="85.5355%" y="383.50"></text></g><g><title>do_sched_yield (1,103,391,352 samples, 0.04%)</title><rect x="85.3992%" y="389" width="0.0426%" height="15" fill="rgb(233,88,34)" fg:x="2214358511891" fg:w="1103391352"/><text x="85.6492%" y="399.50"></text></g><g><title>change_pte_range (270,456,224 samples, 0.01%)</title><rect x="85.4420%" y="293" width="0.0104%" height="15" fill="rgb(223,209,46)" fg:x="2215469884615" fg:w="270456224"/><text x="85.6920%" y="303.50"></text></g><g><title>exit_to_usermode_loop (293,823,656 samples, 0.01%)</title><rect x="85.4417%" y="389" width="0.0113%" height="15" fill="rgb(250,43,18)" fg:x="2215461903243" fg:w="293823656"/><text x="85.6917%" y="399.50"></text></g><g><title>task_work_run (293,823,656 samples, 0.01%)</title><rect x="85.4417%" y="373" width="0.0113%" height="15" fill="rgb(208,13,10)" fg:x="2215461903243" fg:w="293823656"/><text x="85.6917%" y="383.50"></text></g><g><title>task_numa_work (293,823,656 samples, 0.01%)</title><rect x="85.4417%" y="357" width="0.0113%" height="15" fill="rgb(212,200,36)" fg:x="2215461903243" fg:w="293823656"/><text x="85.6917%" y="367.50"></text></g><g><title>change_prot_numa (293,823,656 samples, 0.01%)</title><rect x="85.4417%" y="341" width="0.0113%" height="15" fill="rgb(225,90,30)" fg:x="2215461903243" fg:w="293823656"/><text x="85.6917%" y="351.50"></text></g><g><title>change_protection (293,823,656 samples, 0.01%)</title><rect x="85.4417%" y="325" width="0.0113%" height="15" fill="rgb(236,182,39)" fg:x="2215461903243" fg:w="293823656"/><text x="85.6917%" y="335.50"></text></g><g><title>change_protection_range (293,823,656 samples, 0.01%)</title><rect x="85.4417%" y="309" width="0.0113%" height="15" fill="rgb(212,144,35)" fg:x="2215461903243" fg:w="293823656"/><text x="85.6917%" y="319.50"></text></g><g><title>fpregs_assert_state_consistent (1,267,660,491 samples, 0.05%)</title><rect x="85.4531%" y="389" width="0.0489%" height="15" fill="rgb(228,63,44)" fg:x="2215755726899" fg:w="1267660491"/><text x="85.7031%" y="399.50"></text></g><g><title>do_syscall_64 (311,001,375,850 samples, 11.99%)</title><rect x="73.7419%" y="405" width="11.9941%" height="15" fill="rgb(228,109,6)" fg:x="1912091341465" fg:w="311001375850"/><text x="73.9919%" y="415.50">do_syscall_64</text></g><g><title>switch_fpu_return (5,988,922,087 samples, 0.23%)</title><rect x="85.5050%" y="389" width="0.2310%" height="15" fill="rgb(238,117,24)" fg:x="2217103795228" fg:w="5988922087"/><text x="85.7550%" y="399.50"></text></g><g><title>fpregs_assert_state_consistent (1,518,163,405 samples, 0.06%)</title><rect x="85.7360%" y="405" width="0.0585%" height="15" fill="rgb(242,26,26)" fg:x="2223092717315" fg:w="1518163405"/><text x="85.9860%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (330,700,514,150 samples, 12.75%)</title><rect x="73.0467%" y="421" width="12.7538%" height="15" fill="rgb(221,92,48)" fg:x="1894065477308" fg:w="330700514150"/><text x="73.2967%" y="431.50">entry_SYSCALL_64_af..</text></g><g><title>native_load_tls (871,245,031 samples, 0.03%)</title><rect x="85.8019%" y="421" width="0.0336%" height="15" fill="rgb(209,209,32)" fg:x="2224801126444" fg:w="871245031"/><text x="86.0519%" y="431.50"></text></g><g><title>native_write_msr (5,491,121,281 samples, 0.21%)</title><rect x="85.8355%" y="421" width="0.2118%" height="15" fill="rgb(221,70,22)" fg:x="2225672371475" fg:w="5491121281"/><text x="86.0855%" y="431.50"></text></g><g><title>change_prot_numa (268,260,985 samples, 0.01%)</title><rect x="86.0572%" y="341" width="0.0103%" height="15" fill="rgb(248,145,5)" fg:x="2231421992287" fg:w="268260985"/><text x="86.3072%" y="351.50"></text></g><g><title>change_protection (268,260,985 samples, 0.01%)</title><rect x="86.0572%" y="325" width="0.0103%" height="15" fill="rgb(226,116,26)" fg:x="2231421992287" fg:w="268260985"/><text x="86.3072%" y="335.50"></text></g><g><title>change_protection_range (268,260,985 samples, 0.01%)</title><rect x="86.0572%" y="309" width="0.0103%" height="15" fill="rgb(244,5,17)" fg:x="2231421992287" fg:w="268260985"/><text x="86.3072%" y="319.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (353,413,651 samples, 0.01%)</title><rect x="86.0541%" y="421" width="0.0136%" height="15" fill="rgb(252,159,33)" fg:x="2231339516348" fg:w="353413651"/><text x="86.3041%" y="431.50"></text></g><g><title>prepare_exit_to_usermode (341,523,549 samples, 0.01%)</title><rect x="86.0545%" y="405" width="0.0132%" height="15" fill="rgb(206,71,0)" fg:x="2231351406450" fg:w="341523549"/><text x="86.3045%" y="415.50"></text></g><g><title>exit_to_usermode_loop (285,163,524 samples, 0.01%)</title><rect x="86.0567%" y="389" width="0.0110%" height="15" fill="rgb(233,118,54)" fg:x="2231407766475" fg:w="285163524"/><text x="86.3067%" y="399.50"></text></g><g><title>task_work_run (270,937,712 samples, 0.01%)</title><rect x="86.0572%" y="373" width="0.0104%" height="15" fill="rgb(234,83,48)" fg:x="2231421992287" fg:w="270937712"/><text x="86.3072%" y="383.50"></text></g><g><title>task_numa_work (270,937,712 samples, 0.01%)</title><rect x="86.0572%" y="357" width="0.0104%" height="15" fill="rgb(228,3,54)" fg:x="2231421992287" fg:w="270937712"/><text x="86.3072%" y="367.50"></text></g><g><title>__GI___sched_yield (434,236,532,119 samples, 16.75%)</title><rect x="70.8292%" y="437" width="16.7468%" height="15" fill="rgb(226,155,13)" fg:x="1836567054857" fg:w="434236532119"/><text x="71.0792%" y="447.50">__GI___sched_yield</text></g><g><title>syscall_return_via_sysret (39,110,656,977 samples, 1.51%)</title><rect x="86.0677%" y="421" width="1.5083%" height="15" fill="rgb(241,28,37)" fg:x="2231692929999" fg:w="39110656977"/><text x="86.3177%" y="431.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (666,218,765 samples, 0.03%)</title><rect x="87.5777%" y="405" width="0.0257%" height="15" fill="rgb(233,93,10)" fg:x="2270847853141" fg:w="666218765"/><text x="87.8277%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (666,218,765 samples, 0.03%)</title><rect x="87.5777%" y="389" width="0.0257%" height="15" fill="rgb(225,113,19)" fg:x="2270847853141" fg:w="666218765"/><text x="87.8277%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (666,218,765 samples, 0.03%)</title><rect x="87.5777%" y="373" width="0.0257%" height="15" fill="rgb(241,2,18)" fg:x="2270847853141" fg:w="666218765"/><text x="87.8277%" y="383.50"></text></g><g><title>rayon_core::sleep::Sleep::announce_sleepy (875,603,051 samples, 0.03%)</title><rect x="87.5762%" y="437" width="0.0338%" height="15" fill="rgb(228,207,21)" fg:x="2270807980214" fg:w="875603051"/><text x="87.8262%" y="447.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (869,872,290 samples, 0.03%)</title><rect x="87.5764%" y="421" width="0.0335%" height="15" fill="rgb(213,211,35)" fg:x="2270813710975" fg:w="869872290"/><text x="87.8264%" y="431.50"></text></g><g><title>futex_wake (513,996,230 samples, 0.02%)</title><rect x="87.6196%" y="357" width="0.0198%" height="15" fill="rgb(209,83,10)" fg:x="2271931957252" fg:w="513996230"/><text x="87.8696%" y="367.50"></text></g><g><title>wake_up_q (313,542,801 samples, 0.01%)</title><rect x="87.6273%" y="341" width="0.0121%" height="15" fill="rgb(209,164,1)" fg:x="2272132410681" fg:w="313542801"/><text x="87.8773%" y="351.50"></text></g><g><title>try_to_wake_up (291,282,909 samples, 0.01%)</title><rect x="87.6281%" y="325" width="0.0112%" height="15" fill="rgb(213,184,43)" fg:x="2272154670573" fg:w="291282909"/><text x="87.8781%" y="335.50"></text></g><g><title>do_futex (546,469,425 samples, 0.02%)</title><rect x="87.6189%" y="373" width="0.0211%" height="15" fill="rgb(231,61,34)" fg:x="2271915721093" fg:w="546469425"/><text x="87.8689%" y="383.50"></text></g><g><title>__x64_sys_futex (554,257,611 samples, 0.02%)</title><rect x="87.6187%" y="389" width="0.0214%" height="15" fill="rgb(235,75,3)" fg:x="2271910491160" fg:w="554257611"/><text x="87.8687%" y="399.50"></text></g><g><title>do_syscall_64 (661,072,280 samples, 0.03%)</title><rect x="87.6149%" y="405" width="0.0255%" height="15" fill="rgb(220,106,47)" fg:x="2271811649451" fg:w="661072280"/><text x="87.8649%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (688,874,204 samples, 0.03%)</title><rect x="87.6141%" y="421" width="0.0266%" height="15" fill="rgb(210,196,33)" fg:x="2271789257256" fg:w="688874204"/><text x="87.8641%" y="431.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (440,028,350,150 samples, 16.97%)</title><rect x="70.6719%" y="453" width="16.9702%" height="15" fill="rgb(229,154,42)" fg:x="1832488099748" fg:w="440028350150"/><text x="70.9219%" y="463.50">rayon_core::sleep::Sleep::..</text></g><g><title>syscall (830,448,019 samples, 0.03%)</title><rect x="87.6101%" y="437" width="0.0320%" height="15" fill="rgb(228,114,26)" fg:x="2271686001879" fg:w="830448019"/><text x="87.8601%" y="447.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::add_inactive_thread (1,807,768,262 samples, 0.07%)</title><rect x="87.6436%" y="437" width="0.0697%" height="15" fill="rgb(208,144,1)" fg:x="2272555535894" fg:w="1807768262"/><text x="87.8936%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,807,768,262 samples, 0.07%)</title><rect x="87.6436%" y="421" width="0.0697%" height="15" fill="rgb(239,112,37)" fg:x="2272555535894" fg:w="1807768262"/><text x="87.8936%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (1,807,768,262 samples, 0.07%)</title><rect x="87.6436%" y="405" width="0.0697%" height="15" fill="rgb(210,96,50)" fg:x="2272555535894" fg:w="1807768262"/><text x="87.8936%" y="415.50"></text></g><g><title>rayon_core::sleep::Sleep::start_looking (1,854,157,280 samples, 0.07%)</title><rect x="87.6421%" y="453" width="0.0715%" height="15" fill="rgb(222,178,2)" fg:x="2272516449898" fg:w="1854157280"/><text x="87.8921%" y="463.50"></text></g><g><title>__GI___sched_yield (478,033,555 samples, 0.02%)</title><rect x="87.7140%" y="437" width="0.0184%" height="15" fill="rgb(226,74,18)" fg:x="2274380426203" fg:w="478033555"/><text x="87.9640%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (478,033,555 samples, 0.02%)</title><rect x="87.7140%" y="421" width="0.0184%" height="15" fill="rgb(225,67,54)" fg:x="2274380426203" fg:w="478033555"/><text x="87.9640%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4,082,163,853 samples, 0.16%)</title><rect x="87.7325%" y="421" width="0.1574%" height="15" fill="rgb(251,92,32)" fg:x="2274860750743" fg:w="4082163853"/><text x="87.9825%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (4,082,163,853 samples, 0.16%)</title><rect x="87.7325%" y="405" width="0.1574%" height="15" fill="rgb(228,149,22)" fg:x="2274860750743" fg:w="4082163853"/><text x="87.9825%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (451,751,174,765 samples, 17.42%)</title><rect x="70.4714%" y="469" width="17.4223%" height="15" fill="rgb(243,54,13)" fg:x="1827287788838" fg:w="451751174765"/><text x="70.7214%" y="479.50">rayon_core::registry::Worke..</text></g><g><title>rayon_core::sleep::Sleep::work_found (4,668,356,425 samples, 0.18%)</title><rect x="87.7136%" y="453" width="0.1800%" height="15" fill="rgb(243,180,28)" fg:x="2274370607178" fg:w="4668356425"/><text x="87.9636%" y="463.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_inactive_thread (4,180,503,845 samples, 0.16%)</title><rect x="87.7324%" y="437" width="0.1612%" height="15" fill="rgb(208,167,24)" fg:x="2274858459758" fg:w="4180503845"/><text x="87.9824%" y="447.50"></text></g><g><title>rayon_core::registry::in_worker (750,500,664 samples, 0.03%)</title><rect x="87.8944%" y="469" width="0.0289%" height="15" fill="rgb(245,73,45)" fg:x="2279058518487" fg:w="750500664"/><text x="88.1444%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (259,920,633 samples, 0.01%)</title><rect x="87.9281%" y="453" width="0.0100%" height="15" fill="rgb(237,203,48)" fg:x="2279931583850" fg:w="259920633"/><text x="88.1781%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (292,218,300 samples, 0.01%)</title><rect x="87.9409%" y="405" width="0.0113%" height="15" fill="rgb(211,197,16)" fg:x="2280264470438" fg:w="292218300"/><text x="88.1909%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (292,218,300 samples, 0.01%)</title><rect x="87.9409%" y="389" width="0.0113%" height="15" fill="rgb(243,99,51)" fg:x="2280264470438" fg:w="292218300"/><text x="88.1909%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (354,309,276 samples, 0.01%)</title><rect x="87.9386%" y="453" width="0.0137%" height="15" fill="rgb(215,123,29)" fg:x="2280204729464" fg:w="354309276"/><text x="88.1886%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (354,309,276 samples, 0.01%)</title><rect x="87.9386%" y="437" width="0.0137%" height="15" fill="rgb(239,186,37)" fg:x="2280204729464" fg:w="354309276"/><text x="88.1886%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (310,154,229 samples, 0.01%)</title><rect x="87.9403%" y="421" width="0.0120%" height="15" fill="rgb(252,136,39)" fg:x="2280248884511" fg:w="310154229"/><text x="88.1903%" y="431.50"></text></g><g><title>rayon_core::latch::CoreLatch::fall_asleep (827,460,579 samples, 0.03%)</title><rect x="87.9584%" y="453" width="0.0319%" height="15" fill="rgb(223,213,32)" fg:x="2280717798461" fg:w="827460579"/><text x="88.2084%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (790,461,666 samples, 0.03%)</title><rect x="87.9598%" y="437" width="0.0305%" height="15" fill="rgb(233,115,5)" fg:x="2280754797374" fg:w="790461666"/><text x="88.2098%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (790,461,666 samples, 0.03%)</title><rect x="87.9598%" y="421" width="0.0305%" height="15" fill="rgb(207,226,44)" fg:x="2280754797374" fg:w="790461666"/><text x="88.2098%" y="431.50"></text></g><g><title>rayon_core::latch::CoreLatch::get_sleepy (2,176,159,046 samples, 0.08%)</title><rect x="87.9903%" y="453" width="0.0839%" height="15" fill="rgb(208,126,0)" fg:x="2281545259040" fg:w="2176159046"/><text x="88.2403%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2,085,269,596 samples, 0.08%)</title><rect x="87.9938%" y="437" width="0.0804%" height="15" fill="rgb(244,66,21)" fg:x="2281636148490" fg:w="2085269596"/><text x="88.2438%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2,085,269,596 samples, 0.08%)</title><rect x="87.9938%" y="421" width="0.0804%" height="15" fill="rgb(222,97,12)" fg:x="2281636148490" fg:w="2085269596"/><text x="88.2438%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,111,227,203 samples, 0.04%)</title><rect x="88.0754%" y="437" width="0.0429%" height="15" fill="rgb(219,213,19)" fg:x="2283750946474" fg:w="1111227203"/><text x="88.3254%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,111,227,203 samples, 0.04%)</title><rect x="88.0754%" y="421" width="0.0429%" height="15" fill="rgb(252,169,30)" fg:x="2283750946474" fg:w="1111227203"/><text x="88.3254%" y="431.50"></text></g><g><title>rayon_core::latch::CoreLatch::wake_up (1,385,663,778 samples, 0.05%)</title><rect x="88.0742%" y="453" width="0.0534%" height="15" fill="rgb(206,32,51)" fg:x="2283721418086" fg:w="1385663778"/><text x="88.3242%" y="463.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::is_empty (273,787,835 samples, 0.01%)</title><rect x="88.1279%" y="421" width="0.0106%" height="15" fill="rgb(250,172,42)" fg:x="2285114246484" fg:w="273787835"/><text x="88.3779%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (329,500,917 samples, 0.01%)</title><rect x="88.1277%" y="453" width="0.0127%" height="15" fill="rgb(209,34,43)" fg:x="2285107081864" fg:w="329500917"/><text x="88.3777%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::has_injected_job (329,500,917 samples, 0.01%)</title><rect x="88.1277%" y="437" width="0.0127%" height="15" fill="rgb(223,11,35)" fg:x="2285107081864" fg:w="329500917"/><text x="88.3777%" y="447.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (6,868,191,509 samples, 0.26%)</title><rect x="87.9233%" y="469" width="0.2649%" height="15" fill="rgb(251,219,26)" fg:x="2279809019151" fg:w="6868191509"/><text x="88.1733%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (629,929,657 samples, 0.02%)</title><rect x="88.1639%" y="453" width="0.0243%" height="15" fill="rgb(231,119,3)" fg:x="2286047281003" fg:w="629929657"/><text x="88.4139%" y="463.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (580,778,110 samples, 0.02%)</title><rect x="88.1658%" y="437" width="0.0224%" height="15" fill="rgb(216,97,11)" fg:x="2286096432550" fg:w="580778110"/><text x="88.4158%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (573,343,721 samples, 0.02%)</title><rect x="88.1661%" y="421" width="0.0221%" height="15" fill="rgb(223,59,9)" fg:x="2286103866939" fg:w="573343721"/><text x="88.4161%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (573,343,721 samples, 0.02%)</title><rect x="88.1661%" y="405" width="0.0221%" height="15" fill="rgb(233,93,31)" fg:x="2286103866939" fg:w="573343721"/><text x="88.4161%" y="415.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (758,077,599 samples, 0.03%)</title><rect x="88.1882%" y="469" width="0.0292%" height="15" fill="rgb(239,81,33)" fg:x="2286677210660" fg:w="758077599"/><text x="88.4382%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4,255,655,778 samples, 0.16%)</title><rect x="88.2489%" y="437" width="0.1641%" height="15" fill="rgb(213,120,34)" fg:x="2288251831099" fg:w="4255655778"/><text x="88.4989%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (405,343,516 samples, 0.02%)</title><rect x="88.4131%" y="437" width="0.0156%" height="15" fill="rgb(243,49,53)" fg:x="2292507486877" fg:w="405343516"/><text x="88.6631%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (405,343,516 samples, 0.02%)</title><rect x="88.4131%" y="421" width="0.0156%" height="15" fill="rgb(247,216,33)" fg:x="2292507486877" fg:w="405343516"/><text x="88.6631%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,796,558,282 samples, 0.18%)</title><rect x="88.2438%" y="453" width="0.1850%" height="15" fill="rgb(226,26,14)" fg:x="2288119246793" fg:w="4796558282"/><text x="88.4938%" y="463.50"></text></g><g><title>std::sync::poison::Flag::done (283,993,036 samples, 0.01%)</title><rect x="88.4290%" y="421" width="0.0110%" height="15" fill="rgb(215,49,53)" fg:x="2292920548400" fg:w="283993036"/><text x="88.6790%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (5,834,415,039 samples, 0.23%)</title><rect x="88.4496%" y="405" width="0.2250%" height="15" fill="rgb(245,162,40)" fg:x="2293455636256" fg:w="5834415039"/><text x="88.6996%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (5,834,415,039 samples, 0.23%)</title><rect x="88.4496%" y="389" width="0.2250%" height="15" fill="rgb(229,68,17)" fg:x="2293455636256" fg:w="5834415039"/><text x="88.6996%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (629,291,412 samples, 0.02%)</title><rect x="88.6877%" y="389" width="0.0243%" height="15" fill="rgb(213,182,10)" fg:x="2299628098292" fg:w="629291412"/><text x="88.9377%" y="399.50"></text></g><g><title>_raw_spin_lock (682,418,600 samples, 0.03%)</title><rect x="88.9283%" y="325" width="0.0263%" height="15" fill="rgb(245,125,30)" fg:x="2305866330001" fg:w="682418600"/><text x="89.1783%" y="335.50"></text></g><g><title>_raw_spin_lock (6,621,490,517 samples, 0.26%)</title><rect x="89.0468%" y="309" width="0.2554%" height="15" fill="rgb(232,202,2)" fg:x="2308940722018" fg:w="6621490517"/><text x="89.2968%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (6,621,490,517 samples, 0.26%)</title><rect x="89.0468%" y="293" width="0.2554%" height="15" fill="rgb(237,140,51)" fg:x="2308940722018" fg:w="6621490517"/><text x="89.2968%" y="303.50"></text></g><g><title>get_futex_key_refs.isra.0 (652,492,608 samples, 0.03%)</title><rect x="89.3107%" y="293" width="0.0252%" height="15" fill="rgb(236,157,25)" fg:x="2315781651723" fg:w="652492608"/><text x="89.5607%" y="303.50"></text></g><g><title>get_futex_key (868,064,821 samples, 0.03%)</title><rect x="89.3025%" y="309" width="0.0335%" height="15" fill="rgb(219,209,0)" fg:x="2315568625002" fg:w="868064821"/><text x="89.5525%" y="319.50"></text></g><g><title>__unqueue_futex (503,135,433 samples, 0.02%)</title><rect x="89.3677%" y="293" width="0.0194%" height="15" fill="rgb(240,116,54)" fg:x="2317259799588" fg:w="503135433"/><text x="89.6177%" y="303.50"></text></g><g><title>mark_wake_futex (1,293,324,716 samples, 0.05%)</title><rect x="89.3383%" y="309" width="0.0499%" height="15" fill="rgb(216,10,36)" fg:x="2316498529581" fg:w="1293324716"/><text x="89.5883%" y="319.50"></text></g><g><title>_raw_spin_lock (355,407,524 samples, 0.01%)</title><rect x="89.5706%" y="277" width="0.0137%" height="15" fill="rgb(222,72,44)" fg:x="2322520436447" fg:w="355407524"/><text x="89.8206%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath (355,407,524 samples, 0.01%)</title><rect x="89.5706%" y="261" width="0.0137%" height="15" fill="rgb(232,159,9)" fg:x="2322520436447" fg:w="355407524"/><text x="89.8206%" y="271.50"></text></g><g><title>available_idle_cpu (319,988,306 samples, 0.01%)</title><rect x="89.6355%" y="261" width="0.0123%" height="15" fill="rgb(210,39,32)" fg:x="2324204753253" fg:w="319988306"/><text x="89.8855%" y="271.50"></text></g><g><title>available_idle_cpu (653,201,952 samples, 0.03%)</title><rect x="89.6531%" y="245" width="0.0252%" height="15" fill="rgb(216,194,45)" fg:x="2324661763379" fg:w="653201952"/><text x="89.9031%" y="255.50"></text></g><g><title>cpumask_next_wrap (396,088,358 samples, 0.02%)</title><rect x="89.7183%" y="229" width="0.0153%" height="15" fill="rgb(218,18,35)" fg:x="2326350359686" fg:w="396088358"/><text x="89.9683%" y="239.50"></text></g><g><title>find_next_bit (308,911,223 samples, 0.01%)</title><rect x="89.7345%" y="229" width="0.0119%" height="15" fill="rgb(207,83,51)" fg:x="2326770166295" fg:w="308911223"/><text x="89.9845%" y="239.50"></text></g><g><title>select_idle_sibling (2,613,355,286 samples, 0.10%)</title><rect x="89.6479%" y="261" width="0.1008%" height="15" fill="rgb(225,63,43)" fg:x="2324524741559" fg:w="2613355286"/><text x="89.8979%" y="271.50"></text></g><g><title>select_idle_sibling.part.0 (1,737,654,187 samples, 0.07%)</title><rect x="89.6816%" y="245" width="0.0670%" height="15" fill="rgb(207,57,36)" fg:x="2325400442658" fg:w="1737654187"/><text x="89.9316%" y="255.50"></text></g><g><title>select_task_rq_fair (4,041,219,171 samples, 0.16%)</title><rect x="89.5956%" y="277" width="0.1559%" height="15" fill="rgb(216,99,33)" fg:x="2323169121904" fg:w="4041219171"/><text x="89.8456%" y="287.50"></text></g><g><title>update_curr (283,957,610 samples, 0.01%)</title><rect x="89.8128%" y="213" width="0.0110%" height="15" fill="rgb(225,42,16)" fg:x="2328801932281" fg:w="283957610"/><text x="90.0628%" y="223.50"></text></g><g><title>update_load_avg (614,882,552 samples, 0.02%)</title><rect x="89.8238%" y="213" width="0.0237%" height="15" fill="rgb(220,201,45)" fg:x="2329085889891" fg:w="614882552"/><text x="90.0738%" y="223.50"></text></g><g><title>enqueue_entity (1,723,306,374 samples, 0.07%)</title><rect x="89.7813%" y="229" width="0.0665%" height="15" fill="rgb(225,33,4)" fg:x="2327985143639" fg:w="1723306374"/><text x="90.0313%" y="239.50"></text></g><g><title>update_cfs_group (459,329,884 samples, 0.02%)</title><rect x="89.8482%" y="229" width="0.0177%" height="15" fill="rgb(224,33,50)" fg:x="2329720617348" fg:w="459329884"/><text x="90.0982%" y="239.50"></text></g><g><title>reweight_entity (296,722,023 samples, 0.01%)</title><rect x="89.8545%" y="213" width="0.0114%" height="15" fill="rgb(246,198,51)" fg:x="2329883225209" fg:w="296722023"/><text x="90.1045%" y="223.50"></text></g><g><title>enqueue_task_fair (2,857,754,238 samples, 0.11%)</title><rect x="89.7662%" y="245" width="0.1102%" height="15" fill="rgb(205,22,4)" fg:x="2327594340082" fg:w="2857754238"/><text x="90.0162%" y="255.50"></text></g><g><title>update_load_avg (270,080,856 samples, 0.01%)</title><rect x="89.8660%" y="229" width="0.0104%" height="15" fill="rgb(206,3,8)" fg:x="2330182013464" fg:w="270080856"/><text x="90.1160%" y="239.50"></text></g><g><title>record_times (588,286,413 samples, 0.02%)</title><rect x="89.9419%" y="229" width="0.0227%" height="15" fill="rgb(251,23,15)" fg:x="2332148591224" fg:w="588286413"/><text x="90.1919%" y="239.50"></text></g><g><title>sched_clock_cpu (278,955,980 samples, 0.01%)</title><rect x="89.9538%" y="213" width="0.0108%" height="15" fill="rgb(252,88,28)" fg:x="2332457921657" fg:w="278955980"/><text x="90.2038%" y="223.50"></text></g><g><title>psi_task_change (2,279,611,820 samples, 0.09%)</title><rect x="89.8768%" y="245" width="0.0879%" height="15" fill="rgb(212,127,14)" fg:x="2330461954477" fg:w="2279611820"/><text x="90.1268%" y="255.50"></text></g><g><title>activate_task (5,296,682,877 samples, 0.20%)</title><rect x="89.7614%" y="261" width="0.2043%" height="15" fill="rgb(247,145,37)" fg:x="2327468734193" fg:w="5296682877"/><text x="90.0114%" y="271.50"></text></g><g><title>check_preempt_curr (411,817,428 samples, 0.02%)</title><rect x="89.9711%" y="245" width="0.0159%" height="15" fill="rgb(209,117,53)" fg:x="2332907585705" fg:w="411817428"/><text x="90.2211%" y="255.50"></text></g><g><title>ttwu_do_activate (5,936,113,344 samples, 0.23%)</title><rect x="89.7597%" y="277" width="0.2289%" height="15" fill="rgb(212,90,42)" fg:x="2327424236835" fg:w="5936113344"/><text x="90.0097%" y="287.50"></text></g><g><title>ttwu_do_wakeup (523,146,088 samples, 0.02%)</title><rect x="89.9684%" y="261" width="0.0202%" height="15" fill="rgb(218,164,37)" fg:x="2332837204091" fg:w="523146088"/><text x="90.2184%" y="271.50"></text></g><g><title>update_cfs_rq_h_load (647,145,341 samples, 0.02%)</title><rect x="89.9887%" y="277" width="0.0250%" height="15" fill="rgb(246,65,34)" fg:x="2333363235865" fg:w="647145341"/><text x="90.2387%" y="287.50"></text></g><g><title>try_to_wake_up (15,767,249,539 samples, 0.61%)</title><rect x="89.4178%" y="293" width="0.6081%" height="15" fill="rgb(231,100,33)" fg:x="2318558595553" fg:w="15767249539"/><text x="89.6678%" y="303.50"></text></g><g><title>update_rq_clock (315,463,886 samples, 0.01%)</title><rect x="90.0137%" y="277" width="0.0122%" height="15" fill="rgb(228,126,14)" fg:x="2334010381206" fg:w="315463886"/><text x="90.2637%" y="287.50"></text></g><g><title>futex_wake (27,746,211,959 samples, 1.07%)</title><rect x="88.9560%" y="325" width="1.0701%" height="15" fill="rgb(215,173,21)" fg:x="2306586124001" fg:w="27746211959"/><text x="89.2060%" y="335.50"></text></g><g><title>wake_up_q (16,348,760,713 samples, 0.63%)</title><rect x="89.3956%" y="309" width="0.6305%" height="15" fill="rgb(210,6,40)" fg:x="2317983575247" fg:w="16348760713"/><text x="89.6456%" y="319.50"></text></g><g><title>hash_futex (307,668,298 samples, 0.01%)</title><rect x="90.0278%" y="325" width="0.0119%" height="15" fill="rgb(212,48,18)" fg:x="2334376274915" fg:w="307668298"/><text x="90.2778%" y="335.50"></text></g><g><title>do_futex (29,117,609,652 samples, 1.12%)</title><rect x="88.9182%" y="341" width="1.1230%" height="15" fill="rgb(230,214,11)" fg:x="2305606414486" fg:w="29117609652"/><text x="89.1682%" y="351.50"></text></g><g><title>__x64_sys_futex (29,383,708,154 samples, 1.13%)</title><rect x="88.9088%" y="357" width="1.1332%" height="15" fill="rgb(254,105,39)" fg:x="2305361408745" fg:w="29383708154"/><text x="89.1588%" y="367.50"></text></g><g><title>do_syscall_64 (34,251,282,699 samples, 1.32%)</title><rect x="88.7348%" y="373" width="1.3209%" height="15" fill="rgb(245,158,5)" fg:x="2300850849202" fg:w="34251282699"/><text x="88.9848%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34,873,638,089 samples, 1.34%)</title><rect x="88.7120%" y="389" width="1.3449%" height="15" fill="rgb(249,208,11)" fg:x="2300257389704" fg:w="34873638089"/><text x="88.9620%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (43,636,688,876 samples, 1.68%)</title><rect x="88.4289%" y="453" width="1.6829%" height="15" fill="rgb(210,39,28)" fg:x="2292918217960" fg:w="43636688876"/><text x="88.6789%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43,636,688,876 samples, 1.68%)</title><rect x="88.4289%" y="437" width="1.6829%" height="15" fill="rgb(211,56,53)" fg:x="2292918217960" fg:w="43636688876"/><text x="88.6789%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (43,350,365,400 samples, 1.67%)</title><rect x="88.4400%" y="421" width="1.6719%" height="15" fill="rgb(226,201,30)" fg:x="2293204541436" fg:w="43350365400"/><text x="88.6900%" y="431.50"></text></g><g><title>syscall (37,220,304,388 samples, 1.44%)</title><rect x="88.6764%" y="405" width="1.4354%" height="15" fill="rgb(239,101,34)" fg:x="2299334602448" fg:w="37220304388"/><text x="88.9264%" y="415.50"></text></g><g><title>syscall_return_via_sysret (1,353,916,488 samples, 0.05%)</title><rect x="90.0596%" y="389" width="0.0522%" height="15" fill="rgb(226,209,5)" fg:x="2335200990348" fg:w="1353916488"/><text x="90.3096%" y="399.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_sleeping_thread (1,216,301,203 samples, 0.05%)</title><rect x="90.1118%" y="453" width="0.0469%" height="15" fill="rgb(250,105,47)" fg:x="2336554906836" fg:w="1216301203"/><text x="90.3618%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,216,301,203 samples, 0.05%)</title><rect x="90.1118%" y="437" width="0.0469%" height="15" fill="rgb(230,72,3)" fg:x="2336554906836" fg:w="1216301203"/><text x="90.3618%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,216,301,203 samples, 0.05%)</title><rect x="90.1118%" y="421" width="0.0469%" height="15" fill="rgb(232,218,39)" fg:x="2336554906836" fg:w="1216301203"/><text x="90.3618%" y="431.50"></text></g><g><title>std::sync::poison::Flag::get (746,707,609 samples, 0.03%)</title><rect x="90.1662%" y="405" width="0.0288%" height="15" fill="rgb(248,166,6)" fg:x="2337966196553" fg:w="746707609"/><text x="90.4162%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (746,707,609 samples, 0.03%)</title><rect x="90.1662%" y="389" width="0.0288%" height="15" fill="rgb(247,89,20)" fg:x="2337966196553" fg:w="746707609"/><text x="90.4162%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (746,707,609 samples, 0.03%)</title><rect x="90.1662%" y="373" width="0.0288%" height="15" fill="rgb(248,130,54)" fg:x="2337966196553" fg:w="746707609"/><text x="90.4162%" y="383.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1,116,050,594 samples, 0.04%)</title><rect x="90.1588%" y="437" width="0.0430%" height="15" fill="rgb(234,196,4)" fg:x="2337773336225" fg:w="1116050594"/><text x="90.4088%" y="447.50"></text></g><g><title>std::sync::poison::Flag::guard (1,116,050,594 samples, 0.04%)</title><rect x="90.1588%" y="421" width="0.0430%" height="15" fill="rgb(250,143,31)" fg:x="2337773336225" fg:w="1116050594"/><text x="90.4088%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (518,056,278 samples, 0.02%)</title><rect x="90.2088%" y="421" width="0.0200%" height="15" fill="rgb(211,110,34)" fg:x="2339068977413" fg:w="518056278"/><text x="90.4588%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (518,056,278 samples, 0.02%)</title><rect x="90.2088%" y="405" width="0.0200%" height="15" fill="rgb(215,124,48)" fg:x="2339068977413" fg:w="518056278"/><text x="90.4588%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (12,452,155,539 samples, 0.48%)</title><rect x="90.2287%" y="421" width="0.4802%" height="15" fill="rgb(216,46,13)" fg:x="2339587033691" fg:w="12452155539"/><text x="90.4787%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12,452,155,539 samples, 0.48%)</title><rect x="90.2287%" y="405" width="0.4802%" height="15" fill="rgb(205,184,25)" fg:x="2339587033691" fg:w="12452155539"/><text x="90.4787%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (627,947,265 samples, 0.02%)</title><rect x="90.7090%" y="405" width="0.0242%" height="15" fill="rgb(228,1,10)" fg:x="2352039189230" fg:w="627947265"/><text x="90.9590%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14,898,195,021 samples, 0.57%)</title><rect x="90.1588%" y="453" width="0.5746%" height="15" fill="rgb(213,116,27)" fg:x="2337773336225" fg:w="14898195021"/><text x="90.4088%" y="463.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (13,782,144,427 samples, 0.53%)</title><rect x="90.2018%" y="437" width="0.5315%" height="15" fill="rgb(241,95,50)" fg:x="2338889386819" fg:w="13782144427"/><text x="90.4518%" y="447.50"></text></g><g><title>syscall (632,342,016 samples, 0.02%)</title><rect x="90.7090%" y="421" width="0.0244%" height="15" fill="rgb(238,48,32)" fg:x="2352039189230" fg:w="632342016"/><text x="90.9590%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (810,475,007 samples, 0.03%)</title><rect x="90.7433%" y="437" width="0.0313%" height="15" fill="rgb(235,113,49)" fg:x="2352929686779" fg:w="810475007"/><text x="90.9933%" y="447.50"></text></g><g><title>_raw_spin_lock (285,126,721 samples, 0.01%)</title><rect x="90.9250%" y="373" width="0.0110%" height="15" fill="rgb(205,127,43)" fg:x="2357640256335" fg:w="285126721"/><text x="91.1750%" y="383.50"></text></g><g><title>__unqueue_futex (266,733,442 samples, 0.01%)</title><rect x="91.0575%" y="341" width="0.0103%" height="15" fill="rgb(250,162,2)" fg:x="2361076257702" fg:w="266733442"/><text x="91.3075%" y="351.50"></text></g><g><title>mark_wake_futex (1,411,068,323 samples, 0.05%)</title><rect x="91.0144%" y="357" width="0.0544%" height="15" fill="rgb(220,13,41)" fg:x="2359957692641" fg:w="1411068323"/><text x="91.2644%" y="367.50"></text></g><g><title>_raw_spin_lock (271,196,140 samples, 0.01%)</title><rect x="91.0877%" y="341" width="0.0105%" height="15" fill="rgb(249,221,25)" fg:x="2361859794475" fg:w="271196140"/><text x="91.3377%" y="351.50"></text></g><g><title>_raw_spin_lock (512,236,488 samples, 0.02%)</title><rect x="91.2104%" y="325" width="0.0198%" height="15" fill="rgb(215,208,19)" fg:x="2365039703692" fg:w="512236488"/><text x="91.4604%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (507,562,877 samples, 0.02%)</title><rect x="91.2105%" y="309" width="0.0196%" height="15" fill="rgb(236,175,2)" fg:x="2365044377303" fg:w="507562877"/><text x="91.4605%" y="319.50"></text></g><g><title>available_idle_cpu (408,681,765 samples, 0.02%)</title><rect x="91.3042%" y="309" width="0.0158%" height="15" fill="rgb(241,52,2)" fg:x="2367472763212" fg:w="408681765"/><text x="91.5542%" y="319.50"></text></g><g><title>available_idle_cpu (1,130,491,760 samples, 0.04%)</title><rect x="91.3278%" y="293" width="0.0436%" height="15" fill="rgb(248,140,14)" fg:x="2368086077279" fg:w="1130491760"/><text x="91.5778%" y="303.50"></text></g><g><title>cpumask_next_wrap (495,300,384 samples, 0.02%)</title><rect x="91.4326%" y="277" width="0.0191%" height="15" fill="rgb(253,22,42)" fg:x="2370801964947" fg:w="495300384"/><text x="91.6826%" y="287.50"></text></g><g><title>find_next_bit (485,485,974 samples, 0.02%)</title><rect x="91.4557%" y="277" width="0.0187%" height="15" fill="rgb(234,61,47)" fg:x="2371402416194" fg:w="485485974"/><text x="91.7057%" y="287.50"></text></g><g><title>select_idle_sibling (4,127,664,130 samples, 0.16%)</title><rect x="91.3200%" y="309" width="0.1592%" height="15" fill="rgb(208,226,15)" fg:x="2367881444977" fg:w="4127664130"/><text x="91.5700%" y="319.50"></text></g><g><title>select_idle_sibling.part.0 (2,660,452,889 samples, 0.10%)</title><rect x="91.3765%" y="293" width="0.1026%" height="15" fill="rgb(217,221,4)" fg:x="2369348656218" fg:w="2660452889"/><text x="91.6265%" y="303.50"></text></g><g><title>select_task_rq_fair (6,241,138,201 samples, 0.24%)</title><rect x="91.2454%" y="325" width="0.2407%" height="15" fill="rgb(212,174,34)" fg:x="2365948271787" fg:w="6241138201"/><text x="91.4954%" y="335.50"></text></g><g><title>migrate_task_rq_fair (327,581,175 samples, 0.01%)</title><rect x="91.4894%" y="309" width="0.0126%" height="15" fill="rgb(253,83,4)" fg:x="2372274075622" fg:w="327581175"/><text x="91.7394%" y="319.50"></text></g><g><title>set_task_cpu (414,510,252 samples, 0.02%)</title><rect x="91.4861%" y="325" width="0.0160%" height="15" fill="rgb(250,195,49)" fg:x="2372189409988" fg:w="414510252"/><text x="91.7361%" y="335.50"></text></g><g><title>update_cfs_group (302,521,679 samples, 0.01%)</title><rect x="91.5643%" y="261" width="0.0117%" height="15" fill="rgb(241,192,25)" fg:x="2374217878225" fg:w="302521679"/><text x="91.8143%" y="271.50"></text></g><g><title>update_curr (418,131,947 samples, 0.02%)</title><rect x="91.5760%" y="261" width="0.0161%" height="15" fill="rgb(208,124,10)" fg:x="2374520399904" fg:w="418131947"/><text x="91.8260%" y="271.50"></text></g><g><title>update_load_avg (1,010,086,985 samples, 0.04%)</title><rect x="91.5921%" y="261" width="0.0390%" height="15" fill="rgb(222,33,0)" fg:x="2374938531851" fg:w="1010086985"/><text x="91.8421%" y="271.50"></text></g><g><title>enqueue_entity (2,561,085,088 samples, 0.10%)</title><rect x="91.5325%" y="277" width="0.0988%" height="15" fill="rgb(234,209,28)" fg:x="2373392748815" fg:w="2561085088"/><text x="91.7825%" y="287.50"></text></g><g><title>reweight_entity (379,730,590 samples, 0.01%)</title><rect x="91.6396%" y="261" width="0.0146%" height="15" fill="rgb(224,11,23)" fg:x="2376169880982" fg:w="379730590"/><text x="91.8896%" y="271.50"></text></g><g><title>update_cfs_group (569,336,856 samples, 0.02%)</title><rect x="91.6324%" y="277" width="0.0220%" height="15" fill="rgb(232,99,1)" fg:x="2375982667557" fg:w="569336856"/><text x="91.8824%" y="287.50"></text></g><g><title>enqueue_task_fair (4,080,611,081 samples, 0.16%)</title><rect x="91.5096%" y="293" width="0.1574%" height="15" fill="rgb(237,95,45)" fg:x="2372799709982" fg:w="4080611081"/><text x="91.7596%" y="303.50"></text></g><g><title>update_load_avg (318,681,734 samples, 0.01%)</title><rect x="91.6547%" y="277" width="0.0123%" height="15" fill="rgb(208,109,11)" fg:x="2376561639329" fg:w="318681734"/><text x="91.9047%" y="287.50"></text></g><g><title>native_sched_clock (302,862,912 samples, 0.01%)</title><rect x="91.7784%" y="245" width="0.0117%" height="15" fill="rgb(216,190,48)" fg:x="2379770049727" fg:w="302862912"/><text x="92.0284%" y="255.50"></text></g><g><title>record_times (809,819,030 samples, 0.03%)</title><rect x="91.7593%" y="277" width="0.0312%" height="15" fill="rgb(251,171,36)" fg:x="2379274382558" fg:w="809819030"/><text x="92.0093%" y="287.50"></text></g><g><title>sched_clock_cpu (397,740,823 samples, 0.02%)</title><rect x="91.7752%" y="261" width="0.0153%" height="15" fill="rgb(230,62,22)" fg:x="2379686460765" fg:w="397740823"/><text x="92.0252%" y="271.50"></text></g><g><title>psi_task_change (3,206,497,600 samples, 0.12%)</title><rect x="91.6674%" y="293" width="0.1237%" height="15" fill="rgb(225,114,35)" fg:x="2376891762458" fg:w="3206497600"/><text x="91.9174%" y="303.50"></text></g><g><title>activate_task (7,499,556,262 samples, 0.29%)</title><rect x="91.5036%" y="309" width="0.2892%" height="15" fill="rgb(215,118,42)" fg:x="2372642113637" fg:w="7499556262"/><text x="91.7536%" y="319.50"></text></g><g><title>check_preempt_curr (521,886,360 samples, 0.02%)</title><rect x="91.7998%" y="293" width="0.0201%" height="15" fill="rgb(243,119,21)" fg:x="2380324484459" fg:w="521886360"/><text x="92.0498%" y="303.50"></text></g><g><title>ttwu_do_activate (8,277,724,549 samples, 0.32%)</title><rect x="91.5022%" y="325" width="0.3192%" height="15" fill="rgb(252,177,53)" fg:x="2372606357405" fg:w="8277724549"/><text x="91.7522%" y="335.50"></text></g><g><title>ttwu_do_wakeup (655,887,398 samples, 0.03%)</title><rect x="91.7961%" y="309" width="0.0253%" height="15" fill="rgb(237,209,29)" fg:x="2380228194556" fg:w="655887398"/><text x="92.0461%" y="319.50"></text></g><g><title>update_cfs_rq_h_load (1,029,645,886 samples, 0.04%)</title><rect x="91.8219%" y="325" width="0.0397%" height="15" fill="rgb(212,65,23)" fg:x="2380895460158" fg:w="1029645886"/><text x="92.0719%" y="335.50"></text></g><g><title>try_to_wake_up (19,923,967,960 samples, 0.77%)</title><rect x="91.1096%" y="341" width="0.7684%" height="15" fill="rgb(230,222,46)" fg:x="2362428225357" fg:w="19923967960"/><text x="91.3596%" y="351.50"></text></g><g><title>update_rq_clock (427,087,273 samples, 0.02%)</title><rect x="91.8616%" y="325" width="0.0165%" height="15" fill="rgb(215,135,32)" fg:x="2381925106044" fg:w="427087273"/><text x="92.1116%" y="335.50"></text></g><g><title>futex_wake (24,438,516,876 samples, 0.94%)</title><rect x="90.9366%" y="373" width="0.9425%" height="15" fill="rgb(246,101,22)" fg:x="2357940501400" fg:w="24438516876"/><text x="91.1866%" y="383.50"></text></g><g><title>wake_up_q (20,807,441,032 samples, 0.80%)</title><rect x="91.0766%" y="357" width="0.8025%" height="15" fill="rgb(206,107,13)" fg:x="2361571577244" fg:w="20807441032"/><text x="91.3266%" y="367.50"></text></g><g><title>do_futex (25,236,601,414 samples, 0.97%)</title><rect x="90.9174%" y="389" width="0.9733%" height="15" fill="rgb(250,100,44)" fg:x="2357444338035" fg:w="25236601414"/><text x="91.1674%" y="399.50"></text></g><g><title>__x64_sys_futex (25,465,761,222 samples, 0.98%)</title><rect x="90.9090%" y="405" width="0.9821%" height="15" fill="rgb(231,147,38)" fg:x="2357226382930" fg:w="25465761222"/><text x="91.1590%" y="415.50"></text></g><g><title>do_syscall_64 (28,810,586,857 samples, 1.11%)</title><rect x="90.7902%" y="421" width="1.1111%" height="15" fill="rgb(229,8,40)" fg:x="2354144911548" fg:w="28810586857"/><text x="91.0402%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29,251,387,521 samples, 1.13%)</title><rect x="90.7746%" y="437" width="1.1281%" height="15" fill="rgb(221,135,30)" fg:x="2353740161786" fg:w="29251387521"/><text x="91.0246%" y="447.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (96,485,222,003 samples, 3.72%)</title><rect x="88.2175%" y="469" width="3.7211%" height="15" fill="rgb(249,193,18)" fg:x="2287435288259" fg:w="96485222003"/><text x="88.4675%" y="479.50">rayo..</text></g><g><title>syscall (31,248,979,016 samples, 1.21%)</title><rect x="90.7334%" y="453" width="1.2052%" height="15" fill="rgb(209,133,39)" fg:x="2352671531246" fg:w="31248979016"/><text x="90.9834%" y="463.50"></text></g><g><title>syscall_return_via_sysret (908,242,383 samples, 0.04%)</title><rect x="91.9035%" y="437" width="0.0350%" height="15" fill="rgb(232,100,14)" fg:x="2383012267879" fg:w="908242383"/><text x="92.1535%" y="447.50"></text></g><g><title>reschedule_interrupt (326,150,032 samples, 0.01%)</title><rect x="91.9385%" y="469" width="0.0126%" height="15" fill="rgb(224,185,1)" fg:x="2383920510262" fg:w="326150032"/><text x="92.1885%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (262,490,082 samples, 0.01%)</title><rect x="91.9513%" y="469" width="0.0101%" height="15" fill="rgb(223,139,8)" fg:x="2384251057621" fg:w="262490082"/><text x="92.2013%" y="479.50"></text></g><g><title>ctx_sched_out (601,636,754 samples, 0.02%)</title><rect x="92.3318%" y="245" width="0.0232%" height="15" fill="rgb(232,213,38)" fg:x="2394116898423" fg:w="601636754"/><text x="92.5818%" y="255.50"></text></g><g><title>__perf_event_task_sched_out (1,102,902,677 samples, 0.04%)</title><rect x="92.3126%" y="277" width="0.0425%" height="15" fill="rgb(207,94,22)" fg:x="2393621032116" fg:w="1102902677"/><text x="92.5626%" y="287.50"></text></g><g><title>task_ctx_sched_out (607,036,370 samples, 0.02%)</title><rect x="92.3318%" y="261" width="0.0234%" height="15" fill="rgb(219,183,54)" fg:x="2394116898423" fg:w="607036370"/><text x="92.5818%" y="271.50"></text></g><g><title>_raw_spin_lock (462,322,953 samples, 0.02%)</title><rect x="92.3590%" y="277" width="0.0178%" height="15" fill="rgb(216,185,54)" fg:x="2394824076552" fg:w="462322953"/><text x="92.6090%" y="287.50"></text></g><g><title>update_cfs_group (545,063,056 samples, 0.02%)</title><rect x="92.4343%" y="229" width="0.0210%" height="15" fill="rgb(254,217,39)" fg:x="2396776605665" fg:w="545063056"/><text x="92.6843%" y="239.50"></text></g><g><title>update_curr (662,961,190 samples, 0.03%)</title><rect x="92.4553%" y="229" width="0.0256%" height="15" fill="rgb(240,178,23)" fg:x="2397321668721" fg:w="662961190"/><text x="92.7053%" y="239.50"></text></g><g><title>__update_load_avg_cfs_rq (485,449,558 samples, 0.02%)</title><rect x="92.5038%" y="213" width="0.0187%" height="15" fill="rgb(218,11,47)" fg:x="2398577117187" fg:w="485449558"/><text x="92.7538%" y="223.50"></text></g><g><title>__update_load_avg_se (367,996,632 samples, 0.01%)</title><rect x="92.5225%" y="213" width="0.0142%" height="15" fill="rgb(218,51,51)" fg:x="2399062566745" fg:w="367996632"/><text x="92.7725%" y="223.50"></text></g><g><title>update_load_avg (1,574,824,729 samples, 0.06%)</title><rect x="92.4809%" y="229" width="0.0607%" height="15" fill="rgb(238,126,27)" fg:x="2397984629911" fg:w="1574824729"/><text x="92.7309%" y="239.50"></text></g><g><title>dequeue_entity (3,580,359,047 samples, 0.14%)</title><rect x="92.4082%" y="245" width="0.1381%" height="15" fill="rgb(249,202,22)" fg:x="2396099373590" fg:w="3580359047"/><text x="92.6582%" y="255.50"></text></g><g><title>reweight_entity (442,913,422 samples, 0.02%)</title><rect x="92.5600%" y="229" width="0.0171%" height="15" fill="rgb(254,195,49)" fg:x="2400034732123" fg:w="442913422"/><text x="92.8100%" y="239.50"></text></g><g><title>update_cfs_group (761,601,546 samples, 0.03%)</title><rect x="92.5480%" y="245" width="0.0294%" height="15" fill="rgb(208,123,14)" fg:x="2399724264647" fg:w="761601546"/><text x="92.7980%" y="255.50"></text></g><g><title>update_load_avg (517,762,058 samples, 0.02%)</title><rect x="92.5781%" y="245" width="0.0200%" height="15" fill="rgb(224,200,8)" fg:x="2400504039354" fg:w="517762058"/><text x="92.8281%" y="255.50"></text></g><g><title>dequeue_task_fair (5,448,683,804 samples, 0.21%)</title><rect x="92.3892%" y="261" width="0.2101%" height="15" fill="rgb(217,61,36)" fg:x="2395606509524" fg:w="5448683804"/><text x="92.6392%" y="271.50"></text></g><g><title>native_sched_clock (420,690,624 samples, 0.02%)</title><rect x="92.7340%" y="213" width="0.0162%" height="15" fill="rgb(206,35,45)" fg:x="2404546898906" fg:w="420690624"/><text x="92.9840%" y="223.50"></text></g><g><title>record_times (1,044,660,868 samples, 0.04%)</title><rect x="92.7110%" y="245" width="0.0403%" height="15" fill="rgb(217,65,33)" fg:x="2403949528450" fg:w="1044660868"/><text x="92.9610%" y="255.50"></text></g><g><title>sched_clock_cpu (587,436,402 samples, 0.02%)</title><rect x="92.7286%" y="229" width="0.0227%" height="15" fill="rgb(222,158,48)" fg:x="2404406752916" fg:w="587436402"/><text x="92.9786%" y="239.50"></text></g><g><title>psi_task_change (3,968,743,837 samples, 0.15%)</title><rect x="92.6001%" y="261" width="0.1531%" height="15" fill="rgb(254,2,54)" fg:x="2401074921031" fg:w="3968743837"/><text x="92.8501%" y="271.50"></text></g><g><title>deactivate_task (9,870,569,746 samples, 0.38%)</title><rect x="92.3773%" y="277" width="0.3807%" height="15" fill="rgb(250,143,38)" fg:x="2395297882234" fg:w="9870569746"/><text x="92.6273%" y="287.50"></text></g><g><title>perf_pmu_enable.part.0 (681,246,248 samples, 0.03%)</title><rect x="92.7967%" y="245" width="0.0263%" height="15" fill="rgb(248,25,0)" fg:x="2406172254249" fg:w="681246248"/><text x="93.0467%" y="255.50"></text></g><g><title>x86_pmu_enable (650,912,518 samples, 0.03%)</title><rect x="92.7978%" y="229" width="0.0251%" height="15" fill="rgb(206,152,27)" fg:x="2406202587979" fg:w="650912518"/><text x="93.0478%" y="239.50"></text></g><g><title>intel_pmu_enable_all (622,123,218 samples, 0.02%)</title><rect x="92.7990%" y="213" width="0.0240%" height="15" fill="rgb(240,77,30)" fg:x="2406231377279" fg:w="622123218"/><text x="93.0490%" y="223.50"></text></g><g><title>native_write_msr (569,861,902 samples, 0.02%)</title><rect x="92.8010%" y="197" width="0.0220%" height="15" fill="rgb(231,5,3)" fg:x="2406283638595" fg:w="569861902"/><text x="93.0510%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (917,465,068 samples, 0.04%)</title><rect x="92.7877%" y="261" width="0.0354%" height="15" fill="rgb(207,226,32)" fg:x="2405938439570" fg:w="917465068"/><text x="93.0377%" y="271.50"></text></g><g><title>finish_task_switch (1,780,491,680 samples, 0.07%)</title><rect x="92.7613%" y="277" width="0.0687%" height="15" fill="rgb(222,207,47)" fg:x="2405255451605" fg:w="1780491680"/><text x="93.0113%" y="287.50"></text></g><g><title>find_busiest_group (429,357,649 samples, 0.02%)</title><rect x="92.8671%" y="229" width="0.0166%" height="15" fill="rgb(229,115,45)" fg:x="2407997938879" fg:w="429357649"/><text x="93.1171%" y="239.50"></text></g><g><title>update_sd_lb_stats (308,092,714 samples, 0.01%)</title><rect x="92.8718%" y="213" width="0.0119%" height="15" fill="rgb(224,191,6)" fg:x="2408119203814" fg:w="308092714"/><text x="93.1218%" y="223.50"></text></g><g><title>load_balance (590,740,506 samples, 0.02%)</title><rect x="92.8615%" y="245" width="0.0228%" height="15" fill="rgb(230,227,24)" fg:x="2407853664087" fg:w="590740506"/><text x="93.1115%" y="255.50"></text></g><g><title>newidle_balance (1,021,880,771 samples, 0.04%)</title><rect x="92.8468%" y="261" width="0.0394%" height="15" fill="rgb(228,80,19)" fg:x="2407472166457" fg:w="1021880771"/><text x="93.0968%" y="271.50"></text></g><g><title>set_next_entity (338,420,148 samples, 0.01%)</title><rect x="92.8976%" y="261" width="0.0131%" height="15" fill="rgb(247,229,0)" fg:x="2408790282991" fg:w="338420148"/><text x="93.1476%" y="271.50"></text></g><g><title>update_load_avg (264,815,342 samples, 0.01%)</title><rect x="92.9005%" y="245" width="0.0102%" height="15" fill="rgb(237,194,15)" fg:x="2408863887797" fg:w="264815342"/><text x="93.1505%" y="255.50"></text></g><g><title>pick_next_task_fair (2,101,050,974 samples, 0.08%)</title><rect x="92.8322%" y="277" width="0.0810%" height="15" fill="rgb(219,203,20)" fg:x="2407093649592" fg:w="2101050974"/><text x="93.0822%" y="287.50"></text></g><g><title>__update_idle_core (460,028,373 samples, 0.02%)</title><rect x="92.9275%" y="245" width="0.0177%" height="15" fill="rgb(234,128,8)" fg:x="2409563667551" fg:w="460028373"/><text x="93.1775%" y="255.50"></text></g><g><title>pick_next_task_idle (882,199,936 samples, 0.03%)</title><rect x="92.9132%" y="277" width="0.0340%" height="15" fill="rgb(248,202,8)" fg:x="2409194700566" fg:w="882199936"/><text x="93.1632%" y="287.50"></text></g><g><title>set_next_task_idle (535,575,611 samples, 0.02%)</title><rect x="92.9266%" y="261" width="0.0207%" height="15" fill="rgb(206,104,37)" fg:x="2409541324891" fg:w="535575611"/><text x="93.1766%" y="271.50"></text></g><g><title>__sched_text_start (17,875,779,701 samples, 0.69%)</title><rect x="92.2805%" y="293" width="0.6894%" height="15" fill="rgb(223,8,27)" fg:x="2392787561972" fg:w="17875779701"/><text x="92.5305%" y="303.50"></text></g><g><title>update_rq_clock (261,992,815 samples, 0.01%)</title><rect x="92.9598%" y="277" width="0.0101%" height="15" fill="rgb(216,217,28)" fg:x="2410401348858" fg:w="261992815"/><text x="93.2098%" y="287.50"></text></g><g><title>futex_wait_queue_me (19,040,079,256 samples, 0.73%)</title><rect x="92.2491%" y="325" width="0.7343%" height="15" fill="rgb(249,199,1)" fg:x="2391974340155" fg:w="19040079256"/><text x="92.4991%" y="335.50"></text></g><g><title>schedule (18,417,686,925 samples, 0.71%)</title><rect x="92.2731%" y="309" width="0.7103%" height="15" fill="rgb(240,85,17)" fg:x="2392596732486" fg:w="18417686925"/><text x="92.5231%" y="319.50"></text></g><g><title>get_futex_key (342,932,076 samples, 0.01%)</title><rect x="93.0206%" y="309" width="0.0132%" height="15" fill="rgb(206,108,45)" fg:x="2411979358299" fg:w="342932076"/><text x="93.2706%" y="319.50"></text></g><g><title>futex_wait_setup (1,615,071,784 samples, 0.06%)</title><rect x="92.9834%" y="325" width="0.0623%" height="15" fill="rgb(245,210,41)" fg:x="2411014419411" fg:w="1615071784"/><text x="93.2334%" y="335.50"></text></g><g><title>get_futex_value_locked (277,667,490 samples, 0.01%)</title><rect x="93.0350%" y="309" width="0.0107%" height="15" fill="rgb(206,13,37)" fg:x="2412351823705" fg:w="277667490"/><text x="93.2850%" y="319.50"></text></g><g><title>hash_futex (259,322,630 samples, 0.01%)</title><rect x="93.0497%" y="325" width="0.0100%" height="15" fill="rgb(250,61,18)" fg:x="2412733268722" fg:w="259322630"/><text x="93.2997%" y="335.50"></text></g><g><title>futex_wait (22,426,066,886 samples, 0.86%)</title><rect x="92.2004%" y="341" width="0.8649%" height="15" fill="rgb(235,172,48)" fg:x="2390711692177" fg:w="22426066886"/><text x="92.4504%" y="351.50"></text></g><g><title>do_futex (22,968,648,567 samples, 0.89%)</title><rect x="92.1821%" y="357" width="0.8858%" height="15" fill="rgb(249,201,17)" fg:x="2390235752339" fg:w="22968648567"/><text x="92.4321%" y="367.50"></text></g><g><title>__x64_sys_futex (23,464,633,017 samples, 0.90%)</title><rect x="92.1654%" y="373" width="0.9049%" height="15" fill="rgb(219,208,6)" fg:x="2389804144868" fg:w="23464633017"/><text x="92.4154%" y="383.50"></text></g><g><title>do_syscall_64 (27,597,162,420 samples, 1.06%)</title><rect x="92.0363%" y="389" width="1.0643%" height="15" fill="rgb(248,31,23)" fg:x="2386456026859" fg:w="27597162420"/><text x="92.2863%" y="399.50"></text></g><g><title>switch_fpu_return (697,287,161 samples, 0.03%)</title><rect x="93.0737%" y="373" width="0.0269%" height="15" fill="rgb(245,15,42)" fg:x="2413355902118" fg:w="697287161"/><text x="93.3237%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28,236,781,820 samples, 1.09%)</title><rect x="92.0149%" y="405" width="1.0890%" height="15" fill="rgb(222,217,39)" fg:x="2385901087072" fg:w="28236781820"/><text x="92.2649%" y="415.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (30,606,611,019 samples, 1.18%)</title><rect x="91.9673%" y="437" width="1.1804%" height="15" fill="rgb(210,219,27)" fg:x="2384667993645" fg:w="30606611019"/><text x="92.2173%" y="447.50"></text></g><g><title>syscall (30,300,732,194 samples, 1.17%)</title><rect x="91.9791%" y="421" width="1.1686%" height="15" fill="rgb(252,166,36)" fg:x="2384973872470" fg:w="30300732194"/><text x="92.2291%" y="431.50"></text></g><g><title>syscall_return_via_sysret (853,795,458 samples, 0.03%)</title><rect x="93.1148%" y="405" width="0.0329%" height="15" fill="rgb(245,132,34)" fg:x="2414420809206" fg:w="853795458"/><text x="93.3648%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,344,509,605 samples, 0.05%)</title><rect x="93.1498%" y="421" width="0.0519%" height="15" fill="rgb(236,54,3)" fg:x="2415329733789" fg:w="1344509605"/><text x="93.3998%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,344,509,605 samples, 0.05%)</title><rect x="93.1498%" y="405" width="0.0519%" height="15" fill="rgb(241,173,43)" fg:x="2415329733789" fg:w="1344509605"/><text x="93.3998%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1,453,829,853 samples, 0.06%)</title><rect x="93.1477%" y="437" width="0.0561%" height="15" fill="rgb(215,190,9)" fg:x="2415274604664" fg:w="1453829853"/><text x="93.3977%" y="447.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (32,350,126,997 samples, 1.25%)</title><rect x="91.9621%" y="469" width="1.2476%" height="15" fill="rgb(242,101,16)" fg:x="2384531972298" fg:w="32350126997"/><text x="92.2121%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (32,280,910,153 samples, 1.24%)</title><rect x="91.9648%" y="453" width="1.2449%" height="15" fill="rgb(223,190,21)" fg:x="2384601189142" fg:w="32280910153"/><text x="92.2148%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,971,913,287 samples, 0.08%)</title><rect x="93.2328%" y="453" width="0.0760%" height="15" fill="rgb(215,228,25)" fg:x="2417480880650" fg:w="1971913287"/><text x="93.4828%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,971,913,287 samples, 0.08%)</title><rect x="93.2328%" y="437" width="0.0760%" height="15" fill="rgb(225,36,22)" fg:x="2417480880650" fg:w="1971913287"/><text x="93.4828%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1,906,153,422 samples, 0.07%)</title><rect x="93.3089%" y="453" width="0.0735%" height="15" fill="rgb(251,106,46)" fg:x="2419452793937" fg:w="1906153422"/><text x="93.5589%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (1,906,153,422 samples, 0.07%)</title><rect x="93.3089%" y="437" width="0.0735%" height="15" fill="rgb(208,90,1)" fg:x="2419452793937" fg:w="1906153422"/><text x="93.5589%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (536,720,836 samples, 0.02%)</title><rect x="93.3967%" y="373" width="0.0207%" height="15" fill="rgb(243,10,4)" fg:x="2421729405930" fg:w="536720836"/><text x="93.6467%" y="383.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (789,993,015 samples, 0.03%)</title><rect x="93.3870%" y="437" width="0.0305%" height="15" fill="rgb(212,137,27)" fg:x="2421479159925" fg:w="789993015"/><text x="93.6370%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (674,566,402 samples, 0.03%)</title><rect x="93.3915%" y="421" width="0.0260%" height="15" fill="rgb(231,220,49)" fg:x="2421594586538" fg:w="674566402"/><text x="93.6415%" y="431.50"></text></g><g><title>std::sys::pal::unix::os::errno (674,566,402 samples, 0.03%)</title><rect x="93.3915%" y="405" width="0.0260%" height="15" fill="rgb(237,96,20)" fg:x="2421594586538" fg:w="674566402"/><text x="93.6415%" y="415.50"></text></g><g><title>syscall (539,747,010 samples, 0.02%)</title><rect x="93.3967%" y="389" width="0.0208%" height="15" fill="rgb(239,229,30)" fg:x="2421729405930" fg:w="539747010"/><text x="93.6467%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (560,945,583 samples, 0.02%)</title><rect x="93.4209%" y="437" width="0.0216%" height="15" fill="rgb(219,65,33)" fg:x="2422356774005" fg:w="560945583"/><text x="93.6709%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (560,945,583 samples, 0.02%)</title><rect x="93.4209%" y="421" width="0.0216%" height="15" fill="rgb(243,134,7)" fg:x="2422356774005" fg:w="560945583"/><text x="93.6709%" y="431.50"></text></g><g><title>__switch_to (276,094,223 samples, 0.01%)</title><rect x="93.4676%" y="421" width="0.0106%" height="15" fill="rgb(216,177,54)" fg:x="2423569918261" fg:w="276094223"/><text x="93.7176%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (1,173,780,026 samples, 0.05%)</title><rect x="93.4902%" y="421" width="0.0453%" height="15" fill="rgb(211,160,20)" fg:x="2424155873724" fg:w="1173780026"/><text x="93.7402%" y="431.50"></text></g><g><title>_raw_spin_lock (1,196,359,284 samples, 0.05%)</title><rect x="93.8542%" y="341" width="0.0461%" height="15" fill="rgb(239,85,39)" fg:x="2433592406337" fg:w="1196359284"/><text x="94.1042%" y="351.50"></text></g><g><title>ctx_sched_out (378,298,977 samples, 0.01%)</title><rect x="93.9771%" y="261" width="0.0146%" height="15" fill="rgb(232,125,22)" fg:x="2436778842087" fg:w="378298977"/><text x="94.2271%" y="271.50"></text></g><g><title>__perf_event_task_sched_out (681,190,314 samples, 0.03%)</title><rect x="93.9657%" y="293" width="0.0263%" height="15" fill="rgb(244,57,34)" fg:x="2436483179403" fg:w="681190314"/><text x="94.2157%" y="303.50"></text></g><g><title>task_ctx_sched_out (385,527,630 samples, 0.01%)</title><rect x="93.9771%" y="277" width="0.0149%" height="15" fill="rgb(214,203,32)" fg:x="2436778842087" fg:w="385527630"/><text x="94.2271%" y="287.50"></text></g><g><title>_raw_spin_lock (469,073,825 samples, 0.02%)</title><rect x="93.9964%" y="293" width="0.0181%" height="15" fill="rgb(207,58,43)" fg:x="2437280292574" fg:w="469073825"/><text x="94.2464%" y="303.50"></text></g><g><title>update_cfs_group (425,916,554 samples, 0.02%)</title><rect x="94.0704%" y="245" width="0.0164%" height="15" fill="rgb(215,193,15)" fg:x="2439200492467" fg:w="425916554"/><text x="94.3204%" y="255.50"></text></g><g><title>update_curr (847,933,832 samples, 0.03%)</title><rect x="94.0869%" y="245" width="0.0327%" height="15" fill="rgb(232,15,44)" fg:x="2439626409021" fg:w="847933832"/><text x="94.3369%" y="255.50"></text></g><g><title>__update_load_avg_cfs_rq (353,805,364 samples, 0.01%)</title><rect x="94.1337%" y="229" width="0.0136%" height="15" fill="rgb(212,3,48)" fg:x="2440840619534" fg:w="353805364"/><text x="94.3837%" y="239.50"></text></g><g><title>__update_load_avg_se (469,673,694 samples, 0.02%)</title><rect x="94.1473%" y="229" width="0.0181%" height="15" fill="rgb(218,128,7)" fg:x="2441194424898" fg:w="469673694"/><text x="94.3973%" y="239.50"></text></g><g><title>update_load_avg (1,278,416,859 samples, 0.05%)</title><rect x="94.1196%" y="245" width="0.0493%" height="15" fill="rgb(226,216,39)" fg:x="2440474342853" fg:w="1278416859"/><text x="94.3696%" y="255.50"></text></g><g><title>dequeue_entity (3,338,881,033 samples, 0.13%)</title><rect x="94.0453%" y="261" width="0.1288%" height="15" fill="rgb(243,47,51)" fg:x="2438549358760" fg:w="3338881033"/><text x="94.2953%" y="271.50"></text></g><g><title>reweight_entity (351,736,264 samples, 0.01%)</title><rect x="94.1874%" y="245" width="0.0136%" height="15" fill="rgb(241,183,40)" fg:x="2442231981973" fg:w="351736264"/><text x="94.4374%" y="255.50"></text></g><g><title>update_cfs_group (681,364,184 samples, 0.03%)</title><rect x="94.1749%" y="261" width="0.0263%" height="15" fill="rgb(231,217,32)" fg:x="2441909771952" fg:w="681364184"/><text x="94.4249%" y="271.50"></text></g><g><title>update_load_avg (403,669,198 samples, 0.02%)</title><rect x="94.2020%" y="261" width="0.0156%" height="15" fill="rgb(229,61,38)" fg:x="2442611801955" fg:w="403669198"/><text x="94.4520%" y="271.50"></text></g><g><title>dequeue_task_fair (4,982,541,250 samples, 0.19%)</title><rect x="94.0271%" y="277" width="0.1922%" height="15" fill="rgb(225,210,5)" fg:x="2438077743977" fg:w="4982541250"/><text x="94.2771%" y="287.50"></text></g><g><title>native_sched_clock (368,765,678 samples, 0.01%)</title><rect x="94.3363%" y="229" width="0.0142%" height="15" fill="rgb(231,79,45)" fg:x="2446093732605" fg:w="368765678"/><text x="94.5863%" y="239.50"></text></g><g><title>record_times (1,005,904,318 samples, 0.04%)</title><rect x="94.3121%" y="261" width="0.0388%" height="15" fill="rgb(224,100,7)" fg:x="2445465512768" fg:w="1005904318"/><text x="94.5621%" y="271.50"></text></g><g><title>sched_clock_cpu (493,193,328 samples, 0.02%)</title><rect x="94.3318%" y="245" width="0.0190%" height="15" fill="rgb(241,198,18)" fg:x="2445978223758" fg:w="493193328"/><text x="94.5818%" y="255.50"></text></g><g><title>psi_task_change (3,440,276,878 samples, 0.13%)</title><rect x="94.2200%" y="277" width="0.1327%" height="15" fill="rgb(252,97,53)" fg:x="2443077579206" fg:w="3440276878"/><text x="94.4700%" y="287.50"></text></g><g><title>deactivate_task (8,875,779,401 samples, 0.34%)</title><rect x="94.0150%" y="293" width="0.3423%" height="15" fill="rgb(220,88,7)" fg:x="2437763560779" fg:w="8875779401"/><text x="94.2650%" y="303.50"></text></g><g><title>perf_pmu_enable.part.0 (508,240,432 samples, 0.02%)</title><rect x="94.3896%" y="261" width="0.0196%" height="15" fill="rgb(213,176,14)" fg:x="2447475734645" fg:w="508240432"/><text x="94.6396%" y="271.50"></text></g><g><title>x86_pmu_enable (494,983,549 samples, 0.02%)</title><rect x="94.3901%" y="245" width="0.0191%" height="15" fill="rgb(246,73,7)" fg:x="2447488991528" fg:w="494983549"/><text x="94.6401%" y="255.50"></text></g><g><title>intel_pmu_enable_all (472,123,317 samples, 0.02%)</title><rect x="94.3910%" y="229" width="0.0182%" height="15" fill="rgb(245,64,36)" fg:x="2447511851760" fg:w="472123317"/><text x="94.6410%" y="239.50"></text></g><g><title>native_write_msr (426,717,757 samples, 0.02%)</title><rect x="94.3927%" y="213" width="0.0165%" height="15" fill="rgb(245,80,10)" fg:x="2447557257320" fg:w="426717757"/><text x="94.6427%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (729,393,962 samples, 0.03%)</title><rect x="94.3811%" y="277" width="0.0281%" height="15" fill="rgb(232,107,50)" fg:x="2447256609975" fg:w="729393962"/><text x="94.6311%" y="287.50"></text></g><g><title>finish_task_switch (1,448,071,242 samples, 0.06%)</title><rect x="94.3593%" y="293" width="0.0558%" height="15" fill="rgb(253,3,0)" fg:x="2446690307403" fg:w="1448071242"/><text x="94.6093%" y="303.50"></text></g><g><title>find_busiest_group (389,332,429 samples, 0.02%)</title><rect x="94.4436%" y="245" width="0.0150%" height="15" fill="rgb(212,99,53)" fg:x="2448876031473" fg:w="389332429"/><text x="94.6936%" y="255.50"></text></g><g><title>update_sd_lb_stats (274,830,991 samples, 0.01%)</title><rect x="94.4480%" y="229" width="0.0106%" height="15" fill="rgb(249,111,54)" fg:x="2448990532911" fg:w="274830991"/><text x="94.6980%" y="239.50"></text></g><g><title>load_balance (551,838,284 samples, 0.02%)</title><rect x="94.4383%" y="261" width="0.0213%" height="15" fill="rgb(249,55,30)" fg:x="2448738116425" fg:w="551838284"/><text x="94.6883%" y="271.50"></text></g><g><title>newidle_balance (873,076,612 samples, 0.03%)</title><rect x="94.4280%" y="277" width="0.0337%" height="15" fill="rgb(237,47,42)" fg:x="2448471143366" fg:w="873076612"/><text x="94.6780%" y="287.50"></text></g><g><title>set_next_entity (279,984,437 samples, 0.01%)</title><rect x="94.4710%" y="277" width="0.0108%" height="15" fill="rgb(211,20,18)" fg:x="2449585301305" fg:w="279984437"/><text x="94.7210%" y="287.50"></text></g><g><title>pick_next_task_fair (1,769,982,106 samples, 0.07%)</title><rect x="94.4161%" y="293" width="0.0683%" height="15" fill="rgb(231,203,46)" fg:x="2448163545993" fg:w="1769982106"/><text x="94.6661%" y="303.50"></text></g><g><title>pick_next_task_idle (581,325,956 samples, 0.02%)</title><rect x="94.4844%" y="293" width="0.0224%" height="15" fill="rgb(237,142,3)" fg:x="2449933528099" fg:w="581325956"/><text x="94.7344%" y="303.50"></text></g><g><title>set_next_task_idle (296,344,393 samples, 0.01%)</title><rect x="94.4954%" y="277" width="0.0114%" height="15" fill="rgb(241,107,1)" fg:x="2450218509662" fg:w="296344393"/><text x="94.7454%" y="287.50"></text></g><g><title>rcu_note_context_switch (498,762,990 samples, 0.02%)</title><rect x="94.5101%" y="293" width="0.0192%" height="15" fill="rgb(229,83,13)" fg:x="2450601124417" fg:w="498762990"/><text x="94.7601%" y="303.50"></text></g><g><title>__sched_text_start (15,880,172,650 samples, 0.61%)</title><rect x="93.9344%" y="309" width="0.6124%" height="15" fill="rgb(241,91,40)" fg:x="2435673596537" fg:w="15880172650"/><text x="94.1844%" y="319.50"></text></g><g><title>_raw_spin_lock (561,270,930 samples, 0.02%)</title><rect x="94.5489%" y="309" width="0.0216%" height="15" fill="rgb(225,3,45)" fg:x="2451607130462" fg:w="561270930"/><text x="94.7989%" y="319.50"></text></g><g><title>futex_wait_queue_me (17,528,217,223 samples, 0.68%)</title><rect x="93.9013%" y="341" width="0.6760%" height="15" fill="rgb(244,223,14)" fg:x="2434814608183" fg:w="17528217223"/><text x="94.1513%" y="351.50"></text></g><g><title>schedule (16,787,231,175 samples, 0.65%)</title><rect x="93.9299%" y="325" width="0.6474%" height="15" fill="rgb(224,124,37)" fg:x="2435555594231" fg:w="16787231175"/><text x="94.1799%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (110,438,558,091 samples, 4.26%)</title><rect x="94.7810%" y="309" width="4.2592%" height="15" fill="rgb(251,171,30)" fg:x="2457623934401" fg:w="110438558091"/><text x="95.0310%" y="319.50">nativ..</text></g><g><title>_raw_spin_lock (110,492,984,955 samples, 4.26%)</title><rect x="94.7799%" y="325" width="4.2613%" height="15" fill="rgb(236,46,54)" fg:x="2457596255632" fg:w="110492984955"/><text x="95.0299%" y="335.50">_raw_..</text></g><g><title>get_futex_key (503,478,703 samples, 0.02%)</title><rect x="99.0418%" y="325" width="0.0194%" height="15" fill="rgb(245,213,5)" fg:x="2568105346479" fg:w="503478703"/><text x="99.2918%" y="335.50"></text></g><g><title>get_futex_value_locked (1,858,343,675 samples, 0.07%)</title><rect x="99.0627%" y="325" width="0.0717%" height="15" fill="rgb(230,144,27)" fg:x="2568647413186" fg:w="1858343675"/><text x="99.3127%" y="335.50"></text></g><g><title>futex_wait_setup (118,287,670,440 samples, 4.56%)</title><rect x="94.5773%" y="341" width="4.5619%" height="15" fill="rgb(220,86,6)" fg:x="2452342825406" fg:w="118287670440"/><text x="94.8273%" y="351.50">futex..</text></g><g><title>hash_futex (415,211,563 samples, 0.02%)</title><rect x="99.1450%" y="341" width="0.0160%" height="15" fill="rgb(240,20,13)" fg:x="2570780907960" fg:w="415211563"/><text x="99.3950%" y="351.50"></text></g><g><title>plist_add (833,892,762 samples, 0.03%)</title><rect x="99.1610%" y="341" width="0.0322%" height="15" fill="rgb(217,89,34)" fg:x="2571196119523" fg:w="833892762"/><text x="99.4110%" y="351.50"></text></g><g><title>futex_wait (139,463,970,723 samples, 5.38%)</title><rect x="93.8154%" y="357" width="5.3786%" height="15" fill="rgb(229,13,5)" fg:x="2432588410093" fg:w="139463970723"/><text x="94.0654%" y="367.50">futex_w..</text></g><g><title>do_futex (140,023,162,765 samples, 5.40%)</title><rect x="93.7970%" y="373" width="5.4001%" height="15" fill="rgb(244,67,35)" fg:x="2432111083520" fg:w="140023162765"/><text x="94.0470%" y="383.50">do_futex</text></g><g><title>__x64_sys_futex (140,550,272,194 samples, 5.42%)</title><rect x="93.7792%" y="389" width="5.4205%" height="15" fill="rgb(221,40,2)" fg:x="2431649573612" fg:w="140550272194"/><text x="94.0292%" y="399.50">__x64_s..</text></g><g><title>do_syscall_64 (146,800,223,808 samples, 5.66%)</title><rect x="93.5686%" y="405" width="5.6615%" height="15" fill="rgb(237,157,21)" fg:x="2426186871956" fg:w="146800223808"/><text x="93.8186%" y="415.50">do_sysc..</text></g><g><title>switch_fpu_return (500,706,276 samples, 0.02%)</title><rect x="99.2108%" y="389" width="0.0193%" height="15" fill="rgb(222,94,11)" fg:x="2572486389488" fg:w="500706276"/><text x="99.4608%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (147,739,760,390 samples, 5.70%)</title><rect x="93.5355%" y="421" width="5.6977%" height="15" fill="rgb(249,113,6)" fg:x="2425329653750" fg:w="147739760390"/><text x="93.7855%" y="431.50">entry_S..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (153,607,207,649 samples, 5.92%)</title><rect x="93.3829%" y="453" width="5.9240%" height="15" fill="rgb(238,137,36)" fg:x="2421373283445" fg:w="153607207649"/><text x="93.6329%" y="463.50">std::sys..</text></g><g><title>syscall (152,060,425,171 samples, 5.86%)</title><rect x="93.4426%" y="437" width="5.8644%" height="15" fill="rgb(210,102,26)" fg:x="2422920065923" fg:w="152060425171"/><text x="93.6926%" y="447.50">syscall</text></g><g><title>syscall_return_via_sysret (1,691,561,200 samples, 0.07%)</title><rect x="99.2417%" y="421" width="0.0652%" height="15" fill="rgb(218,30,30)" fg:x="2573288929894" fg:w="1691561200"/><text x="99.4917%" y="431.50"></text></g><g><title>core::hint::spin_loop (2,177,171,203 samples, 0.08%)</title><rect x="99.3430%" y="437" width="0.0840%" height="15" fill="rgb(214,67,26)" fg:x="2575914315693" fg:w="2177171203"/><text x="99.5930%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2,177,171,203 samples, 0.08%)</title><rect x="99.3430%" y="421" width="0.0840%" height="15" fill="rgb(251,9,53)" fg:x="2575914315693" fg:w="2177171203"/><text x="99.5930%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (9,609,301,542 samples, 0.37%)</title><rect x="99.4269%" y="437" width="0.3706%" height="15" fill="rgb(228,204,25)" fg:x="2578091486896" fg:w="9609301542"/><text x="99.6769%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (9,609,301,542 samples, 0.37%)</title><rect x="99.4269%" y="421" width="0.3706%" height="15" fill="rgb(207,153,8)" fg:x="2578091486896" fg:w="9609301542"/><text x="99.6769%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (12,802,228,415 samples, 0.49%)</title><rect x="99.3070%" y="453" width="0.4937%" height="15" fill="rgb(242,9,16)" fg:x="2574980491094" fg:w="12802228415"/><text x="99.5570%" y="463.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (170,903,644,559 samples, 6.59%)</title><rect x="93.2097%" y="469" width="6.5911%" height="15" fill="rgb(217,211,10)" fg:x="2416882099295" fg:w="170903644559"/><text x="93.4597%" y="479.50">std::sys:..</text></g><g><title>std::thread::yield_now (889,274,704 samples, 0.03%)</title><rect x="99.8043%" y="469" width="0.0343%" height="15" fill="rgb(219,228,52)" fg:x="2587875362688" fg:w="889274704"/><text x="100.0543%" y="479.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (674,631,066 samples, 0.03%)</title><rect x="99.8125%" y="453" width="0.0260%" height="15" fill="rgb(231,92,29)" fg:x="2588090006326" fg:w="674631066"/><text x="100.0625%" y="463.50"></text></g><g><title>change_pte_range (1,027,153,975 samples, 0.04%)</title><rect x="99.8400%" y="341" width="0.0396%" height="15" fill="rgb(232,8,23)" fg:x="2588801113444" fg:w="1027153975"/><text x="100.0900%" y="351.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1,117,855,855 samples, 0.04%)</title><rect x="99.8386%" y="469" width="0.0431%" height="15" fill="rgb(216,211,34)" fg:x="2588764637392" fg:w="1117855855"/><text x="100.0886%" y="479.50"></text></g><g><title>prepare_exit_to_usermode (1,086,670,748 samples, 0.04%)</title><rect x="99.8398%" y="453" width="0.0419%" height="15" fill="rgb(236,151,0)" fg:x="2588795822499" fg:w="1086670748"/><text x="100.0898%" y="463.50"></text></g><g><title>exit_to_usermode_loop (1,086,670,748 samples, 0.04%)</title><rect x="99.8398%" y="437" width="0.0419%" height="15" fill="rgb(209,168,3)" fg:x="2588795822499" fg:w="1086670748"/><text x="100.0898%" y="447.50"></text></g><g><title>task_work_run (1,086,670,748 samples, 0.04%)</title><rect x="99.8398%" y="421" width="0.0419%" height="15" fill="rgb(208,129,28)" fg:x="2588795822499" fg:w="1086670748"/><text x="100.0898%" y="431.50"></text></g><g><title>task_numa_work (1,086,670,748 samples, 0.04%)</title><rect x="99.8398%" y="405" width="0.0419%" height="15" fill="rgb(229,78,22)" fg:x="2588795822499" fg:w="1086670748"/><text x="100.0898%" y="415.50"></text></g><g><title>change_prot_numa (1,086,670,748 samples, 0.04%)</title><rect x="99.8398%" y="389" width="0.0419%" height="15" fill="rgb(228,187,13)" fg:x="2588795822499" fg:w="1086670748"/><text x="100.0898%" y="399.50"></text></g><g><title>change_protection (1,086,670,748 samples, 0.04%)</title><rect x="99.8398%" y="373" width="0.0419%" height="15" fill="rgb(240,119,24)" fg:x="2588795822499" fg:w="1086670748"/><text x="100.0898%" y="383.50"></text></g><g><title>change_protection_range (1,086,670,748 samples, 0.04%)</title><rect x="99.8398%" y="357" width="0.0419%" height="15" fill="rgb(209,194,42)" fg:x="2588795822499" fg:w="1086670748"/><text x="100.0898%" y="367.50"></text></g><g><title>QUEUE_TEST (2,592,950,781,941 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(247,200,46)" fg:x="0" fg:w="2592950781941"/><text x="0.2500%" y="495.50">QUEUE_TEST</text></g><g><title>syscall_return_via_sysret (2,960,196,557 samples, 0.11%)</title><rect x="99.8858%" y="469" width="0.1142%" height="15" fill="rgb(218,76,16)" fg:x="2589990585384" fg:w="2960196557"/><text x="100.1358%" y="479.50"></text></g><g><title>all (2,592,950,813,312 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(225,21,48)" fg:x="0" fg:w="2592950813312"/><text x="0.2500%" y="511.50"></text></g></svg></svg>